//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PlayerAudit1063.WEBService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getGameSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveGameSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSettings90OperationCompleted;
        
        private System.Threading.SendOrPostCallback getSettings90OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSettingsPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSettingsPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSysDataForLastArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSysDataForLastTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSysDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSysDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSettings24OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSettings24OperationCompleted;
        
        private System.Threading.SendOrPostCallback getSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisCardPCBListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllDiscardedCardsForGameIDRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllDiscardedCardsForGameIDRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDiscardCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDiscardCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveOdds24DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOddsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveGameRecoveryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGameRecoveryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGameRecoveryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback addToGameSysPlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGamePlayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSoundsOperationCompleted;
        
        private System.Threading.SendOrPostCallback areEGMSoundsOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUpdateStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUpdateStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewPINOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPINDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback anyPINsArePlayingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPINsWithBalancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPINsForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllPINsForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePINOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPINsForDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPINsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRedemptionListPINsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginPINOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePINForPlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePINRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRepurchaseTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPendingRepurchasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepurchasesForPINOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepurchasesForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepurchaseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRepurchaseRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllRepurchasesForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewRepurchaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRedemptionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRedemptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRedemptionsFromDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRedemptionsForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllRedemptionsForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRedemptionsForTransactionRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveRedemptionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSessionDefPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSessionGameDefPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSessionDefDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSessionGameDefDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSessionDefPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSessionDefPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSessionGameDefPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSessionDefPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSessionGameDefPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSessionPCBForLastGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeSessionPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSessionsPCBForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSessionsPCBDataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllSessionsPCBDataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSessionGamesPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAndStartSessionPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurSessionPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSessionPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSessionReportPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeGamePCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGamePCBPrizeAmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGameBallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAndStartGamePCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveGamePCBDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllGamePCBDataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllGamePCBDataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllGamePCBDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentGamePCBDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGamePCBDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBallNumsLCS16OperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGameBallsLCS16OperationCompleted;
        
        private System.Threading.SendOrPostCallback getBallNumsS16OperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGameBallsS16OperationCompleted;
        
        private System.Threading.SendOrPostCallback getBallNumsLCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGameBallsLCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeGame24OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveGame24DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllGame24DataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllGame24DataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllGame24DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentGame24ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAll4CurrentGame24DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentGame24DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGame24DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveProgressiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback addToProgressiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgressiveWinAmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgressiveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPOSErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCallerLogListOperationCompleted;
        
        private System.Threading.SendOrPostCallback logErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback logPOSLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback logCallerLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCards24OperationCompleted;
        
        private System.Threading.SendOrPostCallback getCard24OperationCompleted;
        
        private System.Threading.SendOrPostCallback updateBonus24OperationCompleted;
        
        private System.Threading.SendOrPostCallback getBonus24OperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSalesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSalesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSalesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSalesDataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllSalesDataForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllPOSetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePOSetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPOSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPOSetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback savePOSetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllBingoPatternDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllBingoPatternsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBingoPatternDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveBingoPatternDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback initializeDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback lastErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLastErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAutoBallsRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextAutoBallRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAutoBallRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAutoBallRecordCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDataByLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDataByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUserDataByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayerCountForGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMachineStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMachineStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeGameFromEGMOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerGameOnEGMOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEGMGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllInstalledGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInstalledGameDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateInstalledGameDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteInstalledGameDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllEGMTerminalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEGMTerminalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMachineDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAndMoveCardIndexPositionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveCardIndexPositionsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePlaysRecForBalancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCardToPlayPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback savePlayDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPlaysForGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPlaysForPINOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllPlaysForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePlayRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPlaysForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPlaysGameSysForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWinRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWinnnerRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllWinsForGameRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWinDataForGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllWinDataForGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllWinDataForGameRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWinDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWinDataForPlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveWinnerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllVerifiedWinnersForPINOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWinnerListForDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllWinnersForPlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllWinners24ForPlayIDRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllWinners24ForPlayIDRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWinnerData24OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveWinnerData24OperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWinningCardPCBStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWinningCardPCBRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback createWinningCardPCBRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback anyWinnersYetPCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWinningCardPCBDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWinningCardPCBListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllWinnersPCBForPlayIDRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWinnerPCBRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWinnersForGamePCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWinnersPCBForGameIDRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback uniquePINOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::PlayerAudit1063.Properties.Settings.Default.PlayerAudit1013_WEBService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getGameSettingsCompletedEventHandler getGameSettingsCompleted;
        
        /// <remarks/>
        public event saveGameSettingsCompletedEventHandler saveGameSettingsCompleted;
        
        /// <remarks/>
        public event saveSettings90CompletedEventHandler saveSettings90Completed;
        
        /// <remarks/>
        public event getSettings90CompletedEventHandler getSettings90Completed;
        
        /// <remarks/>
        public event saveSettingsPCBCompletedEventHandler saveSettingsPCBCompleted;
        
        /// <remarks/>
        public event getSettingsPCBCompletedEventHandler getSettingsPCBCompleted;
        
        /// <remarks/>
        public event updateSysDataForLastArchiveCompletedEventHandler updateSysDataForLastArchiveCompleted;
        
        /// <remarks/>
        public event updateSysDataForLastTransactionCompletedEventHandler updateSysDataForLastTransactionCompleted;
        
        /// <remarks/>
        public event saveSysDataCompletedEventHandler saveSysDataCompleted;
        
        /// <remarks/>
        public event getSysDataCompletedEventHandler getSysDataCompleted;
        
        /// <remarks/>
        public event getSettings24CompletedEventHandler getSettings24Completed;
        
        /// <remarks/>
        public event saveSettings24CompletedEventHandler saveSettings24Completed;
        
        /// <remarks/>
        public event getSettingsCompletedEventHandler getSettingsCompleted;
        
        /// <remarks/>
        public event saveSettingsCompletedEventHandler saveSettingsCompleted;
        
        /// <remarks/>
        public event getDisCardPCBListCompletedEventHandler getDisCardPCBListCompleted;
        
        /// <remarks/>
        public event getAllDiscardedCardsForGameIDRangeCompletedEventHandler getAllDiscardedCardsForGameIDRangeCompleted;
        
        /// <remarks/>
        public event deleteAllDiscardedCardsForGameIDRangeCompletedEventHandler deleteAllDiscardedCardsForGameIDRangeCompleted;
        
        /// <remarks/>
        public event createDiscardCardCompletedEventHandler createDiscardCardCompleted;
        
        /// <remarks/>
        public event getDiscardCardCompletedEventHandler getDiscardCardCompleted;
        
        /// <remarks/>
        public event saveOdds24DataCompletedEventHandler saveOdds24DataCompleted;
        
        /// <remarks/>
        public event getOddsListCompletedEventHandler getOddsListCompleted;
        
        /// <remarks/>
        public event saveGameRecoveryDataCompletedEventHandler saveGameRecoveryDataCompleted;
        
        /// <remarks/>
        public event getGameRecoveryDataCompletedEventHandler getGameRecoveryDataCompleted;
        
        /// <remarks/>
        public event deleteGameRecoveryDataCompletedEventHandler deleteGameRecoveryDataCompleted;
        
        /// <remarks/>
        public event addToGameSysPlayCompletedEventHandler addToGameSysPlayCompleted;
        
        /// <remarks/>
        public event getGamePlayListCompletedEventHandler getGamePlayListCompleted;
        
        /// <remarks/>
        public event setSoundsCompletedEventHandler setSoundsCompleted;
        
        /// <remarks/>
        public event areEGMSoundsOffCompletedEventHandler areEGMSoundsOffCompleted;
        
        /// <remarks/>
        public event getUpdateStringCompletedEventHandler getUpdateStringCompleted;
        
        /// <remarks/>
        public event setUpdateStringCompletedEventHandler setUpdateStringCompleted;
        
        /// <remarks/>
        public event createNewPINCompletedEventHandler createNewPINCompleted;
        
        /// <remarks/>
        public event getPINDataCompletedEventHandler getPINDataCompleted;
        
        /// <remarks/>
        public event anyPINsArePlayingCompletedEventHandler anyPINsArePlayingCompleted;
        
        /// <remarks/>
        public event getAllPINsWithBalancesCompletedEventHandler getAllPINsWithBalancesCompleted;
        
        /// <remarks/>
        public event getAllPINsForDateRangeCompletedEventHandler getAllPINsForDateRangeCompleted;
        
        /// <remarks/>
        public event deleteAllPINsForDateRangeCompletedEventHandler deleteAllPINsForDateRangeCompleted;
        
        /// <remarks/>
        public event deletePINCompletedEventHandler deletePINCompleted;
        
        /// <remarks/>
        public event getAllPINsForDateCompletedEventHandler getAllPINsForDateCompleted;
        
        /// <remarks/>
        public event getAllPINsCompletedEventHandler getAllPINsCompleted;
        
        /// <remarks/>
        public event getRedemptionListPINsCompletedEventHandler getRedemptionListPINsCompleted;
        
        /// <remarks/>
        public event loginPINCompletedEventHandler loginPINCompleted;
        
        /// <remarks/>
        public event updatePINForPlayCompletedEventHandler updatePINForPlayCompleted;
        
        /// <remarks/>
        public event updatePINRecCompletedEventHandler updatePINRecCompleted;
        
        /// <remarks/>
        public event doRepurchaseTransactionCompletedEventHandler doRepurchaseTransactionCompleted;
        
        /// <remarks/>
        public event getPendingRepurchasesCompletedEventHandler getPendingRepurchasesCompleted;
        
        /// <remarks/>
        public event getRepurchasesForPINCompletedEventHandler getRepurchasesForPINCompleted;
        
        /// <remarks/>
        public event getRepurchasesForDateRangeCompletedEventHandler getRepurchasesForDateRangeCompleted;
        
        /// <remarks/>
        public event getRepurchaseStatusCompletedEventHandler getRepurchaseStatusCompleted;
        
        /// <remarks/>
        public event deleteRepurchaseRecCompletedEventHandler deleteRepurchaseRecCompleted;
        
        /// <remarks/>
        public event deleteAllRepurchasesForDateRangeCompletedEventHandler deleteAllRepurchasesForDateRangeCompleted;
        
        /// <remarks/>
        public event createNewRepurchaseCompletedEventHandler createNewRepurchaseCompleted;
        
        /// <remarks/>
        public event getRedemptionDataCompletedEventHandler getRedemptionDataCompleted;
        
        /// <remarks/>
        public event getAllRedemptionsCompletedEventHandler getAllRedemptionsCompleted;
        
        /// <remarks/>
        public event getRedemptionsFromDateCompletedEventHandler getRedemptionsFromDateCompleted;
        
        /// <remarks/>
        public event getAllRedemptionsForDateRangeCompletedEventHandler getAllRedemptionsForDateRangeCompleted;
        
        /// <remarks/>
        public event deleteAllRedemptionsForDateRangeCompletedEventHandler deleteAllRedemptionsForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllRedemptionsForTransactionRangeCompletedEventHandler getAllRedemptionsForTransactionRangeCompleted;
        
        /// <remarks/>
        public event saveRedemptionDataCompletedEventHandler saveRedemptionDataCompleted;
        
        /// <remarks/>
        public event GetAllSessionDefPCBCompletedEventHandler GetAllSessionDefPCBCompleted;
        
        /// <remarks/>
        public event GetAllSessionGameDefPCBCompletedEventHandler GetAllSessionGameDefPCBCompleted;
        
        /// <remarks/>
        public event saveSessionDefDataCompletedEventHandler saveSessionDefDataCompleted;
        
        /// <remarks/>
        public event saveSessionGameDefDataCompletedEventHandler saveSessionGameDefDataCompleted;
        
        /// <remarks/>
        public event updateSessionDefPCBCompletedEventHandler updateSessionDefPCBCompleted;
        
        /// <remarks/>
        public event getSessionDefPCBCompletedEventHandler getSessionDefPCBCompleted;
        
        /// <remarks/>
        public event getSessionGameDefPCBCompletedEventHandler getSessionGameDefPCBCompleted;
        
        /// <remarks/>
        public event deleteSessionDefPCBCompletedEventHandler deleteSessionDefPCBCompleted;
        
        /// <remarks/>
        public event deleteSessionGameDefPCBCompletedEventHandler deleteSessionGameDefPCBCompleted;
        
        /// <remarks/>
        public event updateSessionPCBForLastGameCompletedEventHandler updateSessionPCBForLastGameCompleted;
        
        /// <remarks/>
        public event closeSessionPCBCompletedEventHandler closeSessionPCBCompleted;
        
        /// <remarks/>
        public event getAllSessionsPCBForDateRangeCompletedEventHandler getAllSessionsPCBForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllSessionsPCBDataForDateRangeCompletedEventHandler getAllSessionsPCBDataForDateRangeCompleted;
        
        /// <remarks/>
        public event deleteAllSessionsPCBDataForDateRangeCompletedEventHandler deleteAllSessionsPCBDataForDateRangeCompleted;
        
        /// <remarks/>
        public event GetAllSessionGamesPCBCompletedEventHandler GetAllSessionGamesPCBCompleted;
        
        /// <remarks/>
        public event createAndStartSessionPCBCompletedEventHandler createAndStartSessionPCBCompleted;
        
        /// <remarks/>
        public event getCurSessionPCBCompletedEventHandler getCurSessionPCBCompleted;
        
        /// <remarks/>
        public event getSessionPCBCompletedEventHandler getSessionPCBCompleted;
        
        /// <remarks/>
        public event getSessionReportPCBCompletedEventHandler getSessionReportPCBCompleted;
        
        /// <remarks/>
        public event closeGamePCBCompletedEventHandler closeGamePCBCompleted;
        
        /// <remarks/>
        public event addGamePCBPrizeAmtCompletedEventHandler addGamePCBPrizeAmtCompleted;
        
        /// <remarks/>
        public event updateGameBallsCompletedEventHandler updateGameBallsCompleted;
        
        /// <remarks/>
        public event saveAndStartGamePCBCompletedEventHandler saveAndStartGamePCBCompleted;
        
        /// <remarks/>
        public event saveGamePCBDataCompletedEventHandler saveGamePCBDataCompleted;
        
        /// <remarks/>
        public event deleteAllGamePCBDataForDateRangeCompletedEventHandler deleteAllGamePCBDataForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllGamePCBDataForDateRangeCompletedEventHandler getAllGamePCBDataForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllGamePCBDataCompletedEventHandler getAllGamePCBDataCompleted;
        
        /// <remarks/>
        public event getCurrentGamePCBDataCompletedEventHandler getCurrentGamePCBDataCompleted;
        
        /// <remarks/>
        public event getGamePCBDataCompletedEventHandler getGamePCBDataCompleted;
        
        /// <remarks/>
        public event getBallNumsLCS16CompletedEventHandler getBallNumsLCS16Completed;
        
        /// <remarks/>
        public event updateGameBallsLCS16CompletedEventHandler updateGameBallsLCS16Completed;
        
        /// <remarks/>
        public event getBallNumsS16CompletedEventHandler getBallNumsS16Completed;
        
        /// <remarks/>
        public event updateGameBallsS16CompletedEventHandler updateGameBallsS16Completed;
        
        /// <remarks/>
        public event getBallNumsLCBCompletedEventHandler getBallNumsLCBCompleted;
        
        /// <remarks/>
        public event updateGameBallsLCBCompletedEventHandler updateGameBallsLCBCompleted;
        
        /// <remarks/>
        public event closeGameCompletedEventHandler closeGameCompleted;
        
        /// <remarks/>
        public event closeGamesCompletedEventHandler closeGamesCompleted;
        
        /// <remarks/>
        public event closeGame24CompletedEventHandler closeGame24Completed;
        
        /// <remarks/>
        public event saveGame24DataCompletedEventHandler saveGame24DataCompleted;
        
        /// <remarks/>
        public event deleteAllGame24DataForDateRangeCompletedEventHandler deleteAllGame24DataForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllGame24DataForDateRangeCompletedEventHandler getAllGame24DataForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllGame24DataCompletedEventHandler getAllGame24DataCompleted;
        
        /// <remarks/>
        public event getCurrentGame24ListCompletedEventHandler getCurrentGame24ListCompleted;
        
        /// <remarks/>
        public event getAll4CurrentGame24DataCompletedEventHandler getAll4CurrentGame24DataCompleted;
        
        /// <remarks/>
        public event getCurrentGame24DataCompletedEventHandler getCurrentGame24DataCompleted;
        
        /// <remarks/>
        public event getGame24DataCompletedEventHandler getGame24DataCompleted;
        
        /// <remarks/>
        public event saveProgressiveCompletedEventHandler saveProgressiveCompleted;
        
        /// <remarks/>
        public event addToProgressiveCompletedEventHandler addToProgressiveCompleted;
        
        /// <remarks/>
        public event getProgressiveWinAmtCompletedEventHandler getProgressiveWinAmtCompleted;
        
        /// <remarks/>
        public event getProgressiveDataCompletedEventHandler getProgressiveDataCompleted;
        
        /// <remarks/>
        public event getServerDateTimeCompletedEventHandler getServerDateTimeCompleted;
        
        /// <remarks/>
        public event getPOSErrorListCompletedEventHandler getPOSErrorListCompleted;
        
        /// <remarks/>
        public event getErrorListCompletedEventHandler getErrorListCompleted;
        
        /// <remarks/>
        public event getCallerLogListCompletedEventHandler getCallerLogListCompleted;
        
        /// <remarks/>
        public event logErrorCompletedEventHandler logErrorCompleted;
        
        /// <remarks/>
        public event logPOSLogCompletedEventHandler logPOSLogCompleted;
        
        /// <remarks/>
        public event logCallerLogCompletedEventHandler logCallerLogCompleted;
        
        /// <remarks/>
        public event getLocationCodeCompletedEventHandler getLocationCodeCompleted;
        
        /// <remarks/>
        public event getCards24CompletedEventHandler getCards24Completed;
        
        /// <remarks/>
        public event getCard24CompletedEventHandler getCard24Completed;
        
        /// <remarks/>
        public event updateBonus24CompletedEventHandler updateBonus24Completed;
        
        /// <remarks/>
        public event getBonus24CompletedEventHandler getBonus24Completed;
        
        /// <remarks/>
        public event updateSalesDataCompletedEventHandler updateSalesDataCompleted;
        
        /// <remarks/>
        public event saveSalesDataCompletedEventHandler saveSalesDataCompleted;
        
        /// <remarks/>
        public event getSalesDataCompletedEventHandler getSalesDataCompleted;
        
        /// <remarks/>
        public event getAllSalesDataForDateRangeCompletedEventHandler getAllSalesDataForDateRangeCompleted;
        
        /// <remarks/>
        public event deleteAllSalesDataForDateRangeCompletedEventHandler deleteAllSalesDataForDateRangeCompleted;
        
        /// <remarks/>
        public event deleteAllPOSetDataCompletedEventHandler deleteAllPOSetDataCompleted;
        
        /// <remarks/>
        public event deletePOSetDataCompletedEventHandler deletePOSetDataCompleted;
        
        /// <remarks/>
        public event getAllPOSetsCompletedEventHandler getAllPOSetsCompleted;
        
        /// <remarks/>
        public event getPOSetDataCompletedEventHandler getPOSetDataCompleted;
        
        /// <remarks/>
        public event savePOSetDataCompletedEventHandler savePOSetDataCompleted;
        
        /// <remarks/>
        public event deleteAllBingoPatternDataCompletedEventHandler deleteAllBingoPatternDataCompleted;
        
        /// <remarks/>
        public event getAllBingoPatternsCompletedEventHandler getAllBingoPatternsCompleted;
        
        /// <remarks/>
        public event getBingoPatternDataCompletedEventHandler getBingoPatternDataCompleted;
        
        /// <remarks/>
        public event saveBingoPatternDataCompletedEventHandler saveBingoPatternDataCompleted;
        
        /// <remarks/>
        public event initializeDBCompletedEventHandler initializeDBCompleted;
        
        /// <remarks/>
        public event lastErrorCompletedEventHandler lastErrorCompleted;
        
        /// <remarks/>
        public event setLastErrorCompletedEventHandler setLastErrorCompleted;
        
        /// <remarks/>
        public event saveAutoBallsRecordCompletedEventHandler saveAutoBallsRecordCompleted;
        
        /// <remarks/>
        public event getNextAutoBallRecordCompletedEventHandler getNextAutoBallRecordCompleted;
        
        /// <remarks/>
        public event getAutoBallRecordCompletedEventHandler getAutoBallRecordCompleted;
        
        /// <remarks/>
        public event getAutoBallRecordCountCompletedEventHandler getAutoBallRecordCountCompleted;
        
        /// <remarks/>
        public event getAllUsersCompletedEventHandler getAllUsersCompleted;
        
        /// <remarks/>
        public event deleteUserByUserIDCompletedEventHandler deleteUserByUserIDCompleted;
        
        /// <remarks/>
        public event getUserDataByLoginNameCompletedEventHandler getUserDataByLoginNameCompleted;
        
        /// <remarks/>
        public event getUserDataByUserIDCompletedEventHandler getUserDataByUserIDCompleted;
        
        /// <remarks/>
        public event updateUserDataByUserIDCompletedEventHandler updateUserDataByUserIDCompleted;
        
        /// <remarks/>
        public event createNewUserDataCompletedEventHandler createNewUserDataCompleted;
        
        /// <remarks/>
        public event getPlayerCountForGameCompletedEventHandler getPlayerCountForGameCompleted;
        
        /// <remarks/>
        public event getMachineStatusCompletedEventHandler getMachineStatusCompleted;
        
        /// <remarks/>
        public event updateMachineStatusCompletedEventHandler updateMachineStatusCompleted;
        
        /// <remarks/>
        public event removeGameFromEGMCompletedEventHandler removeGameFromEGMCompleted;
        
        /// <remarks/>
        public event registerGameOnEGMCompletedEventHandler registerGameOnEGMCompleted;
        
        /// <remarks/>
        public event getEGMGamesCompletedEventHandler getEGMGamesCompleted;
        
        /// <remarks/>
        public event getAllInstalledGamesCompletedEventHandler getAllInstalledGamesCompleted;
        
        /// <remarks/>
        public event getInstalledGameDataCompletedEventHandler getInstalledGameDataCompleted;
        
        /// <remarks/>
        public event updateInstalledGameDataCompletedEventHandler updateInstalledGameDataCompleted;
        
        /// <remarks/>
        public event deleteInstalledGameDataCompletedEventHandler deleteInstalledGameDataCompleted;
        
        /// <remarks/>
        public event getAllEGMTerminalsCompletedEventHandler getAllEGMTerminalsCompleted;
        
        /// <remarks/>
        public event deleteEGMTerminalDataCompletedEventHandler deleteEGMTerminalDataCompleted;
        
        /// <remarks/>
        public event updateMachineDataCompletedEventHandler updateMachineDataCompleted;
        
        /// <remarks/>
        public event getAndMoveCardIndexPositionsCompletedEventHandler getAndMoveCardIndexPositionsCompleted;
        
        /// <remarks/>
        public event saveCardIndexPositionsDataCompletedEventHandler saveCardIndexPositionsDataCompleted;
        
        /// <remarks/>
        public event updatePlaysRecForBalancesCompletedEventHandler updatePlaysRecForBalancesCompleted;
        
        /// <remarks/>
        public event addCardToPlayPCBCompletedEventHandler addCardToPlayPCBCompleted;
        
        /// <remarks/>
        public event savePlayDataCompletedEventHandler savePlayDataCompleted;
        
        /// <remarks/>
        public event getPlayDataCompletedEventHandler getPlayDataCompleted;
        
        /// <remarks/>
        public event getAllPlaysForGameCompletedEventHandler getAllPlaysForGameCompleted;
        
        /// <remarks/>
        public event getAllPlaysForPINCompletedEventHandler getAllPlaysForPINCompleted;
        
        /// <remarks/>
        public event deleteAllPlaysForDateRangeCompletedEventHandler deleteAllPlaysForDateRangeCompleted;
        
        /// <remarks/>
        public event deletePlayRecordCompletedEventHandler deletePlayRecordCompleted;
        
        /// <remarks/>
        public event getAllPlaysForDateRangeCompletedEventHandler getAllPlaysForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllPlaysGameSysForDateRangeCompletedEventHandler getAllPlaysGameSysForDateRangeCompleted;
        
        /// <remarks/>
        public event updateWinRecCompletedEventHandler updateWinRecCompleted;
        
        /// <remarks/>
        public event deleteWinnnerRecCompletedEventHandler deleteWinnnerRecCompleted;
        
        /// <remarks/>
        public event deleteAllWinsForGameRangeCompletedEventHandler deleteAllWinsForGameRangeCompleted;
        
        /// <remarks/>
        public event getWinDataForGameCompletedEventHandler getWinDataForGameCompleted;
        
        /// <remarks/>
        public event getAllWinDataForGameCompletedEventHandler getAllWinDataForGameCompleted;
        
        /// <remarks/>
        public event getAllWinDataForGameRangeCompletedEventHandler getAllWinDataForGameRangeCompleted;
        
        /// <remarks/>
        public event getWinDataCompletedEventHandler getWinDataCompleted;
        
        /// <remarks/>
        public event getWinDataForPlayCompletedEventHandler getWinDataForPlayCompleted;
        
        /// <remarks/>
        public event saveWinnerDataCompletedEventHandler saveWinnerDataCompleted;
        
        /// <remarks/>
        public event getAllVerifiedWinnersForPINCompletedEventHandler getAllVerifiedWinnersForPINCompleted;
        
        /// <remarks/>
        public event getWinnerListForDateRangeCompletedEventHandler getWinnerListForDateRangeCompleted;
        
        /// <remarks/>
        public event getAllWinnersForPlayCompletedEventHandler getAllWinnersForPlayCompleted;
        
        /// <remarks/>
        public event deleteAllWinners24ForPlayIDRangeCompletedEventHandler deleteAllWinners24ForPlayIDRangeCompleted;
        
        /// <remarks/>
        public event getAllWinners24ForPlayIDRangeCompletedEventHandler getAllWinners24ForPlayIDRangeCompleted;
        
        /// <remarks/>
        public event getWinnerData24CompletedEventHandler getWinnerData24Completed;
        
        /// <remarks/>
        public event saveWinnerData24CompletedEventHandler saveWinnerData24Completed;
        
        /// <remarks/>
        public event updateWinningCardPCBStatusCompletedEventHandler updateWinningCardPCBStatusCompleted;
        
        /// <remarks/>
        public event updateWinningCardPCBRecCompletedEventHandler updateWinningCardPCBRecCompleted;
        
        /// <remarks/>
        public event createWinningCardPCBRecCompletedEventHandler createWinningCardPCBRecCompleted;
        
        /// <remarks/>
        public event anyWinnersYetPCBCompletedEventHandler anyWinnersYetPCBCompleted;
        
        /// <remarks/>
        public event getWinningCardPCBDataCompletedEventHandler getWinningCardPCBDataCompleted;
        
        /// <remarks/>
        public event getWinningCardPCBListCompletedEventHandler getWinningCardPCBListCompleted;
        
        /// <remarks/>
        public event getAllWinnersPCBForPlayIDRangeCompletedEventHandler getAllWinnersPCBForPlayIDRangeCompleted;
        
        /// <remarks/>
        public event deleteWinnerPCBRecCompletedEventHandler deleteWinnerPCBRecCompleted;
        
        /// <remarks/>
        public event deleteWinnersForGamePCBCompletedEventHandler deleteWinnersForGamePCBCompleted;
        
        /// <remarks/>
        public event deleteWinnersPCBForGameIDRangeCompletedEventHandler deleteWinnersPCBForGameIDRangeCompleted;
        
        /// <remarks/>
        public event uniquePINCompletedEventHandler uniquePINCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGameSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GameSettings getGameSettings(int gSysID) {
            object[] results = this.Invoke("getGameSettings", new object[] {
                        gSysID});
            return ((GameSettings)(results[0]));
        }
        
        /// <remarks/>
        public void getGameSettingsAsync(int gSysID) {
            this.getGameSettingsAsync(gSysID, null);
        }
        
        /// <remarks/>
        public void getGameSettingsAsync(int gSysID, object userState) {
            if ((this.getGameSettingsOperationCompleted == null)) {
                this.getGameSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGameSettingsOperationCompleted);
            }
            this.InvokeAsync("getGameSettings", new object[] {
                        gSysID}, this.getGameSettingsOperationCompleted, userState);
        }
        
        private void OngetGameSettingsOperationCompleted(object arg) {
            if ((this.getGameSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGameSettingsCompleted(this, new getGameSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveGameSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveGameSettings(GameSettings nSets) {
            object[] results = this.Invoke("saveGameSettings", new object[] {
                        nSets});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveGameSettingsAsync(GameSettings nSets) {
            this.saveGameSettingsAsync(nSets, null);
        }
        
        /// <remarks/>
        public void saveGameSettingsAsync(GameSettings nSets, object userState) {
            if ((this.saveGameSettingsOperationCompleted == null)) {
                this.saveGameSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveGameSettingsOperationCompleted);
            }
            this.InvokeAsync("saveGameSettings", new object[] {
                        nSets}, this.saveGameSettingsOperationCompleted, userState);
        }
        
        private void OnsaveGameSettingsOperationCompleted(object arg) {
            if ((this.saveGameSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveGameSettingsCompleted(this, new saveGameSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSettings90", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveSettings90(Settings90 nSets) {
            object[] results = this.Invoke("saveSettings90", new object[] {
                        nSets});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveSettings90Async(Settings90 nSets) {
            this.saveSettings90Async(nSets, null);
        }
        
        /// <remarks/>
        public void saveSettings90Async(Settings90 nSets, object userState) {
            if ((this.saveSettings90OperationCompleted == null)) {
                this.saveSettings90OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSettings90OperationCompleted);
            }
            this.InvokeAsync("saveSettings90", new object[] {
                        nSets}, this.saveSettings90OperationCompleted, userState);
        }
        
        private void OnsaveSettings90OperationCompleted(object arg) {
            if ((this.saveSettings90Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSettings90Completed(this, new saveSettings90CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSettings90", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Settings90 getSettings90() {
            object[] results = this.Invoke("getSettings90", new object[0]);
            return ((Settings90)(results[0]));
        }
        
        /// <remarks/>
        public void getSettings90Async() {
            this.getSettings90Async(null);
        }
        
        /// <remarks/>
        public void getSettings90Async(object userState) {
            if ((this.getSettings90OperationCompleted == null)) {
                this.getSettings90OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSettings90OperationCompleted);
            }
            this.InvokeAsync("getSettings90", new object[0], this.getSettings90OperationCompleted, userState);
        }
        
        private void OngetSettings90OperationCompleted(object arg) {
            if ((this.getSettings90Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSettings90Completed(this, new getSettings90CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSettingsPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveSettingsPCB(SettingsPCB nSets) {
            object[] results = this.Invoke("saveSettingsPCB", new object[] {
                        nSets});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveSettingsPCBAsync(SettingsPCB nSets) {
            this.saveSettingsPCBAsync(nSets, null);
        }
        
        /// <remarks/>
        public void saveSettingsPCBAsync(SettingsPCB nSets, object userState) {
            if ((this.saveSettingsPCBOperationCompleted == null)) {
                this.saveSettingsPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSettingsPCBOperationCompleted);
            }
            this.InvokeAsync("saveSettingsPCB", new object[] {
                        nSets}, this.saveSettingsPCBOperationCompleted, userState);
        }
        
        private void OnsaveSettingsPCBOperationCompleted(object arg) {
            if ((this.saveSettingsPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSettingsPCBCompleted(this, new saveSettingsPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSettingsPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SettingsPCB getSettingsPCB() {
            object[] results = this.Invoke("getSettingsPCB", new object[0]);
            return ((SettingsPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getSettingsPCBAsync() {
            this.getSettingsPCBAsync(null);
        }
        
        /// <remarks/>
        public void getSettingsPCBAsync(object userState) {
            if ((this.getSettingsPCBOperationCompleted == null)) {
                this.getSettingsPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSettingsPCBOperationCompleted);
            }
            this.InvokeAsync("getSettingsPCB", new object[0], this.getSettingsPCBOperationCompleted, userState);
        }
        
        private void OngetSettingsPCBOperationCompleted(object arg) {
            if ((this.getSettingsPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSettingsPCBCompleted(this, new getSettingsPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSysDataForLastArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateSysDataForLastArchive(System.DateTime lDate) {
            object[] results = this.Invoke("updateSysDataForLastArchive", new object[] {
                        lDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateSysDataForLastArchiveAsync(System.DateTime lDate) {
            this.updateSysDataForLastArchiveAsync(lDate, null);
        }
        
        /// <remarks/>
        public void updateSysDataForLastArchiveAsync(System.DateTime lDate, object userState) {
            if ((this.updateSysDataForLastArchiveOperationCompleted == null)) {
                this.updateSysDataForLastArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSysDataForLastArchiveOperationCompleted);
            }
            this.InvokeAsync("updateSysDataForLastArchive", new object[] {
                        lDate}, this.updateSysDataForLastArchiveOperationCompleted, userState);
        }
        
        private void OnupdateSysDataForLastArchiveOperationCompleted(object arg) {
            if ((this.updateSysDataForLastArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSysDataForLastArchiveCompleted(this, new updateSysDataForLastArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSysDataForLastTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateSysDataForLastTransaction(System.DateTime lDate, int lTransID) {
            object[] results = this.Invoke("updateSysDataForLastTransaction", new object[] {
                        lDate,
                        lTransID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateSysDataForLastTransactionAsync(System.DateTime lDate, int lTransID) {
            this.updateSysDataForLastTransactionAsync(lDate, lTransID, null);
        }
        
        /// <remarks/>
        public void updateSysDataForLastTransactionAsync(System.DateTime lDate, int lTransID, object userState) {
            if ((this.updateSysDataForLastTransactionOperationCompleted == null)) {
                this.updateSysDataForLastTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSysDataForLastTransactionOperationCompleted);
            }
            this.InvokeAsync("updateSysDataForLastTransaction", new object[] {
                        lDate,
                        lTransID}, this.updateSysDataForLastTransactionOperationCompleted, userState);
        }
        
        private void OnupdateSysDataForLastTransactionOperationCompleted(object arg) {
            if ((this.updateSysDataForLastTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSysDataForLastTransactionCompleted(this, new updateSysDataForLastTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSysData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveSysData(SysData s) {
            object[] results = this.Invoke("saveSysData", new object[] {
                        s});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveSysDataAsync(SysData s) {
            this.saveSysDataAsync(s, null);
        }
        
        /// <remarks/>
        public void saveSysDataAsync(SysData s, object userState) {
            if ((this.saveSysDataOperationCompleted == null)) {
                this.saveSysDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSysDataOperationCompleted);
            }
            this.InvokeAsync("saveSysData", new object[] {
                        s}, this.saveSysDataOperationCompleted, userState);
        }
        
        private void OnsaveSysDataOperationCompleted(object arg) {
            if ((this.saveSysDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSysDataCompleted(this, new saveSysDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSysData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SysData getSysData() {
            object[] results = this.Invoke("getSysData", new object[0]);
            return ((SysData)(results[0]));
        }
        
        /// <remarks/>
        public void getSysDataAsync() {
            this.getSysDataAsync(null);
        }
        
        /// <remarks/>
        public void getSysDataAsync(object userState) {
            if ((this.getSysDataOperationCompleted == null)) {
                this.getSysDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSysDataOperationCompleted);
            }
            this.InvokeAsync("getSysData", new object[0], this.getSysDataOperationCompleted, userState);
        }
        
        private void OngetSysDataOperationCompleted(object arg) {
            if ((this.getSysDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSysDataCompleted(this, new getSysDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSettings24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Settings24 getSettings24() {
            object[] results = this.Invoke("getSettings24", new object[0]);
            return ((Settings24)(results[0]));
        }
        
        /// <remarks/>
        public void getSettings24Async() {
            this.getSettings24Async(null);
        }
        
        /// <remarks/>
        public void getSettings24Async(object userState) {
            if ((this.getSettings24OperationCompleted == null)) {
                this.getSettings24OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSettings24OperationCompleted);
            }
            this.InvokeAsync("getSettings24", new object[0], this.getSettings24OperationCompleted, userState);
        }
        
        private void OngetSettings24OperationCompleted(object arg) {
            if ((this.getSettings24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSettings24Completed(this, new getSettings24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSettings24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveSettings24(Settings24 s) {
            object[] results = this.Invoke("saveSettings24", new object[] {
                        s});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveSettings24Async(Settings24 s) {
            this.saveSettings24Async(s, null);
        }
        
        /// <remarks/>
        public void saveSettings24Async(Settings24 s, object userState) {
            if ((this.saveSettings24OperationCompleted == null)) {
                this.saveSettings24OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSettings24OperationCompleted);
            }
            this.InvokeAsync("saveSettings24", new object[] {
                        s}, this.saveSettings24OperationCompleted, userState);
        }
        
        private void OnsaveSettings24OperationCompleted(object arg) {
            if ((this.saveSettings24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSettings24Completed(this, new saveSettings24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Settings getSettings() {
            object[] results = this.Invoke("getSettings", new object[0]);
            return ((Settings)(results[0]));
        }
        
        /// <remarks/>
        public void getSettingsAsync() {
            this.getSettingsAsync(null);
        }
        
        /// <remarks/>
        public void getSettingsAsync(object userState) {
            if ((this.getSettingsOperationCompleted == null)) {
                this.getSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSettingsOperationCompleted);
            }
            this.InvokeAsync("getSettings", new object[0], this.getSettingsOperationCompleted, userState);
        }
        
        private void OngetSettingsOperationCompleted(object arg) {
            if ((this.getSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSettingsCompleted(this, new getSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveSettings(Settings s) {
            object[] results = this.Invoke("saveSettings", new object[] {
                        s});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveSettingsAsync(Settings s) {
            this.saveSettingsAsync(s, null);
        }
        
        /// <remarks/>
        public void saveSettingsAsync(Settings s, object userState) {
            if ((this.saveSettingsOperationCompleted == null)) {
                this.saveSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSettingsOperationCompleted);
            }
            this.InvokeAsync("saveSettings", new object[] {
                        s}, this.saveSettingsOperationCompleted, userState);
        }
        
        private void OnsaveSettingsOperationCompleted(object arg) {
            if ((this.saveSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSettingsCompleted(this, new saveSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDisCardPCBList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DiscardedCards[] getDisCardPCBList(int gID, int pin) {
            object[] results = this.Invoke("getDisCardPCBList", new object[] {
                        gID,
                        pin});
            return ((DiscardedCards[])(results[0]));
        }
        
        /// <remarks/>
        public void getDisCardPCBListAsync(int gID, int pin) {
            this.getDisCardPCBListAsync(gID, pin, null);
        }
        
        /// <remarks/>
        public void getDisCardPCBListAsync(int gID, int pin, object userState) {
            if ((this.getDisCardPCBListOperationCompleted == null)) {
                this.getDisCardPCBListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisCardPCBListOperationCompleted);
            }
            this.InvokeAsync("getDisCardPCBList", new object[] {
                        gID,
                        pin}, this.getDisCardPCBListOperationCompleted, userState);
        }
        
        private void OngetDisCardPCBListOperationCompleted(object arg) {
            if ((this.getDisCardPCBListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisCardPCBListCompleted(this, new getDisCardPCBListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllDiscardedCardsForGameIDRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DiscardedCards[] getAllDiscardedCardsForGameIDRange(int sID, int eID) {
            object[] results = this.Invoke("getAllDiscardedCardsForGameIDRange", new object[] {
                        sID,
                        eID});
            return ((DiscardedCards[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllDiscardedCardsForGameIDRangeAsync(int sID, int eID) {
            this.getAllDiscardedCardsForGameIDRangeAsync(sID, eID, null);
        }
        
        /// <remarks/>
        public void getAllDiscardedCardsForGameIDRangeAsync(int sID, int eID, object userState) {
            if ((this.getAllDiscardedCardsForGameIDRangeOperationCompleted == null)) {
                this.getAllDiscardedCardsForGameIDRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDiscardedCardsForGameIDRangeOperationCompleted);
            }
            this.InvokeAsync("getAllDiscardedCardsForGameIDRange", new object[] {
                        sID,
                        eID}, this.getAllDiscardedCardsForGameIDRangeOperationCompleted, userState);
        }
        
        private void OngetAllDiscardedCardsForGameIDRangeOperationCompleted(object arg) {
            if ((this.getAllDiscardedCardsForGameIDRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllDiscardedCardsForGameIDRangeCompleted(this, new getAllDiscardedCardsForGameIDRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllDiscardedCardsForGameIDRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllDiscardedCardsForGameIDRange(int sID, int eID) {
            object[] results = this.Invoke("deleteAllDiscardedCardsForGameIDRange", new object[] {
                        sID,
                        eID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllDiscardedCardsForGameIDRangeAsync(int sID, int eID) {
            this.deleteAllDiscardedCardsForGameIDRangeAsync(sID, eID, null);
        }
        
        /// <remarks/>
        public void deleteAllDiscardedCardsForGameIDRangeAsync(int sID, int eID, object userState) {
            if ((this.deleteAllDiscardedCardsForGameIDRangeOperationCompleted == null)) {
                this.deleteAllDiscardedCardsForGameIDRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllDiscardedCardsForGameIDRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllDiscardedCardsForGameIDRange", new object[] {
                        sID,
                        eID}, this.deleteAllDiscardedCardsForGameIDRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllDiscardedCardsForGameIDRangeOperationCompleted(object arg) {
            if ((this.deleteAllDiscardedCardsForGameIDRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllDiscardedCardsForGameIDRangeCompleted(this, new deleteAllDiscardedCardsForGameIDRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createDiscardCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createDiscardCard(DiscardedCards dCard) {
            object[] results = this.Invoke("createDiscardCard", new object[] {
                        dCard});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createDiscardCardAsync(DiscardedCards dCard) {
            this.createDiscardCardAsync(dCard, null);
        }
        
        /// <remarks/>
        public void createDiscardCardAsync(DiscardedCards dCard, object userState) {
            if ((this.createDiscardCardOperationCompleted == null)) {
                this.createDiscardCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDiscardCardOperationCompleted);
            }
            this.InvokeAsync("createDiscardCard", new object[] {
                        dCard}, this.createDiscardCardOperationCompleted, userState);
        }
        
        private void OncreateDiscardCardOperationCompleted(object arg) {
            if ((this.createDiscardCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDiscardCardCompleted(this, new createDiscardCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDiscardCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DiscardedCards getDiscardCard(int gID, int pin, int cNum) {
            object[] results = this.Invoke("getDiscardCard", new object[] {
                        gID,
                        pin,
                        cNum});
            return ((DiscardedCards)(results[0]));
        }
        
        /// <remarks/>
        public void getDiscardCardAsync(int gID, int pin, int cNum) {
            this.getDiscardCardAsync(gID, pin, cNum, null);
        }
        
        /// <remarks/>
        public void getDiscardCardAsync(int gID, int pin, int cNum, object userState) {
            if ((this.getDiscardCardOperationCompleted == null)) {
                this.getDiscardCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDiscardCardOperationCompleted);
            }
            this.InvokeAsync("getDiscardCard", new object[] {
                        gID,
                        pin,
                        cNum}, this.getDiscardCardOperationCompleted, userState);
        }
        
        private void OngetDiscardCardOperationCompleted(object arg) {
            if ((this.getDiscardCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDiscardCardCompleted(this, new getDiscardCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveOdds24Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveOdds24Data(int gID, string[] nOdds) {
            object[] results = this.Invoke("saveOdds24Data", new object[] {
                        gID,
                        nOdds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveOdds24DataAsync(int gID, string[] nOdds) {
            this.saveOdds24DataAsync(gID, nOdds, null);
        }
        
        /// <remarks/>
        public void saveOdds24DataAsync(int gID, string[] nOdds, object userState) {
            if ((this.saveOdds24DataOperationCompleted == null)) {
                this.saveOdds24DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveOdds24DataOperationCompleted);
            }
            this.InvokeAsync("saveOdds24Data", new object[] {
                        gID,
                        nOdds}, this.saveOdds24DataOperationCompleted, userState);
        }
        
        private void OnsaveOdds24DataOperationCompleted(object arg) {
            if ((this.saveOdds24DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveOdds24DataCompleted(this, new saveOdds24DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOddsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getOddsList(int gID) {
            object[] results = this.Invoke("getOddsList", new object[] {
                        gID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getOddsListAsync(int gID) {
            this.getOddsListAsync(gID, null);
        }
        
        /// <remarks/>
        public void getOddsListAsync(int gID, object userState) {
            if ((this.getOddsListOperationCompleted == null)) {
                this.getOddsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOddsListOperationCompleted);
            }
            this.InvokeAsync("getOddsList", new object[] {
                        gID}, this.getOddsListOperationCompleted, userState);
        }
        
        private void OngetOddsListOperationCompleted(object arg) {
            if ((this.getOddsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOddsListCompleted(this, new getOddsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveGameRecoveryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveGameRecoveryData(string tID, string nData) {
            object[] results = this.Invoke("saveGameRecoveryData", new object[] {
                        tID,
                        nData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveGameRecoveryDataAsync(string tID, string nData) {
            this.saveGameRecoveryDataAsync(tID, nData, null);
        }
        
        /// <remarks/>
        public void saveGameRecoveryDataAsync(string tID, string nData, object userState) {
            if ((this.saveGameRecoveryDataOperationCompleted == null)) {
                this.saveGameRecoveryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveGameRecoveryDataOperationCompleted);
            }
            this.InvokeAsync("saveGameRecoveryData", new object[] {
                        tID,
                        nData}, this.saveGameRecoveryDataOperationCompleted, userState);
        }
        
        private void OnsaveGameRecoveryDataOperationCompleted(object arg) {
            if ((this.saveGameRecoveryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveGameRecoveryDataCompleted(this, new saveGameRecoveryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGameRecoveryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getGameRecoveryData(string tID) {
            object[] results = this.Invoke("getGameRecoveryData", new object[] {
                        tID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGameRecoveryDataAsync(string tID) {
            this.getGameRecoveryDataAsync(tID, null);
        }
        
        /// <remarks/>
        public void getGameRecoveryDataAsync(string tID, object userState) {
            if ((this.getGameRecoveryDataOperationCompleted == null)) {
                this.getGameRecoveryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGameRecoveryDataOperationCompleted);
            }
            this.InvokeAsync("getGameRecoveryData", new object[] {
                        tID}, this.getGameRecoveryDataOperationCompleted, userState);
        }
        
        private void OngetGameRecoveryDataOperationCompleted(object arg) {
            if ((this.getGameRecoveryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGameRecoveryDataCompleted(this, new getGameRecoveryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteGameRecoveryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteGameRecoveryData(string tID) {
            object[] results = this.Invoke("deleteGameRecoveryData", new object[] {
                        tID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteGameRecoveryDataAsync(string tID) {
            this.deleteGameRecoveryDataAsync(tID, null);
        }
        
        /// <remarks/>
        public void deleteGameRecoveryDataAsync(string tID, object userState) {
            if ((this.deleteGameRecoveryDataOperationCompleted == null)) {
                this.deleteGameRecoveryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGameRecoveryDataOperationCompleted);
            }
            this.InvokeAsync("deleteGameRecoveryData", new object[] {
                        tID}, this.deleteGameRecoveryDataOperationCompleted, userState);
        }
        
        private void OndeleteGameRecoveryDataOperationCompleted(object arg) {
            if ((this.deleteGameRecoveryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGameRecoveryDataCompleted(this, new deleteGameRecoveryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addToGameSysPlay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addToGameSysPlay(int gSysID, decimal sAmt, decimal wAmt) {
            object[] results = this.Invoke("addToGameSysPlay", new object[] {
                        gSysID,
                        sAmt,
                        wAmt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addToGameSysPlayAsync(int gSysID, decimal sAmt, decimal wAmt) {
            this.addToGameSysPlayAsync(gSysID, sAmt, wAmt, null);
        }
        
        /// <remarks/>
        public void addToGameSysPlayAsync(int gSysID, decimal sAmt, decimal wAmt, object userState) {
            if ((this.addToGameSysPlayOperationCompleted == null)) {
                this.addToGameSysPlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddToGameSysPlayOperationCompleted);
            }
            this.InvokeAsync("addToGameSysPlay", new object[] {
                        gSysID,
                        sAmt,
                        wAmt}, this.addToGameSysPlayOperationCompleted, userState);
        }
        
        private void OnaddToGameSysPlayOperationCompleted(object arg) {
            if ((this.addToGameSysPlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addToGameSysPlayCompleted(this, new addToGameSysPlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGamePlayList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GamePlay[] getGamePlayList(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("getGamePlayList", new object[] {
                        sDate,
                        eDate});
            return ((GamePlay[])(results[0]));
        }
        
        /// <remarks/>
        public void getGamePlayListAsync(System.DateTime sDate, System.DateTime eDate) {
            this.getGamePlayListAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void getGamePlayListAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.getGamePlayListOperationCompleted == null)) {
                this.getGamePlayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGamePlayListOperationCompleted);
            }
            this.InvokeAsync("getGamePlayList", new object[] {
                        sDate,
                        eDate}, this.getGamePlayListOperationCompleted, userState);
        }
        
        private void OngetGamePlayListOperationCompleted(object arg) {
            if ((this.getGamePlayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGamePlayListCompleted(this, new getGamePlayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setSounds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setSounds(bool sOff) {
            object[] results = this.Invoke("setSounds", new object[] {
                        sOff});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setSoundsAsync(bool sOff) {
            this.setSoundsAsync(sOff, null);
        }
        
        /// <remarks/>
        public void setSoundsAsync(bool sOff, object userState) {
            if ((this.setSoundsOperationCompleted == null)) {
                this.setSoundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSoundsOperationCompleted);
            }
            this.InvokeAsync("setSounds", new object[] {
                        sOff}, this.setSoundsOperationCompleted, userState);
        }
        
        private void OnsetSoundsOperationCompleted(object arg) {
            if ((this.setSoundsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSoundsCompleted(this, new setSoundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/areEGMSoundsOff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool areEGMSoundsOff() {
            object[] results = this.Invoke("areEGMSoundsOff", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void areEGMSoundsOffAsync() {
            this.areEGMSoundsOffAsync(null);
        }
        
        /// <remarks/>
        public void areEGMSoundsOffAsync(object userState) {
            if ((this.areEGMSoundsOffOperationCompleted == null)) {
                this.areEGMSoundsOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnareEGMSoundsOffOperationCompleted);
            }
            this.InvokeAsync("areEGMSoundsOff", new object[0], this.areEGMSoundsOffOperationCompleted, userState);
        }
        
        private void OnareEGMSoundsOffOperationCompleted(object arg) {
            if ((this.areEGMSoundsOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.areEGMSoundsOffCompleted(this, new areEGMSoundsOffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUpdateString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUpdateString() {
            object[] results = this.Invoke("getUpdateString", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUpdateStringAsync() {
            this.getUpdateStringAsync(null);
        }
        
        /// <remarks/>
        public void getUpdateStringAsync(object userState) {
            if ((this.getUpdateStringOperationCompleted == null)) {
                this.getUpdateStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUpdateStringOperationCompleted);
            }
            this.InvokeAsync("getUpdateString", new object[0], this.getUpdateStringOperationCompleted, userState);
        }
        
        private void OngetUpdateStringOperationCompleted(object arg) {
            if ((this.getUpdateStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUpdateStringCompleted(this, new getUpdateStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setUpdateString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setUpdateString(string nStr) {
            object[] results = this.Invoke("setUpdateString", new object[] {
                        nStr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setUpdateStringAsync(string nStr) {
            this.setUpdateStringAsync(nStr, null);
        }
        
        /// <remarks/>
        public void setUpdateStringAsync(string nStr, object userState) {
            if ((this.setUpdateStringOperationCompleted == null)) {
                this.setUpdateStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUpdateStringOperationCompleted);
            }
            this.InvokeAsync("setUpdateString", new object[] {
                        nStr}, this.setUpdateStringOperationCompleted, userState);
        }
        
        private void OnsetUpdateStringOperationCompleted(object arg) {
            if ((this.setUpdateStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUpdateStringCompleted(this, new setUpdateStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createNewPIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PINs createNewPIN(int tID, decimal amt, int nSecs) {
            object[] results = this.Invoke("createNewPIN", new object[] {
                        tID,
                        amt,
                        nSecs});
            return ((PINs)(results[0]));
        }
        
        /// <remarks/>
        public void createNewPINAsync(int tID, decimal amt, int nSecs) {
            this.createNewPINAsync(tID, amt, nSecs, null);
        }
        
        /// <remarks/>
        public void createNewPINAsync(int tID, decimal amt, int nSecs, object userState) {
            if ((this.createNewPINOperationCompleted == null)) {
                this.createNewPINOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewPINOperationCompleted);
            }
            this.InvokeAsync("createNewPIN", new object[] {
                        tID,
                        amt,
                        nSecs}, this.createNewPINOperationCompleted, userState);
        }
        
        private void OncreateNewPINOperationCompleted(object arg) {
            if ((this.createNewPINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewPINCompleted(this, new createNewPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPINData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PINs getPINData(int pin) {
            object[] results = this.Invoke("getPINData", new object[] {
                        pin});
            return ((PINs)(results[0]));
        }
        
        /// <remarks/>
        public void getPINDataAsync(int pin) {
            this.getPINDataAsync(pin, null);
        }
        
        /// <remarks/>
        public void getPINDataAsync(int pin, object userState) {
            if ((this.getPINDataOperationCompleted == null)) {
                this.getPINDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPINDataOperationCompleted);
            }
            this.InvokeAsync("getPINData", new object[] {
                        pin}, this.getPINDataOperationCompleted, userState);
        }
        
        private void OngetPINDataOperationCompleted(object arg) {
            if ((this.getPINDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPINDataCompleted(this, new getPINDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/anyPINsArePlaying", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool anyPINsArePlaying() {
            object[] results = this.Invoke("anyPINsArePlaying", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void anyPINsArePlayingAsync() {
            this.anyPINsArePlayingAsync(null);
        }
        
        /// <remarks/>
        public void anyPINsArePlayingAsync(object userState) {
            if ((this.anyPINsArePlayingOperationCompleted == null)) {
                this.anyPINsArePlayingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnanyPINsArePlayingOperationCompleted);
            }
            this.InvokeAsync("anyPINsArePlaying", new object[0], this.anyPINsArePlayingOperationCompleted, userState);
        }
        
        private void OnanyPINsArePlayingOperationCompleted(object arg) {
            if ((this.anyPINsArePlayingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.anyPINsArePlayingCompleted(this, new anyPINsArePlayingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPINsWithBalances", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PINs[] getAllPINsWithBalances() {
            object[] results = this.Invoke("getAllPINsWithBalances", new object[0]);
            return ((PINs[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPINsWithBalancesAsync() {
            this.getAllPINsWithBalancesAsync(null);
        }
        
        /// <remarks/>
        public void getAllPINsWithBalancesAsync(object userState) {
            if ((this.getAllPINsWithBalancesOperationCompleted == null)) {
                this.getAllPINsWithBalancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPINsWithBalancesOperationCompleted);
            }
            this.InvokeAsync("getAllPINsWithBalances", new object[0], this.getAllPINsWithBalancesOperationCompleted, userState);
        }
        
        private void OngetAllPINsWithBalancesOperationCompleted(object arg) {
            if ((this.getAllPINsWithBalancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPINsWithBalancesCompleted(this, new getAllPINsWithBalancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPINsForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PINs[] getAllPINsForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("getAllPINsForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((PINs[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPINsForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.getAllPINsForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void getAllPINsForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.getAllPINsForDateRangeOperationCompleted == null)) {
                this.getAllPINsForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPINsForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllPINsForDateRange", new object[] {
                        sDate,
                        eDate}, this.getAllPINsForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllPINsForDateRangeOperationCompleted(object arg) {
            if ((this.getAllPINsForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPINsForDateRangeCompleted(this, new getAllPINsForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllPINsForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllPINsForDateRange(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("deleteAllPINsForDateRange", new object[] {
                        start,
                        end});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllPINsForDateRangeAsync(System.DateTime start, System.DateTime end) {
            this.deleteAllPINsForDateRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void deleteAllPINsForDateRangeAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.deleteAllPINsForDateRangeOperationCompleted == null)) {
                this.deleteAllPINsForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllPINsForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllPINsForDateRange", new object[] {
                        start,
                        end}, this.deleteAllPINsForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllPINsForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllPINsForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllPINsForDateRangeCompleted(this, new deleteAllPINsForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletePIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deletePIN(int pin) {
            object[] results = this.Invoke("deletePIN", new object[] {
                        pin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deletePINAsync(int pin) {
            this.deletePINAsync(pin, null);
        }
        
        /// <remarks/>
        public void deletePINAsync(int pin, object userState) {
            if ((this.deletePINOperationCompleted == null)) {
                this.deletePINOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePINOperationCompleted);
            }
            this.InvokeAsync("deletePIN", new object[] {
                        pin}, this.deletePINOperationCompleted, userState);
        }
        
        private void OndeletePINOperationCompleted(object arg) {
            if ((this.deletePINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePINCompleted(this, new deletePINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPINsForDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PINs[] getAllPINsForDate(System.DateTime fDate) {
            object[] results = this.Invoke("getAllPINsForDate", new object[] {
                        fDate});
            return ((PINs[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPINsForDateAsync(System.DateTime fDate) {
            this.getAllPINsForDateAsync(fDate, null);
        }
        
        /// <remarks/>
        public void getAllPINsForDateAsync(System.DateTime fDate, object userState) {
            if ((this.getAllPINsForDateOperationCompleted == null)) {
                this.getAllPINsForDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPINsForDateOperationCompleted);
            }
            this.InvokeAsync("getAllPINsForDate", new object[] {
                        fDate}, this.getAllPINsForDateOperationCompleted, userState);
        }
        
        private void OngetAllPINsForDateOperationCompleted(object arg) {
            if ((this.getAllPINsForDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPINsForDateCompleted(this, new getAllPINsForDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPINs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PINs[] getAllPINs() {
            object[] results = this.Invoke("getAllPINs", new object[0]);
            return ((PINs[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPINsAsync() {
            this.getAllPINsAsync(null);
        }
        
        /// <remarks/>
        public void getAllPINsAsync(object userState) {
            if ((this.getAllPINsOperationCompleted == null)) {
                this.getAllPINsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPINsOperationCompleted);
            }
            this.InvokeAsync("getAllPINs", new object[0], this.getAllPINsOperationCompleted, userState);
        }
        
        private void OngetAllPINsOperationCompleted(object arg) {
            if ((this.getAllPINsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPINsCompleted(this, new getAllPINsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRedemptionListPINs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PINs[] getRedemptionListPINs() {
            object[] results = this.Invoke("getRedemptionListPINs", new object[0]);
            return ((PINs[])(results[0]));
        }
        
        /// <remarks/>
        public void getRedemptionListPINsAsync() {
            this.getRedemptionListPINsAsync(null);
        }
        
        /// <remarks/>
        public void getRedemptionListPINsAsync(object userState) {
            if ((this.getRedemptionListPINsOperationCompleted == null)) {
                this.getRedemptionListPINsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRedemptionListPINsOperationCompleted);
            }
            this.InvokeAsync("getRedemptionListPINs", new object[0], this.getRedemptionListPINsOperationCompleted, userState);
        }
        
        private void OngetRedemptionListPINsOperationCompleted(object arg) {
            if ((this.getRedemptionListPINsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRedemptionListPINsCompleted(this, new getRedemptionListPINsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/loginPIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool loginPIN(int pin, string pAt) {
            object[] results = this.Invoke("loginPIN", new object[] {
                        pin,
                        pAt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginPINAsync(int pin, string pAt) {
            this.loginPINAsync(pin, pAt, null);
        }
        
        /// <remarks/>
        public void loginPINAsync(int pin, string pAt, object userState) {
            if ((this.loginPINOperationCompleted == null)) {
                this.loginPINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginPINOperationCompleted);
            }
            this.InvokeAsync("loginPIN", new object[] {
                        pin,
                        pAt}, this.loginPINOperationCompleted, userState);
        }
        
        private void OnloginPINOperationCompleted(object arg) {
            if ((this.loginPINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginPINCompleted(this, new loginPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePINForPlay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePINForPlay(PINs pRec) {
            object[] results = this.Invoke("updatePINForPlay", new object[] {
                        pRec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePINForPlayAsync(PINs pRec) {
            this.updatePINForPlayAsync(pRec, null);
        }
        
        /// <remarks/>
        public void updatePINForPlayAsync(PINs pRec, object userState) {
            if ((this.updatePINForPlayOperationCompleted == null)) {
                this.updatePINForPlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePINForPlayOperationCompleted);
            }
            this.InvokeAsync("updatePINForPlay", new object[] {
                        pRec}, this.updatePINForPlayOperationCompleted, userState);
        }
        
        private void OnupdatePINForPlayOperationCompleted(object arg) {
            if ((this.updatePINForPlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePINForPlayCompleted(this, new updatePINForPlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePINRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePINRec(PINs pRec) {
            object[] results = this.Invoke("updatePINRec", new object[] {
                        pRec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePINRecAsync(PINs pRec) {
            this.updatePINRecAsync(pRec, null);
        }
        
        /// <remarks/>
        public void updatePINRecAsync(PINs pRec, object userState) {
            if ((this.updatePINRecOperationCompleted == null)) {
                this.updatePINRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePINRecOperationCompleted);
            }
            this.InvokeAsync("updatePINRec", new object[] {
                        pRec}, this.updatePINRecOperationCompleted, userState);
        }
        
        private void OnupdatePINRecOperationCompleted(object arg) {
            if ((this.updatePINRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePINRecCompleted(this, new updatePINRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/doRepurchaseTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool doRepurchaseTransaction(Repurchases rRec) {
            object[] results = this.Invoke("doRepurchaseTransaction", new object[] {
                        rRec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void doRepurchaseTransactionAsync(Repurchases rRec) {
            this.doRepurchaseTransactionAsync(rRec, null);
        }
        
        /// <remarks/>
        public void doRepurchaseTransactionAsync(Repurchases rRec, object userState) {
            if ((this.doRepurchaseTransactionOperationCompleted == null)) {
                this.doRepurchaseTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRepurchaseTransactionOperationCompleted);
            }
            this.InvokeAsync("doRepurchaseTransaction", new object[] {
                        rRec}, this.doRepurchaseTransactionOperationCompleted, userState);
        }
        
        private void OndoRepurchaseTransactionOperationCompleted(object arg) {
            if ((this.doRepurchaseTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRepurchaseTransactionCompleted(this, new doRepurchaseTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPendingRepurchases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Repurchases[] getPendingRepurchases() {
            object[] results = this.Invoke("getPendingRepurchases", new object[0]);
            return ((Repurchases[])(results[0]));
        }
        
        /// <remarks/>
        public void getPendingRepurchasesAsync() {
            this.getPendingRepurchasesAsync(null);
        }
        
        /// <remarks/>
        public void getPendingRepurchasesAsync(object userState) {
            if ((this.getPendingRepurchasesOperationCompleted == null)) {
                this.getPendingRepurchasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPendingRepurchasesOperationCompleted);
            }
            this.InvokeAsync("getPendingRepurchases", new object[0], this.getPendingRepurchasesOperationCompleted, userState);
        }
        
        private void OngetPendingRepurchasesOperationCompleted(object arg) {
            if ((this.getPendingRepurchasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPendingRepurchasesCompleted(this, new getPendingRepurchasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRepurchasesForPIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Repurchases[] getRepurchasesForPIN(int pin) {
            object[] results = this.Invoke("getRepurchasesForPIN", new object[] {
                        pin});
            return ((Repurchases[])(results[0]));
        }
        
        /// <remarks/>
        public void getRepurchasesForPINAsync(int pin) {
            this.getRepurchasesForPINAsync(pin, null);
        }
        
        /// <remarks/>
        public void getRepurchasesForPINAsync(int pin, object userState) {
            if ((this.getRepurchasesForPINOperationCompleted == null)) {
                this.getRepurchasesForPINOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepurchasesForPINOperationCompleted);
            }
            this.InvokeAsync("getRepurchasesForPIN", new object[] {
                        pin}, this.getRepurchasesForPINOperationCompleted, userState);
        }
        
        private void OngetRepurchasesForPINOperationCompleted(object arg) {
            if ((this.getRepurchasesForPINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepurchasesForPINCompleted(this, new getRepurchasesForPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRepurchasesForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Repurchases[] getRepurchasesForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("getRepurchasesForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((Repurchases[])(results[0]));
        }
        
        /// <remarks/>
        public void getRepurchasesForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.getRepurchasesForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void getRepurchasesForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.getRepurchasesForDateRangeOperationCompleted == null)) {
                this.getRepurchasesForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepurchasesForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getRepurchasesForDateRange", new object[] {
                        sDate,
                        eDate}, this.getRepurchasesForDateRangeOperationCompleted, userState);
        }
        
        private void OngetRepurchasesForDateRangeOperationCompleted(object arg) {
            if ((this.getRepurchasesForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepurchasesForDateRangeCompleted(this, new getRepurchasesForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRepurchaseStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getRepurchaseStatus(int rID) {
            object[] results = this.Invoke("getRepurchaseStatus", new object[] {
                        rID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getRepurchaseStatusAsync(int rID) {
            this.getRepurchaseStatusAsync(rID, null);
        }
        
        /// <remarks/>
        public void getRepurchaseStatusAsync(int rID, object userState) {
            if ((this.getRepurchaseStatusOperationCompleted == null)) {
                this.getRepurchaseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepurchaseStatusOperationCompleted);
            }
            this.InvokeAsync("getRepurchaseStatus", new object[] {
                        rID}, this.getRepurchaseStatusOperationCompleted, userState);
        }
        
        private void OngetRepurchaseStatusOperationCompleted(object arg) {
            if ((this.getRepurchaseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepurchaseStatusCompleted(this, new getRepurchaseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteRepurchaseRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteRepurchaseRec(int rID) {
            object[] results = this.Invoke("deleteRepurchaseRec", new object[] {
                        rID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRepurchaseRecAsync(int rID) {
            this.deleteRepurchaseRecAsync(rID, null);
        }
        
        /// <remarks/>
        public void deleteRepurchaseRecAsync(int rID, object userState) {
            if ((this.deleteRepurchaseRecOperationCompleted == null)) {
                this.deleteRepurchaseRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRepurchaseRecOperationCompleted);
            }
            this.InvokeAsync("deleteRepurchaseRec", new object[] {
                        rID}, this.deleteRepurchaseRecOperationCompleted, userState);
        }
        
        private void OndeleteRepurchaseRecOperationCompleted(object arg) {
            if ((this.deleteRepurchaseRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRepurchaseRecCompleted(this, new deleteRepurchaseRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllRepurchasesForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllRepurchasesForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("deleteAllRepurchasesForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllRepurchasesForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.deleteAllRepurchasesForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void deleteAllRepurchasesForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.deleteAllRepurchasesForDateRangeOperationCompleted == null)) {
                this.deleteAllRepurchasesForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllRepurchasesForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllRepurchasesForDateRange", new object[] {
                        sDate,
                        eDate}, this.deleteAllRepurchasesForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllRepurchasesForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllRepurchasesForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllRepurchasesForDateRangeCompleted(this, new deleteAllRepurchasesForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createNewRepurchase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int createNewRepurchase(int pin) {
            object[] results = this.Invoke("createNewRepurchase", new object[] {
                        pin});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createNewRepurchaseAsync(int pin) {
            this.createNewRepurchaseAsync(pin, null);
        }
        
        /// <remarks/>
        public void createNewRepurchaseAsync(int pin, object userState) {
            if ((this.createNewRepurchaseOperationCompleted == null)) {
                this.createNewRepurchaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewRepurchaseOperationCompleted);
            }
            this.InvokeAsync("createNewRepurchase", new object[] {
                        pin}, this.createNewRepurchaseOperationCompleted, userState);
        }
        
        private void OncreateNewRepurchaseOperationCompleted(object arg) {
            if ((this.createNewRepurchaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewRepurchaseCompleted(this, new createNewRepurchaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRedemptionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Redemptions getRedemptionData(int tID) {
            object[] results = this.Invoke("getRedemptionData", new object[] {
                        tID});
            return ((Redemptions)(results[0]));
        }
        
        /// <remarks/>
        public void getRedemptionDataAsync(int tID) {
            this.getRedemptionDataAsync(tID, null);
        }
        
        /// <remarks/>
        public void getRedemptionDataAsync(int tID, object userState) {
            if ((this.getRedemptionDataOperationCompleted == null)) {
                this.getRedemptionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRedemptionDataOperationCompleted);
            }
            this.InvokeAsync("getRedemptionData", new object[] {
                        tID}, this.getRedemptionDataOperationCompleted, userState);
        }
        
        private void OngetRedemptionDataOperationCompleted(object arg) {
            if ((this.getRedemptionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRedemptionDataCompleted(this, new getRedemptionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllRedemptions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Redemptions[] getAllRedemptions() {
            object[] results = this.Invoke("getAllRedemptions", new object[0]);
            return ((Redemptions[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllRedemptionsAsync() {
            this.getAllRedemptionsAsync(null);
        }
        
        /// <remarks/>
        public void getAllRedemptionsAsync(object userState) {
            if ((this.getAllRedemptionsOperationCompleted == null)) {
                this.getAllRedemptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRedemptionsOperationCompleted);
            }
            this.InvokeAsync("getAllRedemptions", new object[0], this.getAllRedemptionsOperationCompleted, userState);
        }
        
        private void OngetAllRedemptionsOperationCompleted(object arg) {
            if ((this.getAllRedemptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRedemptionsCompleted(this, new getAllRedemptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRedemptionsFromDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Redemptions[] getRedemptionsFromDate(System.DateTime sDate) {
            object[] results = this.Invoke("getRedemptionsFromDate", new object[] {
                        sDate});
            return ((Redemptions[])(results[0]));
        }
        
        /// <remarks/>
        public void getRedemptionsFromDateAsync(System.DateTime sDate) {
            this.getRedemptionsFromDateAsync(sDate, null);
        }
        
        /// <remarks/>
        public void getRedemptionsFromDateAsync(System.DateTime sDate, object userState) {
            if ((this.getRedemptionsFromDateOperationCompleted == null)) {
                this.getRedemptionsFromDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRedemptionsFromDateOperationCompleted);
            }
            this.InvokeAsync("getRedemptionsFromDate", new object[] {
                        sDate}, this.getRedemptionsFromDateOperationCompleted, userState);
        }
        
        private void OngetRedemptionsFromDateOperationCompleted(object arg) {
            if ((this.getRedemptionsFromDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRedemptionsFromDateCompleted(this, new getRedemptionsFromDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllRedemptionsForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Redemptions[] getAllRedemptionsForDateRange(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("getAllRedemptionsForDateRange", new object[] {
                        start,
                        end});
            return ((Redemptions[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllRedemptionsForDateRangeAsync(System.DateTime start, System.DateTime end) {
            this.getAllRedemptionsForDateRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void getAllRedemptionsForDateRangeAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.getAllRedemptionsForDateRangeOperationCompleted == null)) {
                this.getAllRedemptionsForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRedemptionsForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllRedemptionsForDateRange", new object[] {
                        start,
                        end}, this.getAllRedemptionsForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllRedemptionsForDateRangeOperationCompleted(object arg) {
            if ((this.getAllRedemptionsForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRedemptionsForDateRangeCompleted(this, new getAllRedemptionsForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllRedemptionsForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllRedemptionsForDateRange(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("deleteAllRedemptionsForDateRange", new object[] {
                        start,
                        end});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllRedemptionsForDateRangeAsync(System.DateTime start, System.DateTime end) {
            this.deleteAllRedemptionsForDateRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void deleteAllRedemptionsForDateRangeAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.deleteAllRedemptionsForDateRangeOperationCompleted == null)) {
                this.deleteAllRedemptionsForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllRedemptionsForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllRedemptionsForDateRange", new object[] {
                        start,
                        end}, this.deleteAllRedemptionsForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllRedemptionsForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllRedemptionsForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllRedemptionsForDateRangeCompleted(this, new deleteAllRedemptionsForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllRedemptionsForTransactionRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Redemptions[] getAllRedemptionsForTransactionRange(int start, int end) {
            object[] results = this.Invoke("getAllRedemptionsForTransactionRange", new object[] {
                        start,
                        end});
            return ((Redemptions[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllRedemptionsForTransactionRangeAsync(int start, int end) {
            this.getAllRedemptionsForTransactionRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void getAllRedemptionsForTransactionRangeAsync(int start, int end, object userState) {
            if ((this.getAllRedemptionsForTransactionRangeOperationCompleted == null)) {
                this.getAllRedemptionsForTransactionRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRedemptionsForTransactionRangeOperationCompleted);
            }
            this.InvokeAsync("getAllRedemptionsForTransactionRange", new object[] {
                        start,
                        end}, this.getAllRedemptionsForTransactionRangeOperationCompleted, userState);
        }
        
        private void OngetAllRedemptionsForTransactionRangeOperationCompleted(object arg) {
            if ((this.getAllRedemptionsForTransactionRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRedemptionsForTransactionRangeCompleted(this, new getAllRedemptionsForTransactionRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveRedemptionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveRedemptionData(Redemptions rData) {
            object[] results = this.Invoke("saveRedemptionData", new object[] {
                        rData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveRedemptionDataAsync(Redemptions rData) {
            this.saveRedemptionDataAsync(rData, null);
        }
        
        /// <remarks/>
        public void saveRedemptionDataAsync(Redemptions rData, object userState) {
            if ((this.saveRedemptionDataOperationCompleted == null)) {
                this.saveRedemptionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveRedemptionDataOperationCompleted);
            }
            this.InvokeAsync("saveRedemptionData", new object[] {
                        rData}, this.saveRedemptionDataOperationCompleted, userState);
        }
        
        private void OnsaveRedemptionDataOperationCompleted(object arg) {
            if ((this.saveRedemptionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveRedemptionDataCompleted(this, new saveRedemptionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSessionDefPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionDefPCB[] GetAllSessionDefPCB() {
            object[] results = this.Invoke("GetAllSessionDefPCB", new object[0]);
            return ((SessionDefPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSessionDefPCBAsync() {
            this.GetAllSessionDefPCBAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSessionDefPCBAsync(object userState) {
            if ((this.GetAllSessionDefPCBOperationCompleted == null)) {
                this.GetAllSessionDefPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSessionDefPCBOperationCompleted);
            }
            this.InvokeAsync("GetAllSessionDefPCB", new object[0], this.GetAllSessionDefPCBOperationCompleted, userState);
        }
        
        private void OnGetAllSessionDefPCBOperationCompleted(object arg) {
            if ((this.GetAllSessionDefPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSessionDefPCBCompleted(this, new GetAllSessionDefPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSessionGameDefPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionGameDefPCB[] GetAllSessionGameDefPCB(int sID) {
            object[] results = this.Invoke("GetAllSessionGameDefPCB", new object[] {
                        sID});
            return ((SessionGameDefPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSessionGameDefPCBAsync(int sID) {
            this.GetAllSessionGameDefPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void GetAllSessionGameDefPCBAsync(int sID, object userState) {
            if ((this.GetAllSessionGameDefPCBOperationCompleted == null)) {
                this.GetAllSessionGameDefPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSessionGameDefPCBOperationCompleted);
            }
            this.InvokeAsync("GetAllSessionGameDefPCB", new object[] {
                        sID}, this.GetAllSessionGameDefPCBOperationCompleted, userState);
        }
        
        private void OnGetAllSessionGameDefPCBOperationCompleted(object arg) {
            if ((this.GetAllSessionGameDefPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSessionGameDefPCBCompleted(this, new GetAllSessionGameDefPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSessionDefData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int saveSessionDefData(SessionDefPCB sData) {
            object[] results = this.Invoke("saveSessionDefData", new object[] {
                        sData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void saveSessionDefDataAsync(SessionDefPCB sData) {
            this.saveSessionDefDataAsync(sData, null);
        }
        
        /// <remarks/>
        public void saveSessionDefDataAsync(SessionDefPCB sData, object userState) {
            if ((this.saveSessionDefDataOperationCompleted == null)) {
                this.saveSessionDefDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSessionDefDataOperationCompleted);
            }
            this.InvokeAsync("saveSessionDefData", new object[] {
                        sData}, this.saveSessionDefDataOperationCompleted, userState);
        }
        
        private void OnsaveSessionDefDataOperationCompleted(object arg) {
            if ((this.saveSessionDefDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSessionDefDataCompleted(this, new saveSessionDefDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSessionGameDefData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveSessionGameDefData(SessionGameDefPCB gData) {
            object[] results = this.Invoke("saveSessionGameDefData", new object[] {
                        gData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveSessionGameDefDataAsync(SessionGameDefPCB gData) {
            this.saveSessionGameDefDataAsync(gData, null);
        }
        
        /// <remarks/>
        public void saveSessionGameDefDataAsync(SessionGameDefPCB gData, object userState) {
            if ((this.saveSessionGameDefDataOperationCompleted == null)) {
                this.saveSessionGameDefDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSessionGameDefDataOperationCompleted);
            }
            this.InvokeAsync("saveSessionGameDefData", new object[] {
                        gData}, this.saveSessionGameDefDataOperationCompleted, userState);
        }
        
        private void OnsaveSessionGameDefDataOperationCompleted(object arg) {
            if ((this.saveSessionGameDefDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSessionGameDefDataCompleted(this, new saveSessionGameDefDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSessionDefPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateSessionDefPCB(SessionDefPCB sData) {
            object[] results = this.Invoke("updateSessionDefPCB", new object[] {
                        sData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateSessionDefPCBAsync(SessionDefPCB sData) {
            this.updateSessionDefPCBAsync(sData, null);
        }
        
        /// <remarks/>
        public void updateSessionDefPCBAsync(SessionDefPCB sData, object userState) {
            if ((this.updateSessionDefPCBOperationCompleted == null)) {
                this.updateSessionDefPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSessionDefPCBOperationCompleted);
            }
            this.InvokeAsync("updateSessionDefPCB", new object[] {
                        sData}, this.updateSessionDefPCBOperationCompleted, userState);
        }
        
        private void OnupdateSessionDefPCBOperationCompleted(object arg) {
            if ((this.updateSessionDefPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSessionDefPCBCompleted(this, new updateSessionDefPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSessionDefPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionDefPCB getSessionDefPCB(int sID) {
            object[] results = this.Invoke("getSessionDefPCB", new object[] {
                        sID});
            return ((SessionDefPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionDefPCBAsync(int sID) {
            this.getSessionDefPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void getSessionDefPCBAsync(int sID, object userState) {
            if ((this.getSessionDefPCBOperationCompleted == null)) {
                this.getSessionDefPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionDefPCBOperationCompleted);
            }
            this.InvokeAsync("getSessionDefPCB", new object[] {
                        sID}, this.getSessionDefPCBOperationCompleted, userState);
        }
        
        private void OngetSessionDefPCBOperationCompleted(object arg) {
            if ((this.getSessionDefPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionDefPCBCompleted(this, new getSessionDefPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSessionGameDefPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionGameDefPCB getSessionGameDefPCB(int sID, int gNum) {
            object[] results = this.Invoke("getSessionGameDefPCB", new object[] {
                        sID,
                        gNum});
            return ((SessionGameDefPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionGameDefPCBAsync(int sID, int gNum) {
            this.getSessionGameDefPCBAsync(sID, gNum, null);
        }
        
        /// <remarks/>
        public void getSessionGameDefPCBAsync(int sID, int gNum, object userState) {
            if ((this.getSessionGameDefPCBOperationCompleted == null)) {
                this.getSessionGameDefPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionGameDefPCBOperationCompleted);
            }
            this.InvokeAsync("getSessionGameDefPCB", new object[] {
                        sID,
                        gNum}, this.getSessionGameDefPCBOperationCompleted, userState);
        }
        
        private void OngetSessionGameDefPCBOperationCompleted(object arg) {
            if ((this.getSessionGameDefPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionGameDefPCBCompleted(this, new getSessionGameDefPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteSessionDefPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteSessionDefPCB(int sID) {
            object[] results = this.Invoke("deleteSessionDefPCB", new object[] {
                        sID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteSessionDefPCBAsync(int sID) {
            this.deleteSessionDefPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void deleteSessionDefPCBAsync(int sID, object userState) {
            if ((this.deleteSessionDefPCBOperationCompleted == null)) {
                this.deleteSessionDefPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSessionDefPCBOperationCompleted);
            }
            this.InvokeAsync("deleteSessionDefPCB", new object[] {
                        sID}, this.deleteSessionDefPCBOperationCompleted, userState);
        }
        
        private void OndeleteSessionDefPCBOperationCompleted(object arg) {
            if ((this.deleteSessionDefPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSessionDefPCBCompleted(this, new deleteSessionDefPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteSessionGameDefPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteSessionGameDefPCB(int sID) {
            object[] results = this.Invoke("deleteSessionGameDefPCB", new object[] {
                        sID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteSessionGameDefPCBAsync(int sID) {
            this.deleteSessionGameDefPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void deleteSessionGameDefPCBAsync(int sID, object userState) {
            if ((this.deleteSessionGameDefPCBOperationCompleted == null)) {
                this.deleteSessionGameDefPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSessionGameDefPCBOperationCompleted);
            }
            this.InvokeAsync("deleteSessionGameDefPCB", new object[] {
                        sID}, this.deleteSessionGameDefPCBOperationCompleted, userState);
        }
        
        private void OndeleteSessionGameDefPCBOperationCompleted(object arg) {
            if ((this.deleteSessionGameDefPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSessionGameDefPCBCompleted(this, new deleteSessionGameDefPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSessionPCBForLastGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateSessionPCBForLastGame(int sID, int num) {
            object[] results = this.Invoke("updateSessionPCBForLastGame", new object[] {
                        sID,
                        num});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateSessionPCBForLastGameAsync(int sID, int num) {
            this.updateSessionPCBForLastGameAsync(sID, num, null);
        }
        
        /// <remarks/>
        public void updateSessionPCBForLastGameAsync(int sID, int num, object userState) {
            if ((this.updateSessionPCBForLastGameOperationCompleted == null)) {
                this.updateSessionPCBForLastGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSessionPCBForLastGameOperationCompleted);
            }
            this.InvokeAsync("updateSessionPCBForLastGame", new object[] {
                        sID,
                        num}, this.updateSessionPCBForLastGameOperationCompleted, userState);
        }
        
        private void OnupdateSessionPCBForLastGameOperationCompleted(object arg) {
            if ((this.updateSessionPCBForLastGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSessionPCBForLastGameCompleted(this, new updateSessionPCBForLastGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/closeSessionPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool closeSessionPCB(int sID) {
            object[] results = this.Invoke("closeSessionPCB", new object[] {
                        sID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void closeSessionPCBAsync(int sID) {
            this.closeSessionPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void closeSessionPCBAsync(int sID, object userState) {
            if ((this.closeSessionPCBOperationCompleted == null)) {
                this.closeSessionPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseSessionPCBOperationCompleted);
            }
            this.InvokeAsync("closeSessionPCB", new object[] {
                        sID}, this.closeSessionPCBOperationCompleted, userState);
        }
        
        private void OncloseSessionPCBOperationCompleted(object arg) {
            if ((this.closeSessionPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeSessionPCBCompleted(this, new closeSessionPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllSessionsPCBForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionsPCB[] getAllSessionsPCBForDateRange(int sID, System.DateTime start, System.DateTime stop) {
            object[] results = this.Invoke("getAllSessionsPCBForDateRange", new object[] {
                        sID,
                        start,
                        stop});
            return ((SessionsPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllSessionsPCBForDateRangeAsync(int sID, System.DateTime start, System.DateTime stop) {
            this.getAllSessionsPCBForDateRangeAsync(sID, start, stop, null);
        }
        
        /// <remarks/>
        public void getAllSessionsPCBForDateRangeAsync(int sID, System.DateTime start, System.DateTime stop, object userState) {
            if ((this.getAllSessionsPCBForDateRangeOperationCompleted == null)) {
                this.getAllSessionsPCBForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSessionsPCBForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllSessionsPCBForDateRange", new object[] {
                        sID,
                        start,
                        stop}, this.getAllSessionsPCBForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllSessionsPCBForDateRangeOperationCompleted(object arg) {
            if ((this.getAllSessionsPCBForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSessionsPCBForDateRangeCompleted(this, new getAllSessionsPCBForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllSessionsPCBDataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionsPCB[] getAllSessionsPCBDataForDateRange(System.DateTime start, System.DateTime stop) {
            object[] results = this.Invoke("getAllSessionsPCBDataForDateRange", new object[] {
                        start,
                        stop});
            return ((SessionsPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllSessionsPCBDataForDateRangeAsync(System.DateTime start, System.DateTime stop) {
            this.getAllSessionsPCBDataForDateRangeAsync(start, stop, null);
        }
        
        /// <remarks/>
        public void getAllSessionsPCBDataForDateRangeAsync(System.DateTime start, System.DateTime stop, object userState) {
            if ((this.getAllSessionsPCBDataForDateRangeOperationCompleted == null)) {
                this.getAllSessionsPCBDataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSessionsPCBDataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllSessionsPCBDataForDateRange", new object[] {
                        start,
                        stop}, this.getAllSessionsPCBDataForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllSessionsPCBDataForDateRangeOperationCompleted(object arg) {
            if ((this.getAllSessionsPCBDataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSessionsPCBDataForDateRangeCompleted(this, new getAllSessionsPCBDataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllSessionsPCBDataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllSessionsPCBDataForDateRange(System.DateTime start, System.DateTime stop) {
            object[] results = this.Invoke("deleteAllSessionsPCBDataForDateRange", new object[] {
                        start,
                        stop});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllSessionsPCBDataForDateRangeAsync(System.DateTime start, System.DateTime stop) {
            this.deleteAllSessionsPCBDataForDateRangeAsync(start, stop, null);
        }
        
        /// <remarks/>
        public void deleteAllSessionsPCBDataForDateRangeAsync(System.DateTime start, System.DateTime stop, object userState) {
            if ((this.deleteAllSessionsPCBDataForDateRangeOperationCompleted == null)) {
                this.deleteAllSessionsPCBDataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllSessionsPCBDataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllSessionsPCBDataForDateRange", new object[] {
                        start,
                        stop}, this.deleteAllSessionsPCBDataForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllSessionsPCBDataForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllSessionsPCBDataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllSessionsPCBDataForDateRangeCompleted(this, new deleteAllSessionsPCBDataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSessionGamesPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GamesPCB[] GetAllSessionGamesPCB(int sID) {
            object[] results = this.Invoke("GetAllSessionGamesPCB", new object[] {
                        sID});
            return ((GamesPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSessionGamesPCBAsync(int sID) {
            this.GetAllSessionGamesPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void GetAllSessionGamesPCBAsync(int sID, object userState) {
            if ((this.GetAllSessionGamesPCBOperationCompleted == null)) {
                this.GetAllSessionGamesPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSessionGamesPCBOperationCompleted);
            }
            this.InvokeAsync("GetAllSessionGamesPCB", new object[] {
                        sID}, this.GetAllSessionGamesPCBOperationCompleted, userState);
        }
        
        private void OnGetAllSessionGamesPCBOperationCompleted(object arg) {
            if ((this.GetAllSessionGamesPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSessionGamesPCBCompleted(this, new GetAllSessionGamesPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createAndStartSessionPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createAndStartSessionPCB(SessionsPCB newSess) {
            object[] results = this.Invoke("createAndStartSessionPCB", new object[] {
                        newSess});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createAndStartSessionPCBAsync(SessionsPCB newSess) {
            this.createAndStartSessionPCBAsync(newSess, null);
        }
        
        /// <remarks/>
        public void createAndStartSessionPCBAsync(SessionsPCB newSess, object userState) {
            if ((this.createAndStartSessionPCBOperationCompleted == null)) {
                this.createAndStartSessionPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAndStartSessionPCBOperationCompleted);
            }
            this.InvokeAsync("createAndStartSessionPCB", new object[] {
                        newSess}, this.createAndStartSessionPCBOperationCompleted, userState);
        }
        
        private void OncreateAndStartSessionPCBOperationCompleted(object arg) {
            if ((this.createAndStartSessionPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAndStartSessionPCBCompleted(this, new createAndStartSessionPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCurSessionPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionsPCB getCurSessionPCB(int gSysID) {
            object[] results = this.Invoke("getCurSessionPCB", new object[] {
                        gSysID});
            return ((SessionsPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getCurSessionPCBAsync(int gSysID) {
            this.getCurSessionPCBAsync(gSysID, null);
        }
        
        /// <remarks/>
        public void getCurSessionPCBAsync(int gSysID, object userState) {
            if ((this.getCurSessionPCBOperationCompleted == null)) {
                this.getCurSessionPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurSessionPCBOperationCompleted);
            }
            this.InvokeAsync("getCurSessionPCB", new object[] {
                        gSysID}, this.getCurSessionPCBOperationCompleted, userState);
        }
        
        private void OngetCurSessionPCBOperationCompleted(object arg) {
            if ((this.getCurSessionPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurSessionPCBCompleted(this, new getCurSessionPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSessionPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionsPCB getSessionPCB(int sID) {
            object[] results = this.Invoke("getSessionPCB", new object[] {
                        sID});
            return ((SessionsPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionPCBAsync(int sID) {
            this.getSessionPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void getSessionPCBAsync(int sID, object userState) {
            if ((this.getSessionPCBOperationCompleted == null)) {
                this.getSessionPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionPCBOperationCompleted);
            }
            this.InvokeAsync("getSessionPCB", new object[] {
                        sID}, this.getSessionPCBOperationCompleted, userState);
        }
        
        private void OngetSessionPCBOperationCompleted(object arg) {
            if ((this.getSessionPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionPCBCompleted(this, new getSessionPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSessionReportPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionReportPCB getSessionReportPCB(int sID) {
            object[] results = this.Invoke("getSessionReportPCB", new object[] {
                        sID});
            return ((SessionReportPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionReportPCBAsync(int sID) {
            this.getSessionReportPCBAsync(sID, null);
        }
        
        /// <remarks/>
        public void getSessionReportPCBAsync(int sID, object userState) {
            if ((this.getSessionReportPCBOperationCompleted == null)) {
                this.getSessionReportPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionReportPCBOperationCompleted);
            }
            this.InvokeAsync("getSessionReportPCB", new object[] {
                        sID}, this.getSessionReportPCBOperationCompleted, userState);
        }
        
        private void OngetSessionReportPCBOperationCompleted(object arg) {
            if ((this.getSessionReportPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionReportPCBCompleted(this, new getSessionReportPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/closeGamePCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool closeGamePCB(int gID) {
            object[] results = this.Invoke("closeGamePCB", new object[] {
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void closeGamePCBAsync(int gID) {
            this.closeGamePCBAsync(gID, null);
        }
        
        /// <remarks/>
        public void closeGamePCBAsync(int gID, object userState) {
            if ((this.closeGamePCBOperationCompleted == null)) {
                this.closeGamePCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseGamePCBOperationCompleted);
            }
            this.InvokeAsync("closeGamePCB", new object[] {
                        gID}, this.closeGamePCBOperationCompleted, userState);
        }
        
        private void OncloseGamePCBOperationCompleted(object arg) {
            if ((this.closeGamePCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeGamePCBCompleted(this, new closeGamePCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addGamePCBPrizeAmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addGamePCBPrizeAmt(int gID, decimal addAmt) {
            object[] results = this.Invoke("addGamePCBPrizeAmt", new object[] {
                        gID,
                        addAmt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addGamePCBPrizeAmtAsync(int gID, decimal addAmt) {
            this.addGamePCBPrizeAmtAsync(gID, addAmt, null);
        }
        
        /// <remarks/>
        public void addGamePCBPrizeAmtAsync(int gID, decimal addAmt, object userState) {
            if ((this.addGamePCBPrizeAmtOperationCompleted == null)) {
                this.addGamePCBPrizeAmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGamePCBPrizeAmtOperationCompleted);
            }
            this.InvokeAsync("addGamePCBPrizeAmt", new object[] {
                        gID,
                        addAmt}, this.addGamePCBPrizeAmtOperationCompleted, userState);
        }
        
        private void OnaddGamePCBPrizeAmtOperationCompleted(object arg) {
            if ((this.addGamePCBPrizeAmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGamePCBPrizeAmtCompleted(this, new addGamePCBPrizeAmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateGameBalls", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateGameBalls(int gID, int bCnt, int[] bNums) {
            object[] results = this.Invoke("updateGameBalls", new object[] {
                        gID,
                        bCnt,
                        bNums});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateGameBallsAsync(int gID, int bCnt, int[] bNums) {
            this.updateGameBallsAsync(gID, bCnt, bNums, null);
        }
        
        /// <remarks/>
        public void updateGameBallsAsync(int gID, int bCnt, int[] bNums, object userState) {
            if ((this.updateGameBallsOperationCompleted == null)) {
                this.updateGameBallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGameBallsOperationCompleted);
            }
            this.InvokeAsync("updateGameBalls", new object[] {
                        gID,
                        bCnt,
                        bNums}, this.updateGameBallsOperationCompleted, userState);
        }
        
        private void OnupdateGameBallsOperationCompleted(object arg) {
            if ((this.updateGameBallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGameBallsCompleted(this, new updateGameBallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveAndStartGamePCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveAndStartGamePCB(GamesPCB gData) {
            object[] results = this.Invoke("saveAndStartGamePCB", new object[] {
                        gData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveAndStartGamePCBAsync(GamesPCB gData) {
            this.saveAndStartGamePCBAsync(gData, null);
        }
        
        /// <remarks/>
        public void saveAndStartGamePCBAsync(GamesPCB gData, object userState) {
            if ((this.saveAndStartGamePCBOperationCompleted == null)) {
                this.saveAndStartGamePCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAndStartGamePCBOperationCompleted);
            }
            this.InvokeAsync("saveAndStartGamePCB", new object[] {
                        gData}, this.saveAndStartGamePCBOperationCompleted, userState);
        }
        
        private void OnsaveAndStartGamePCBOperationCompleted(object arg) {
            if ((this.saveAndStartGamePCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAndStartGamePCBCompleted(this, new saveAndStartGamePCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveGamePCBData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveGamePCBData(GamesPCB gData) {
            object[] results = this.Invoke("saveGamePCBData", new object[] {
                        gData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveGamePCBDataAsync(GamesPCB gData) {
            this.saveGamePCBDataAsync(gData, null);
        }
        
        /// <remarks/>
        public void saveGamePCBDataAsync(GamesPCB gData, object userState) {
            if ((this.saveGamePCBDataOperationCompleted == null)) {
                this.saveGamePCBDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveGamePCBDataOperationCompleted);
            }
            this.InvokeAsync("saveGamePCBData", new object[] {
                        gData}, this.saveGamePCBDataOperationCompleted, userState);
        }
        
        private void OnsaveGamePCBDataOperationCompleted(object arg) {
            if ((this.saveGamePCBDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveGamePCBDataCompleted(this, new saveGamePCBDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllGamePCBDataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllGamePCBDataForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("deleteAllGamePCBDataForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllGamePCBDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.deleteAllGamePCBDataForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void deleteAllGamePCBDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.deleteAllGamePCBDataForDateRangeOperationCompleted == null)) {
                this.deleteAllGamePCBDataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllGamePCBDataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllGamePCBDataForDateRange", new object[] {
                        sDate,
                        eDate}, this.deleteAllGamePCBDataForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllGamePCBDataForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllGamePCBDataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllGamePCBDataForDateRangeCompleted(this, new deleteAllGamePCBDataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllGamePCBDataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GamesPCB[] getAllGamePCBDataForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("getAllGamePCBDataForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((GamesPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllGamePCBDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.getAllGamePCBDataForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void getAllGamePCBDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.getAllGamePCBDataForDateRangeOperationCompleted == null)) {
                this.getAllGamePCBDataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllGamePCBDataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllGamePCBDataForDateRange", new object[] {
                        sDate,
                        eDate}, this.getAllGamePCBDataForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllGamePCBDataForDateRangeOperationCompleted(object arg) {
            if ((this.getAllGamePCBDataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllGamePCBDataForDateRangeCompleted(this, new getAllGamePCBDataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllGamePCBData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GamesPCB[] getAllGamePCBData() {
            object[] results = this.Invoke("getAllGamePCBData", new object[0]);
            return ((GamesPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllGamePCBDataAsync() {
            this.getAllGamePCBDataAsync(null);
        }
        
        /// <remarks/>
        public void getAllGamePCBDataAsync(object userState) {
            if ((this.getAllGamePCBDataOperationCompleted == null)) {
                this.getAllGamePCBDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllGamePCBDataOperationCompleted);
            }
            this.InvokeAsync("getAllGamePCBData", new object[0], this.getAllGamePCBDataOperationCompleted, userState);
        }
        
        private void OngetAllGamePCBDataOperationCompleted(object arg) {
            if ((this.getAllGamePCBDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllGamePCBDataCompleted(this, new getAllGamePCBDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCurrentGamePCBData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GamesPCB getCurrentGamePCBData(int gmID, int sID) {
            object[] results = this.Invoke("getCurrentGamePCBData", new object[] {
                        gmID,
                        sID});
            return ((GamesPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentGamePCBDataAsync(int gmID, int sID) {
            this.getCurrentGamePCBDataAsync(gmID, sID, null);
        }
        
        /// <remarks/>
        public void getCurrentGamePCBDataAsync(int gmID, int sID, object userState) {
            if ((this.getCurrentGamePCBDataOperationCompleted == null)) {
                this.getCurrentGamePCBDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentGamePCBDataOperationCompleted);
            }
            this.InvokeAsync("getCurrentGamePCBData", new object[] {
                        gmID,
                        sID}, this.getCurrentGamePCBDataOperationCompleted, userState);
        }
        
        private void OngetCurrentGamePCBDataOperationCompleted(object arg) {
            if ((this.getCurrentGamePCBDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentGamePCBDataCompleted(this, new getCurrentGamePCBDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGamePCBData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GamesPCB getGamePCBData(int gID) {
            object[] results = this.Invoke("getGamePCBData", new object[] {
                        gID});
            return ((GamesPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getGamePCBDataAsync(int gID) {
            this.getGamePCBDataAsync(gID, null);
        }
        
        /// <remarks/>
        public void getGamePCBDataAsync(int gID, object userState) {
            if ((this.getGamePCBDataOperationCompleted == null)) {
                this.getGamePCBDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGamePCBDataOperationCompleted);
            }
            this.InvokeAsync("getGamePCBData", new object[] {
                        gID}, this.getGamePCBDataOperationCompleted, userState);
        }
        
        private void OngetGamePCBDataOperationCompleted(object arg) {
            if ((this.getGamePCBDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGamePCBDataCompleted(this, new getGamePCBDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBallNumsLCS16", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getBallNumsLCS16(int gID) {
            object[] results = this.Invoke("getBallNumsLCS16", new object[] {
                        gID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getBallNumsLCS16Async(int gID) {
            this.getBallNumsLCS16Async(gID, null);
        }
        
        /// <remarks/>
        public void getBallNumsLCS16Async(int gID, object userState) {
            if ((this.getBallNumsLCS16OperationCompleted == null)) {
                this.getBallNumsLCS16OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBallNumsLCS16OperationCompleted);
            }
            this.InvokeAsync("getBallNumsLCS16", new object[] {
                        gID}, this.getBallNumsLCS16OperationCompleted, userState);
        }
        
        private void OngetBallNumsLCS16OperationCompleted(object arg) {
            if ((this.getBallNumsLCS16Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBallNumsLCS16Completed(this, new getBallNumsLCS16CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateGameBallsLCS16", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateGameBallsLCS16(int gID, int bCnt, int[] bNums) {
            object[] results = this.Invoke("updateGameBallsLCS16", new object[] {
                        gID,
                        bCnt,
                        bNums});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateGameBallsLCS16Async(int gID, int bCnt, int[] bNums) {
            this.updateGameBallsLCS16Async(gID, bCnt, bNums, null);
        }
        
        /// <remarks/>
        public void updateGameBallsLCS16Async(int gID, int bCnt, int[] bNums, object userState) {
            if ((this.updateGameBallsLCS16OperationCompleted == null)) {
                this.updateGameBallsLCS16OperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGameBallsLCS16OperationCompleted);
            }
            this.InvokeAsync("updateGameBallsLCS16", new object[] {
                        gID,
                        bCnt,
                        bNums}, this.updateGameBallsLCS16OperationCompleted, userState);
        }
        
        private void OnupdateGameBallsLCS16OperationCompleted(object arg) {
            if ((this.updateGameBallsLCS16Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGameBallsLCS16Completed(this, new updateGameBallsLCS16CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBallNumsS16", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getBallNumsS16(int gID) {
            object[] results = this.Invoke("getBallNumsS16", new object[] {
                        gID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getBallNumsS16Async(int gID) {
            this.getBallNumsS16Async(gID, null);
        }
        
        /// <remarks/>
        public void getBallNumsS16Async(int gID, object userState) {
            if ((this.getBallNumsS16OperationCompleted == null)) {
                this.getBallNumsS16OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBallNumsS16OperationCompleted);
            }
            this.InvokeAsync("getBallNumsS16", new object[] {
                        gID}, this.getBallNumsS16OperationCompleted, userState);
        }
        
        private void OngetBallNumsS16OperationCompleted(object arg) {
            if ((this.getBallNumsS16Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBallNumsS16Completed(this, new getBallNumsS16CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateGameBallsS16", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateGameBallsS16(int gID, int bCnt, int[] bNums) {
            object[] results = this.Invoke("updateGameBallsS16", new object[] {
                        gID,
                        bCnt,
                        bNums});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateGameBallsS16Async(int gID, int bCnt, int[] bNums) {
            this.updateGameBallsS16Async(gID, bCnt, bNums, null);
        }
        
        /// <remarks/>
        public void updateGameBallsS16Async(int gID, int bCnt, int[] bNums, object userState) {
            if ((this.updateGameBallsS16OperationCompleted == null)) {
                this.updateGameBallsS16OperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGameBallsS16OperationCompleted);
            }
            this.InvokeAsync("updateGameBallsS16", new object[] {
                        gID,
                        bCnt,
                        bNums}, this.updateGameBallsS16OperationCompleted, userState);
        }
        
        private void OnupdateGameBallsS16OperationCompleted(object arg) {
            if ((this.updateGameBallsS16Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGameBallsS16Completed(this, new updateGameBallsS16CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBallNumsLCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getBallNumsLCB(int gID) {
            object[] results = this.Invoke("getBallNumsLCB", new object[] {
                        gID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getBallNumsLCBAsync(int gID) {
            this.getBallNumsLCBAsync(gID, null);
        }
        
        /// <remarks/>
        public void getBallNumsLCBAsync(int gID, object userState) {
            if ((this.getBallNumsLCBOperationCompleted == null)) {
                this.getBallNumsLCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBallNumsLCBOperationCompleted);
            }
            this.InvokeAsync("getBallNumsLCB", new object[] {
                        gID}, this.getBallNumsLCBOperationCompleted, userState);
        }
        
        private void OngetBallNumsLCBOperationCompleted(object arg) {
            if ((this.getBallNumsLCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBallNumsLCBCompleted(this, new getBallNumsLCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateGameBallsLCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateGameBallsLCB(int gID, int bCnt, int[] bNums) {
            object[] results = this.Invoke("updateGameBallsLCB", new object[] {
                        gID,
                        bCnt,
                        bNums});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateGameBallsLCBAsync(int gID, int bCnt, int[] bNums) {
            this.updateGameBallsLCBAsync(gID, bCnt, bNums, null);
        }
        
        /// <remarks/>
        public void updateGameBallsLCBAsync(int gID, int bCnt, int[] bNums, object userState) {
            if ((this.updateGameBallsLCBOperationCompleted == null)) {
                this.updateGameBallsLCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGameBallsLCBOperationCompleted);
            }
            this.InvokeAsync("updateGameBallsLCB", new object[] {
                        gID,
                        bCnt,
                        bNums}, this.updateGameBallsLCBOperationCompleted, userState);
        }
        
        private void OnupdateGameBallsLCBOperationCompleted(object arg) {
            if ((this.updateGameBallsLCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGameBallsLCBCompleted(this, new updateGameBallsLCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/closeGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool closeGame(int gSysID, int gID) {
            object[] results = this.Invoke("closeGame", new object[] {
                        gSysID,
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void closeGameAsync(int gSysID, int gID) {
            this.closeGameAsync(gSysID, gID, null);
        }
        
        /// <remarks/>
        public void closeGameAsync(int gSysID, int gID, object userState) {
            if ((this.closeGameOperationCompleted == null)) {
                this.closeGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseGameOperationCompleted);
            }
            this.InvokeAsync("closeGame", new object[] {
                        gSysID,
                        gID}, this.closeGameOperationCompleted, userState);
        }
        
        private void OncloseGameOperationCompleted(object arg) {
            if ((this.closeGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeGameCompleted(this, new closeGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/closeGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool closeGames(int gSysID) {
            object[] results = this.Invoke("closeGames", new object[] {
                        gSysID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void closeGamesAsync(int gSysID) {
            this.closeGamesAsync(gSysID, null);
        }
        
        /// <remarks/>
        public void closeGamesAsync(int gSysID, object userState) {
            if ((this.closeGamesOperationCompleted == null)) {
                this.closeGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseGamesOperationCompleted);
            }
            this.InvokeAsync("closeGames", new object[] {
                        gSysID}, this.closeGamesOperationCompleted, userState);
        }
        
        private void OncloseGamesOperationCompleted(object arg) {
            if ((this.closeGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeGamesCompleted(this, new closeGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/closeGame24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool closeGame24(int gID) {
            object[] results = this.Invoke("closeGame24", new object[] {
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void closeGame24Async(int gID) {
            this.closeGame24Async(gID, null);
        }
        
        /// <remarks/>
        public void closeGame24Async(int gID, object userState) {
            if ((this.closeGame24OperationCompleted == null)) {
                this.closeGame24OperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseGame24OperationCompleted);
            }
            this.InvokeAsync("closeGame24", new object[] {
                        gID}, this.closeGame24OperationCompleted, userState);
        }
        
        private void OncloseGame24OperationCompleted(object arg) {
            if ((this.closeGame24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeGame24Completed(this, new closeGame24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveGame24Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveGame24Data(Games24 gData) {
            object[] results = this.Invoke("saveGame24Data", new object[] {
                        gData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveGame24DataAsync(Games24 gData) {
            this.saveGame24DataAsync(gData, null);
        }
        
        /// <remarks/>
        public void saveGame24DataAsync(Games24 gData, object userState) {
            if ((this.saveGame24DataOperationCompleted == null)) {
                this.saveGame24DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveGame24DataOperationCompleted);
            }
            this.InvokeAsync("saveGame24Data", new object[] {
                        gData}, this.saveGame24DataOperationCompleted, userState);
        }
        
        private void OnsaveGame24DataOperationCompleted(object arg) {
            if ((this.saveGame24DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveGame24DataCompleted(this, new saveGame24DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllGame24DataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllGame24DataForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("deleteAllGame24DataForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllGame24DataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.deleteAllGame24DataForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void deleteAllGame24DataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.deleteAllGame24DataForDateRangeOperationCompleted == null)) {
                this.deleteAllGame24DataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllGame24DataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllGame24DataForDateRange", new object[] {
                        sDate,
                        eDate}, this.deleteAllGame24DataForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllGame24DataForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllGame24DataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllGame24DataForDateRangeCompleted(this, new deleteAllGame24DataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllGame24DataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Games24[] getAllGame24DataForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("getAllGame24DataForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((Games24[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllGame24DataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.getAllGame24DataForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void getAllGame24DataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.getAllGame24DataForDateRangeOperationCompleted == null)) {
                this.getAllGame24DataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllGame24DataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllGame24DataForDateRange", new object[] {
                        sDate,
                        eDate}, this.getAllGame24DataForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllGame24DataForDateRangeOperationCompleted(object arg) {
            if ((this.getAllGame24DataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllGame24DataForDateRangeCompleted(this, new getAllGame24DataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllGame24Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Games24[] getAllGame24Data(int gmID) {
            object[] results = this.Invoke("getAllGame24Data", new object[] {
                        gmID});
            return ((Games24[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllGame24DataAsync(int gmID) {
            this.getAllGame24DataAsync(gmID, null);
        }
        
        /// <remarks/>
        public void getAllGame24DataAsync(int gmID, object userState) {
            if ((this.getAllGame24DataOperationCompleted == null)) {
                this.getAllGame24DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllGame24DataOperationCompleted);
            }
            this.InvokeAsync("getAllGame24Data", new object[] {
                        gmID}, this.getAllGame24DataOperationCompleted, userState);
        }
        
        private void OngetAllGame24DataOperationCompleted(object arg) {
            if ((this.getAllGame24DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllGame24DataCompleted(this, new getAllGame24DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCurrentGame24List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getCurrentGame24List() {
            object[] results = this.Invoke("getCurrentGame24List", new object[0]);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentGame24ListAsync() {
            this.getCurrentGame24ListAsync(null);
        }
        
        /// <remarks/>
        public void getCurrentGame24ListAsync(object userState) {
            if ((this.getCurrentGame24ListOperationCompleted == null)) {
                this.getCurrentGame24ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentGame24ListOperationCompleted);
            }
            this.InvokeAsync("getCurrentGame24List", new object[0], this.getCurrentGame24ListOperationCompleted, userState);
        }
        
        private void OngetCurrentGame24ListOperationCompleted(object arg) {
            if ((this.getCurrentGame24ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentGame24ListCompleted(this, new getCurrentGame24ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAll4CurrentGame24Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Games24[] getAll4CurrentGame24Data(int gmID) {
            object[] results = this.Invoke("getAll4CurrentGame24Data", new object[] {
                        gmID});
            return ((Games24[])(results[0]));
        }
        
        /// <remarks/>
        public void getAll4CurrentGame24DataAsync(int gmID) {
            this.getAll4CurrentGame24DataAsync(gmID, null);
        }
        
        /// <remarks/>
        public void getAll4CurrentGame24DataAsync(int gmID, object userState) {
            if ((this.getAll4CurrentGame24DataOperationCompleted == null)) {
                this.getAll4CurrentGame24DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAll4CurrentGame24DataOperationCompleted);
            }
            this.InvokeAsync("getAll4CurrentGame24Data", new object[] {
                        gmID}, this.getAll4CurrentGame24DataOperationCompleted, userState);
        }
        
        private void OngetAll4CurrentGame24DataOperationCompleted(object arg) {
            if ((this.getAll4CurrentGame24DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAll4CurrentGame24DataCompleted(this, new getAll4CurrentGame24DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCurrentGame24Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Games24 getCurrentGame24Data(int lvl, int gmID) {
            object[] results = this.Invoke("getCurrentGame24Data", new object[] {
                        lvl,
                        gmID});
            return ((Games24)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentGame24DataAsync(int lvl, int gmID) {
            this.getCurrentGame24DataAsync(lvl, gmID, null);
        }
        
        /// <remarks/>
        public void getCurrentGame24DataAsync(int lvl, int gmID, object userState) {
            if ((this.getCurrentGame24DataOperationCompleted == null)) {
                this.getCurrentGame24DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentGame24DataOperationCompleted);
            }
            this.InvokeAsync("getCurrentGame24Data", new object[] {
                        lvl,
                        gmID}, this.getCurrentGame24DataOperationCompleted, userState);
        }
        
        private void OngetCurrentGame24DataOperationCompleted(object arg) {
            if ((this.getCurrentGame24DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentGame24DataCompleted(this, new getCurrentGame24DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGame24Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Games24 getGame24Data(int gID) {
            object[] results = this.Invoke("getGame24Data", new object[] {
                        gID});
            return ((Games24)(results[0]));
        }
        
        /// <remarks/>
        public void getGame24DataAsync(int gID) {
            this.getGame24DataAsync(gID, null);
        }
        
        /// <remarks/>
        public void getGame24DataAsync(int gID, object userState) {
            if ((this.getGame24DataOperationCompleted == null)) {
                this.getGame24DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGame24DataOperationCompleted);
            }
            this.InvokeAsync("getGame24Data", new object[] {
                        gID}, this.getGame24DataOperationCompleted, userState);
        }
        
        private void OngetGame24DataOperationCompleted(object arg) {
            if ((this.getGame24DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGame24DataCompleted(this, new getGame24DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveProgressive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveProgressive(ProgressiveData nData) {
            object[] results = this.Invoke("saveProgressive", new object[] {
                        nData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveProgressiveAsync(ProgressiveData nData) {
            this.saveProgressiveAsync(nData, null);
        }
        
        /// <remarks/>
        public void saveProgressiveAsync(ProgressiveData nData, object userState) {
            if ((this.saveProgressiveOperationCompleted == null)) {
                this.saveProgressiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveProgressiveOperationCompleted);
            }
            this.InvokeAsync("saveProgressive", new object[] {
                        nData}, this.saveProgressiveOperationCompleted, userState);
        }
        
        private void OnsaveProgressiveOperationCompleted(object arg) {
            if ((this.saveProgressiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveProgressiveCompleted(this, new saveProgressiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addToProgressive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addToProgressive(int gSysID, int grpID, decimal addAmt) {
            object[] results = this.Invoke("addToProgressive", new object[] {
                        gSysID,
                        grpID,
                        addAmt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addToProgressiveAsync(int gSysID, int grpID, decimal addAmt) {
            this.addToProgressiveAsync(gSysID, grpID, addAmt, null);
        }
        
        /// <remarks/>
        public void addToProgressiveAsync(int gSysID, int grpID, decimal addAmt, object userState) {
            if ((this.addToProgressiveOperationCompleted == null)) {
                this.addToProgressiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddToProgressiveOperationCompleted);
            }
            this.InvokeAsync("addToProgressive", new object[] {
                        gSysID,
                        grpID,
                        addAmt}, this.addToProgressiveOperationCompleted, userState);
        }
        
        private void OnaddToProgressiveOperationCompleted(object arg) {
            if ((this.addToProgressiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addToProgressiveCompleted(this, new addToProgressiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProgressiveWinAmt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal getProgressiveWinAmt(int gSysID, int grpID, decimal nSeed) {
            object[] results = this.Invoke("getProgressiveWinAmt", new object[] {
                        gSysID,
                        grpID,
                        nSeed});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void getProgressiveWinAmtAsync(int gSysID, int grpID, decimal nSeed) {
            this.getProgressiveWinAmtAsync(gSysID, grpID, nSeed, null);
        }
        
        /// <remarks/>
        public void getProgressiveWinAmtAsync(int gSysID, int grpID, decimal nSeed, object userState) {
            if ((this.getProgressiveWinAmtOperationCompleted == null)) {
                this.getProgressiveWinAmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgressiveWinAmtOperationCompleted);
            }
            this.InvokeAsync("getProgressiveWinAmt", new object[] {
                        gSysID,
                        grpID,
                        nSeed}, this.getProgressiveWinAmtOperationCompleted, userState);
        }
        
        private void OngetProgressiveWinAmtOperationCompleted(object arg) {
            if ((this.getProgressiveWinAmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgressiveWinAmtCompleted(this, new getProgressiveWinAmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProgressiveData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProgressiveData getProgressiveData(int gSysID, int grpID) {
            object[] results = this.Invoke("getProgressiveData", new object[] {
                        gSysID,
                        grpID});
            return ((ProgressiveData)(results[0]));
        }
        
        /// <remarks/>
        public void getProgressiveDataAsync(int gSysID, int grpID) {
            this.getProgressiveDataAsync(gSysID, grpID, null);
        }
        
        /// <remarks/>
        public void getProgressiveDataAsync(int gSysID, int grpID, object userState) {
            if ((this.getProgressiveDataOperationCompleted == null)) {
                this.getProgressiveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgressiveDataOperationCompleted);
            }
            this.InvokeAsync("getProgressiveData", new object[] {
                        gSysID,
                        grpID}, this.getProgressiveDataOperationCompleted, userState);
        }
        
        private void OngetProgressiveDataOperationCompleted(object arg) {
            if ((this.getProgressiveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgressiveDataCompleted(this, new getProgressiveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getServerDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getServerDateTime() {
            object[] results = this.Invoke("getServerDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getServerDateTimeAsync() {
            this.getServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void getServerDateTimeAsync(object userState) {
            if ((this.getServerDateTimeOperationCompleted == null)) {
                this.getServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("getServerDateTime", new object[0], this.getServerDateTimeOperationCompleted, userState);
        }
        
        private void OngetServerDateTimeOperationCompleted(object arg) {
            if ((this.getServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerDateTimeCompleted(this, new getServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPOSErrorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public POSLogEntry[] getPOSErrorList() {
            object[] results = this.Invoke("getPOSErrorList", new object[0]);
            return ((POSLogEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void getPOSErrorListAsync() {
            this.getPOSErrorListAsync(null);
        }
        
        /// <remarks/>
        public void getPOSErrorListAsync(object userState) {
            if ((this.getPOSErrorListOperationCompleted == null)) {
                this.getPOSErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPOSErrorListOperationCompleted);
            }
            this.InvokeAsync("getPOSErrorList", new object[0], this.getPOSErrorListOperationCompleted, userState);
        }
        
        private void OngetPOSErrorListOperationCompleted(object arg) {
            if ((this.getPOSErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPOSErrorListCompleted(this, new getPOSErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getErrorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LogEntry[] getErrorList(string tID) {
            object[] results = this.Invoke("getErrorList", new object[] {
                        tID});
            return ((LogEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void getErrorListAsync(string tID) {
            this.getErrorListAsync(tID, null);
        }
        
        /// <remarks/>
        public void getErrorListAsync(string tID, object userState) {
            if ((this.getErrorListOperationCompleted == null)) {
                this.getErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetErrorListOperationCompleted);
            }
            this.InvokeAsync("getErrorList", new object[] {
                        tID}, this.getErrorListOperationCompleted, userState);
        }
        
        private void OngetErrorListOperationCompleted(object arg) {
            if ((this.getErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getErrorListCompleted(this, new getErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCallerLogList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallerLogEntry[] getCallerLogList() {
            object[] results = this.Invoke("getCallerLogList", new object[0]);
            return ((CallerLogEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void getCallerLogListAsync() {
            this.getCallerLogListAsync(null);
        }
        
        /// <remarks/>
        public void getCallerLogListAsync(object userState) {
            if ((this.getCallerLogListOperationCompleted == null)) {
                this.getCallerLogListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCallerLogListOperationCompleted);
            }
            this.InvokeAsync("getCallerLogList", new object[0], this.getCallerLogListOperationCompleted, userState);
        }
        
        private void OngetCallerLogListOperationCompleted(object arg) {
            if ((this.getCallerLogListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCallerLogListCompleted(this, new getCallerLogListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/logError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool logError(LogEntry entry) {
            object[] results = this.Invoke("logError", new object[] {
                        entry});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void logErrorAsync(LogEntry entry) {
            this.logErrorAsync(entry, null);
        }
        
        /// <remarks/>
        public void logErrorAsync(LogEntry entry, object userState) {
            if ((this.logErrorOperationCompleted == null)) {
                this.logErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogErrorOperationCompleted);
            }
            this.InvokeAsync("logError", new object[] {
                        entry}, this.logErrorOperationCompleted, userState);
        }
        
        private void OnlogErrorOperationCompleted(object arg) {
            if ((this.logErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logErrorCompleted(this, new logErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/logPOSLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool logPOSLog(POSLogEntry entry) {
            object[] results = this.Invoke("logPOSLog", new object[] {
                        entry});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void logPOSLogAsync(POSLogEntry entry) {
            this.logPOSLogAsync(entry, null);
        }
        
        /// <remarks/>
        public void logPOSLogAsync(POSLogEntry entry, object userState) {
            if ((this.logPOSLogOperationCompleted == null)) {
                this.logPOSLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogPOSLogOperationCompleted);
            }
            this.InvokeAsync("logPOSLog", new object[] {
                        entry}, this.logPOSLogOperationCompleted, userState);
        }
        
        private void OnlogPOSLogOperationCompleted(object arg) {
            if ((this.logPOSLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logPOSLogCompleted(this, new logPOSLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/logCallerLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool logCallerLog(CallerLogEntry entry) {
            object[] results = this.Invoke("logCallerLog", new object[] {
                        entry});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void logCallerLogAsync(CallerLogEntry entry) {
            this.logCallerLogAsync(entry, null);
        }
        
        /// <remarks/>
        public void logCallerLogAsync(CallerLogEntry entry, object userState) {
            if ((this.logCallerLogOperationCompleted == null)) {
                this.logCallerLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogCallerLogOperationCompleted);
            }
            this.InvokeAsync("logCallerLog", new object[] {
                        entry}, this.logCallerLogOperationCompleted, userState);
        }
        
        private void OnlogCallerLogOperationCompleted(object arg) {
            if ((this.logCallerLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logCallerLogCompleted(this, new logCallerLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLocationCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLocationCode() {
            object[] results = this.Invoke("getLocationCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLocationCodeAsync() {
            this.getLocationCodeAsync(null);
        }
        
        /// <remarks/>
        public void getLocationCodeAsync(object userState) {
            if ((this.getLocationCodeOperationCompleted == null)) {
                this.getLocationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocationCodeOperationCompleted);
            }
            this.InvokeAsync("getLocationCode", new object[0], this.getLocationCodeOperationCompleted, userState);
        }
        
        private void OngetLocationCodeOperationCompleted(object arg) {
            if ((this.getLocationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocationCodeCompleted(this, new getLocationCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCards24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CardData24[] getCards24(int gSysID, int lvl, int crdCnt) {
            object[] results = this.Invoke("getCards24", new object[] {
                        gSysID,
                        lvl,
                        crdCnt});
            return ((CardData24[])(results[0]));
        }
        
        /// <remarks/>
        public void getCards24Async(int gSysID, int lvl, int crdCnt) {
            this.getCards24Async(gSysID, lvl, crdCnt, null);
        }
        
        /// <remarks/>
        public void getCards24Async(int gSysID, int lvl, int crdCnt, object userState) {
            if ((this.getCards24OperationCompleted == null)) {
                this.getCards24OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCards24OperationCompleted);
            }
            this.InvokeAsync("getCards24", new object[] {
                        gSysID,
                        lvl,
                        crdCnt}, this.getCards24OperationCompleted, userState);
        }
        
        private void OngetCards24OperationCompleted(object arg) {
            if ((this.getCards24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCards24Completed(this, new getCards24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCard24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CardData24 getCard24(int sNum) {
            object[] results = this.Invoke("getCard24", new object[] {
                        sNum});
            return ((CardData24)(results[0]));
        }
        
        /// <remarks/>
        public void getCard24Async(int sNum) {
            this.getCard24Async(sNum, null);
        }
        
        /// <remarks/>
        public void getCard24Async(int sNum, object userState) {
            if ((this.getCard24OperationCompleted == null)) {
                this.getCard24OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCard24OperationCompleted);
            }
            this.InvokeAsync("getCard24", new object[] {
                        sNum}, this.getCard24OperationCompleted, userState);
        }
        
        private void OngetCard24OperationCompleted(object arg) {
            if ((this.getCard24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCard24Completed(this, new getCard24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateBonus24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateBonus24(Bonus24 bData) {
            object[] results = this.Invoke("updateBonus24", new object[] {
                        bData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateBonus24Async(Bonus24 bData) {
            this.updateBonus24Async(bData, null);
        }
        
        /// <remarks/>
        public void updateBonus24Async(Bonus24 bData, object userState) {
            if ((this.updateBonus24OperationCompleted == null)) {
                this.updateBonus24OperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateBonus24OperationCompleted);
            }
            this.InvokeAsync("updateBonus24", new object[] {
                        bData}, this.updateBonus24OperationCompleted, userState);
        }
        
        private void OnupdateBonus24OperationCompleted(object arg) {
            if ((this.updateBonus24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateBonus24Completed(this, new updateBonus24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBonus24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bonus24 getBonus24(string tID, int gSysID, int bNum) {
            object[] results = this.Invoke("getBonus24", new object[] {
                        tID,
                        gSysID,
                        bNum});
            return ((Bonus24)(results[0]));
        }
        
        /// <remarks/>
        public void getBonus24Async(string tID, int gSysID, int bNum) {
            this.getBonus24Async(tID, gSysID, bNum, null);
        }
        
        /// <remarks/>
        public void getBonus24Async(string tID, int gSysID, int bNum, object userState) {
            if ((this.getBonus24OperationCompleted == null)) {
                this.getBonus24OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBonus24OperationCompleted);
            }
            this.InvokeAsync("getBonus24", new object[] {
                        tID,
                        gSysID,
                        bNum}, this.getBonus24OperationCompleted, userState);
        }
        
        private void OngetBonus24OperationCompleted(object arg) {
            if ((this.getBonus24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBonus24Completed(this, new getBonus24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSalesData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateSalesData(int sID, decimal sDisc, bool sVoided, bool sComp) {
            object[] results = this.Invoke("updateSalesData", new object[] {
                        sID,
                        sDisc,
                        sVoided,
                        sComp});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateSalesDataAsync(int sID, decimal sDisc, bool sVoided, bool sComp) {
            this.updateSalesDataAsync(sID, sDisc, sVoided, sComp, null);
        }
        
        /// <remarks/>
        public void updateSalesDataAsync(int sID, decimal sDisc, bool sVoided, bool sComp, object userState) {
            if ((this.updateSalesDataOperationCompleted == null)) {
                this.updateSalesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSalesDataOperationCompleted);
            }
            this.InvokeAsync("updateSalesData", new object[] {
                        sID,
                        sDisc,
                        sVoided,
                        sComp}, this.updateSalesDataOperationCompleted, userState);
        }
        
        private void OnupdateSalesDataOperationCompleted(object arg) {
            if ((this.updateSalesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSalesDataCompleted(this, new updateSalesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSalesData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int saveSalesData(Sales sData) {
            object[] results = this.Invoke("saveSalesData", new object[] {
                        sData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void saveSalesDataAsync(Sales sData) {
            this.saveSalesDataAsync(sData, null);
        }
        
        /// <remarks/>
        public void saveSalesDataAsync(Sales sData, object userState) {
            if ((this.saveSalesDataOperationCompleted == null)) {
                this.saveSalesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSalesDataOperationCompleted);
            }
            this.InvokeAsync("saveSalesData", new object[] {
                        sData}, this.saveSalesDataOperationCompleted, userState);
        }
        
        private void OnsaveSalesDataOperationCompleted(object arg) {
            if ((this.saveSalesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSalesDataCompleted(this, new saveSalesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSalesData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Sales getSalesData(int tID) {
            object[] results = this.Invoke("getSalesData", new object[] {
                        tID});
            return ((Sales)(results[0]));
        }
        
        /// <remarks/>
        public void getSalesDataAsync(int tID) {
            this.getSalesDataAsync(tID, null);
        }
        
        /// <remarks/>
        public void getSalesDataAsync(int tID, object userState) {
            if ((this.getSalesDataOperationCompleted == null)) {
                this.getSalesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSalesDataOperationCompleted);
            }
            this.InvokeAsync("getSalesData", new object[] {
                        tID}, this.getSalesDataOperationCompleted, userState);
        }
        
        private void OngetSalesDataOperationCompleted(object arg) {
            if ((this.getSalesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSalesDataCompleted(this, new getSalesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllSalesDataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Sales[] getAllSalesDataForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("getAllSalesDataForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((Sales[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllSalesDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.getAllSalesDataForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void getAllSalesDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.getAllSalesDataForDateRangeOperationCompleted == null)) {
                this.getAllSalesDataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSalesDataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllSalesDataForDateRange", new object[] {
                        sDate,
                        eDate}, this.getAllSalesDataForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllSalesDataForDateRangeOperationCompleted(object arg) {
            if ((this.getAllSalesDataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSalesDataForDateRangeCompleted(this, new getAllSalesDataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllSalesDataForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllSalesDataForDateRange(System.DateTime sDate, System.DateTime eDate) {
            object[] results = this.Invoke("deleteAllSalesDataForDateRange", new object[] {
                        sDate,
                        eDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllSalesDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate) {
            this.deleteAllSalesDataForDateRangeAsync(sDate, eDate, null);
        }
        
        /// <remarks/>
        public void deleteAllSalesDataForDateRangeAsync(System.DateTime sDate, System.DateTime eDate, object userState) {
            if ((this.deleteAllSalesDataForDateRangeOperationCompleted == null)) {
                this.deleteAllSalesDataForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllSalesDataForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllSalesDataForDateRange", new object[] {
                        sDate,
                        eDate}, this.deleteAllSalesDataForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllSalesDataForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllSalesDataForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllSalesDataForDateRangeCompleted(this, new deleteAllSalesDataForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllPOSetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllPOSetData() {
            object[] results = this.Invoke("deleteAllPOSetData", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllPOSetDataAsync() {
            this.deleteAllPOSetDataAsync(null);
        }
        
        /// <remarks/>
        public void deleteAllPOSetDataAsync(object userState) {
            if ((this.deleteAllPOSetDataOperationCompleted == null)) {
                this.deleteAllPOSetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllPOSetDataOperationCompleted);
            }
            this.InvokeAsync("deleteAllPOSetData", new object[0], this.deleteAllPOSetDataOperationCompleted, userState);
        }
        
        private void OndeleteAllPOSetDataOperationCompleted(object arg) {
            if ((this.deleteAllPOSetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllPOSetDataCompleted(this, new deleteAllPOSetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletePOSetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deletePOSetData(int pID) {
            object[] results = this.Invoke("deletePOSetData", new object[] {
                        pID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deletePOSetDataAsync(int pID) {
            this.deletePOSetDataAsync(pID, null);
        }
        
        /// <remarks/>
        public void deletePOSetDataAsync(int pID, object userState) {
            if ((this.deletePOSetDataOperationCompleted == null)) {
                this.deletePOSetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePOSetDataOperationCompleted);
            }
            this.InvokeAsync("deletePOSetData", new object[] {
                        pID}, this.deletePOSetDataOperationCompleted, userState);
        }
        
        private void OndeletePOSetDataOperationCompleted(object arg) {
            if ((this.deletePOSetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePOSetDataCompleted(this, new deletePOSetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPOSets", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public POSets24[] getAllPOSets() {
            object[] results = this.Invoke("getAllPOSets", new object[0]);
            return ((POSets24[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPOSetsAsync() {
            this.getAllPOSetsAsync(null);
        }
        
        /// <remarks/>
        public void getAllPOSetsAsync(object userState) {
            if ((this.getAllPOSetsOperationCompleted == null)) {
                this.getAllPOSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPOSetsOperationCompleted);
            }
            this.InvokeAsync("getAllPOSets", new object[0], this.getAllPOSetsOperationCompleted, userState);
        }
        
        private void OngetAllPOSetsOperationCompleted(object arg) {
            if ((this.getAllPOSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPOSetsCompleted(this, new getAllPOSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPOSetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public POSets24 getPOSetData(int pID) {
            object[] results = this.Invoke("getPOSetData", new object[] {
                        pID});
            return ((POSets24)(results[0]));
        }
        
        /// <remarks/>
        public void getPOSetDataAsync(int pID) {
            this.getPOSetDataAsync(pID, null);
        }
        
        /// <remarks/>
        public void getPOSetDataAsync(int pID, object userState) {
            if ((this.getPOSetDataOperationCompleted == null)) {
                this.getPOSetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPOSetDataOperationCompleted);
            }
            this.InvokeAsync("getPOSetData", new object[] {
                        pID}, this.getPOSetDataOperationCompleted, userState);
        }
        
        private void OngetPOSetDataOperationCompleted(object arg) {
            if ((this.getPOSetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPOSetDataCompleted(this, new getPOSetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/savePOSetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool savePOSetData(POSets24 pData) {
            object[] results = this.Invoke("savePOSetData", new object[] {
                        pData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void savePOSetDataAsync(POSets24 pData) {
            this.savePOSetDataAsync(pData, null);
        }
        
        /// <remarks/>
        public void savePOSetDataAsync(POSets24 pData, object userState) {
            if ((this.savePOSetDataOperationCompleted == null)) {
                this.savePOSetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsavePOSetDataOperationCompleted);
            }
            this.InvokeAsync("savePOSetData", new object[] {
                        pData}, this.savePOSetDataOperationCompleted, userState);
        }
        
        private void OnsavePOSetDataOperationCompleted(object arg) {
            if ((this.savePOSetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.savePOSetDataCompleted(this, new savePOSetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllBingoPatternData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllBingoPatternData() {
            object[] results = this.Invoke("deleteAllBingoPatternData", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllBingoPatternDataAsync() {
            this.deleteAllBingoPatternDataAsync(null);
        }
        
        /// <remarks/>
        public void deleteAllBingoPatternDataAsync(object userState) {
            if ((this.deleteAllBingoPatternDataOperationCompleted == null)) {
                this.deleteAllBingoPatternDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllBingoPatternDataOperationCompleted);
            }
            this.InvokeAsync("deleteAllBingoPatternData", new object[0], this.deleteAllBingoPatternDataOperationCompleted, userState);
        }
        
        private void OndeleteAllBingoPatternDataOperationCompleted(object arg) {
            if ((this.deleteAllBingoPatternDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllBingoPatternDataCompleted(this, new deleteAllBingoPatternDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllBingoPatterns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BingoPatterns[] getAllBingoPatterns() {
            object[] results = this.Invoke("getAllBingoPatterns", new object[0]);
            return ((BingoPatterns[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllBingoPatternsAsync() {
            this.getAllBingoPatternsAsync(null);
        }
        
        /// <remarks/>
        public void getAllBingoPatternsAsync(object userState) {
            if ((this.getAllBingoPatternsOperationCompleted == null)) {
                this.getAllBingoPatternsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllBingoPatternsOperationCompleted);
            }
            this.InvokeAsync("getAllBingoPatterns", new object[0], this.getAllBingoPatternsOperationCompleted, userState);
        }
        
        private void OngetAllBingoPatternsOperationCompleted(object arg) {
            if ((this.getAllBingoPatternsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllBingoPatternsCompleted(this, new getAllBingoPatternsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBingoPatternData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BingoPatterns getBingoPatternData(int pID) {
            object[] results = this.Invoke("getBingoPatternData", new object[] {
                        pID});
            return ((BingoPatterns)(results[0]));
        }
        
        /// <remarks/>
        public void getBingoPatternDataAsync(int pID) {
            this.getBingoPatternDataAsync(pID, null);
        }
        
        /// <remarks/>
        public void getBingoPatternDataAsync(int pID, object userState) {
            if ((this.getBingoPatternDataOperationCompleted == null)) {
                this.getBingoPatternDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBingoPatternDataOperationCompleted);
            }
            this.InvokeAsync("getBingoPatternData", new object[] {
                        pID}, this.getBingoPatternDataOperationCompleted, userState);
        }
        
        private void OngetBingoPatternDataOperationCompleted(object arg) {
            if ((this.getBingoPatternDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBingoPatternDataCompleted(this, new getBingoPatternDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveBingoPatternData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveBingoPatternData(BingoPatterns pData) {
            object[] results = this.Invoke("saveBingoPatternData", new object[] {
                        pData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveBingoPatternDataAsync(BingoPatterns pData) {
            this.saveBingoPatternDataAsync(pData, null);
        }
        
        /// <remarks/>
        public void saveBingoPatternDataAsync(BingoPatterns pData, object userState) {
            if ((this.saveBingoPatternDataOperationCompleted == null)) {
                this.saveBingoPatternDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveBingoPatternDataOperationCompleted);
            }
            this.InvokeAsync("saveBingoPatternData", new object[] {
                        pData}, this.saveBingoPatternDataOperationCompleted, userState);
        }
        
        private void OnsaveBingoPatternDataOperationCompleted(object arg) {
            if ((this.saveBingoPatternDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveBingoPatternDataCompleted(this, new saveBingoPatternDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/initializeDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool initializeDB() {
            object[] results = this.Invoke("initializeDB", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void initializeDBAsync() {
            this.initializeDBAsync(null);
        }
        
        /// <remarks/>
        public void initializeDBAsync(object userState) {
            if ((this.initializeDBOperationCompleted == null)) {
                this.initializeDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OninitializeDBOperationCompleted);
            }
            this.InvokeAsync("initializeDB", new object[0], this.initializeDBOperationCompleted, userState);
        }
        
        private void OninitializeDBOperationCompleted(object arg) {
            if ((this.initializeDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.initializeDBCompleted(this, new initializeDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/lastError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string lastError() {
            object[] results = this.Invoke("lastError", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lastErrorAsync() {
            this.lastErrorAsync(null);
        }
        
        /// <remarks/>
        public void lastErrorAsync(object userState) {
            if ((this.lastErrorOperationCompleted == null)) {
                this.lastErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlastErrorOperationCompleted);
            }
            this.InvokeAsync("lastError", new object[0], this.lastErrorOperationCompleted, userState);
        }
        
        private void OnlastErrorOperationCompleted(object arg) {
            if ((this.lastErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lastErrorCompleted(this, new lastErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setLastError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLastError(string lErr) {
            this.Invoke("setLastError", new object[] {
                        lErr});
        }
        
        /// <remarks/>
        public void setLastErrorAsync(string lErr) {
            this.setLastErrorAsync(lErr, null);
        }
        
        /// <remarks/>
        public void setLastErrorAsync(string lErr, object userState) {
            if ((this.setLastErrorOperationCompleted == null)) {
                this.setLastErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLastErrorOperationCompleted);
            }
            this.InvokeAsync("setLastError", new object[] {
                        lErr}, this.setLastErrorOperationCompleted, userState);
        }
        
        private void OnsetLastErrorOperationCompleted(object arg) {
            if ((this.setLastErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLastErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveAutoBallsRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveAutoBallsRecord(AutoBalls pData) {
            object[] results = this.Invoke("saveAutoBallsRecord", new object[] {
                        pData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveAutoBallsRecordAsync(AutoBalls pData) {
            this.saveAutoBallsRecordAsync(pData, null);
        }
        
        /// <remarks/>
        public void saveAutoBallsRecordAsync(AutoBalls pData, object userState) {
            if ((this.saveAutoBallsRecordOperationCompleted == null)) {
                this.saveAutoBallsRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAutoBallsRecordOperationCompleted);
            }
            this.InvokeAsync("saveAutoBallsRecord", new object[] {
                        pData}, this.saveAutoBallsRecordOperationCompleted, userState);
        }
        
        private void OnsaveAutoBallsRecordOperationCompleted(object arg) {
            if ((this.saveAutoBallsRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAutoBallsRecordCompleted(this, new saveAutoBallsRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNextAutoBallRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoBalls getNextAutoBallRecord(int gSysID, int gID) {
            object[] results = this.Invoke("getNextAutoBallRecord", new object[] {
                        gSysID,
                        gID});
            return ((AutoBalls)(results[0]));
        }
        
        /// <remarks/>
        public void getNextAutoBallRecordAsync(int gSysID, int gID) {
            this.getNextAutoBallRecordAsync(gSysID, gID, null);
        }
        
        /// <remarks/>
        public void getNextAutoBallRecordAsync(int gSysID, int gID, object userState) {
            if ((this.getNextAutoBallRecordOperationCompleted == null)) {
                this.getNextAutoBallRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextAutoBallRecordOperationCompleted);
            }
            this.InvokeAsync("getNextAutoBallRecord", new object[] {
                        gSysID,
                        gID}, this.getNextAutoBallRecordOperationCompleted, userState);
        }
        
        private void OngetNextAutoBallRecordOperationCompleted(object arg) {
            if ((this.getNextAutoBallRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextAutoBallRecordCompleted(this, new getNextAutoBallRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAutoBallRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoBalls getAutoBallRecord(int gSysID, int gID) {
            object[] results = this.Invoke("getAutoBallRecord", new object[] {
                        gSysID,
                        gID});
            return ((AutoBalls)(results[0]));
        }
        
        /// <remarks/>
        public void getAutoBallRecordAsync(int gSysID, int gID) {
            this.getAutoBallRecordAsync(gSysID, gID, null);
        }
        
        /// <remarks/>
        public void getAutoBallRecordAsync(int gSysID, int gID, object userState) {
            if ((this.getAutoBallRecordOperationCompleted == null)) {
                this.getAutoBallRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutoBallRecordOperationCompleted);
            }
            this.InvokeAsync("getAutoBallRecord", new object[] {
                        gSysID,
                        gID}, this.getAutoBallRecordOperationCompleted, userState);
        }
        
        private void OngetAutoBallRecordOperationCompleted(object arg) {
            if ((this.getAutoBallRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAutoBallRecordCompleted(this, new getAutoBallRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAutoBallRecordCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAutoBallRecordCount(int gSysID) {
            object[] results = this.Invoke("getAutoBallRecordCount", new object[] {
                        gSysID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAutoBallRecordCountAsync(int gSysID) {
            this.getAutoBallRecordCountAsync(gSysID, null);
        }
        
        /// <remarks/>
        public void getAutoBallRecordCountAsync(int gSysID, object userState) {
            if ((this.getAutoBallRecordCountOperationCompleted == null)) {
                this.getAutoBallRecordCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutoBallRecordCountOperationCompleted);
            }
            this.InvokeAsync("getAutoBallRecordCount", new object[] {
                        gSysID}, this.getAutoBallRecordCountOperationCompleted, userState);
        }
        
        private void OngetAutoBallRecordCountOperationCompleted(object arg) {
            if ((this.getAutoBallRecordCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAutoBallRecordCountCompleted(this, new getAutoBallRecordCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users[] getAllUsers() {
            object[] results = this.Invoke("getAllUsers", new object[0]);
            return ((Users[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllUsersAsync() {
            this.getAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void getAllUsersAsync(object userState) {
            if ((this.getAllUsersOperationCompleted == null)) {
                this.getAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUsersOperationCompleted);
            }
            this.InvokeAsync("getAllUsers", new object[0], this.getAllUsersOperationCompleted, userState);
        }
        
        private void OngetAllUsersOperationCompleted(object arg) {
            if ((this.getAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUsersCompleted(this, new getAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteUserByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteUserByUserID(int uID) {
            object[] results = this.Invoke("deleteUserByUserID", new object[] {
                        uID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserByUserIDAsync(int uID) {
            this.deleteUserByUserIDAsync(uID, null);
        }
        
        /// <remarks/>
        public void deleteUserByUserIDAsync(int uID, object userState) {
            if ((this.deleteUserByUserIDOperationCompleted == null)) {
                this.deleteUserByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserByUserIDOperationCompleted);
            }
            this.InvokeAsync("deleteUserByUserID", new object[] {
                        uID}, this.deleteUserByUserIDOperationCompleted, userState);
        }
        
        private void OndeleteUserByUserIDOperationCompleted(object arg) {
            if ((this.deleteUserByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserByUserIDCompleted(this, new deleteUserByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserDataByLoginName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users getUserDataByLoginName(string lName) {
            object[] results = this.Invoke("getUserDataByLoginName", new object[] {
                        lName});
            return ((Users)(results[0]));
        }
        
        /// <remarks/>
        public void getUserDataByLoginNameAsync(string lName) {
            this.getUserDataByLoginNameAsync(lName, null);
        }
        
        /// <remarks/>
        public void getUserDataByLoginNameAsync(string lName, object userState) {
            if ((this.getUserDataByLoginNameOperationCompleted == null)) {
                this.getUserDataByLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDataByLoginNameOperationCompleted);
            }
            this.InvokeAsync("getUserDataByLoginName", new object[] {
                        lName}, this.getUserDataByLoginNameOperationCompleted, userState);
        }
        
        private void OngetUserDataByLoginNameOperationCompleted(object arg) {
            if ((this.getUserDataByLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDataByLoginNameCompleted(this, new getUserDataByLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserDataByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users getUserDataByUserID(int uID) {
            object[] results = this.Invoke("getUserDataByUserID", new object[] {
                        uID});
            return ((Users)(results[0]));
        }
        
        /// <remarks/>
        public void getUserDataByUserIDAsync(int uID) {
            this.getUserDataByUserIDAsync(uID, null);
        }
        
        /// <remarks/>
        public void getUserDataByUserIDAsync(int uID, object userState) {
            if ((this.getUserDataByUserIDOperationCompleted == null)) {
                this.getUserDataByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDataByUserIDOperationCompleted);
            }
            this.InvokeAsync("getUserDataByUserID", new object[] {
                        uID}, this.getUserDataByUserIDOperationCompleted, userState);
        }
        
        private void OngetUserDataByUserIDOperationCompleted(object arg) {
            if ((this.getUserDataByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDataByUserIDCompleted(this, new getUserDataByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateUserDataByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateUserDataByUserID(Users uData) {
            object[] results = this.Invoke("updateUserDataByUserID", new object[] {
                        uData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateUserDataByUserIDAsync(Users uData) {
            this.updateUserDataByUserIDAsync(uData, null);
        }
        
        /// <remarks/>
        public void updateUserDataByUserIDAsync(Users uData, object userState) {
            if ((this.updateUserDataByUserIDOperationCompleted == null)) {
                this.updateUserDataByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUserDataByUserIDOperationCompleted);
            }
            this.InvokeAsync("updateUserDataByUserID", new object[] {
                        uData}, this.updateUserDataByUserIDOperationCompleted, userState);
        }
        
        private void OnupdateUserDataByUserIDOperationCompleted(object arg) {
            if ((this.updateUserDataByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUserDataByUserIDCompleted(this, new updateUserDataByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createNewUserData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int createNewUserData(Users uData) {
            object[] results = this.Invoke("createNewUserData", new object[] {
                        uData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createNewUserDataAsync(Users uData) {
            this.createNewUserDataAsync(uData, null);
        }
        
        /// <remarks/>
        public void createNewUserDataAsync(Users uData, object userState) {
            if ((this.createNewUserDataOperationCompleted == null)) {
                this.createNewUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewUserDataOperationCompleted);
            }
            this.InvokeAsync("createNewUserData", new object[] {
                        uData}, this.createNewUserDataOperationCompleted, userState);
        }
        
        private void OncreateNewUserDataOperationCompleted(object arg) {
            if ((this.createNewUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewUserDataCompleted(this, new createNewUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlayerCountForGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getPlayerCountForGame(int gSysID, int gID) {
            object[] results = this.Invoke("getPlayerCountForGame", new object[] {
                        gSysID,
                        gID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getPlayerCountForGameAsync(int gSysID, int gID) {
            this.getPlayerCountForGameAsync(gSysID, gID, null);
        }
        
        /// <remarks/>
        public void getPlayerCountForGameAsync(int gSysID, int gID, object userState) {
            if ((this.getPlayerCountForGameOperationCompleted == null)) {
                this.getPlayerCountForGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayerCountForGameOperationCompleted);
            }
            this.InvokeAsync("getPlayerCountForGame", new object[] {
                        gSysID,
                        gID}, this.getPlayerCountForGameOperationCompleted, userState);
        }
        
        private void OngetPlayerCountForGameOperationCompleted(object arg) {
            if ((this.getPlayerCountForGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayerCountForGameCompleted(this, new getPlayerCountForGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMachineStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EGMTerminals getMachineStatus(string tID) {
            object[] results = this.Invoke("getMachineStatus", new object[] {
                        tID});
            return ((EGMTerminals)(results[0]));
        }
        
        /// <remarks/>
        public void getMachineStatusAsync(string tID) {
            this.getMachineStatusAsync(tID, null);
        }
        
        /// <remarks/>
        public void getMachineStatusAsync(string tID, object userState) {
            if ((this.getMachineStatusOperationCompleted == null)) {
                this.getMachineStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMachineStatusOperationCompleted);
            }
            this.InvokeAsync("getMachineStatus", new object[] {
                        tID}, this.getMachineStatusOperationCompleted, userState);
        }
        
        private void OngetMachineStatusOperationCompleted(object arg) {
            if ((this.getMachineStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMachineStatusCompleted(this, new getMachineStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateMachineStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateMachineStatus(string tID, int pin, int gID) {
            object[] results = this.Invoke("updateMachineStatus", new object[] {
                        tID,
                        pin,
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateMachineStatusAsync(string tID, int pin, int gID) {
            this.updateMachineStatusAsync(tID, pin, gID, null);
        }
        
        /// <remarks/>
        public void updateMachineStatusAsync(string tID, int pin, int gID, object userState) {
            if ((this.updateMachineStatusOperationCompleted == null)) {
                this.updateMachineStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMachineStatusOperationCompleted);
            }
            this.InvokeAsync("updateMachineStatus", new object[] {
                        tID,
                        pin,
                        gID}, this.updateMachineStatusOperationCompleted, userState);
        }
        
        private void OnupdateMachineStatusOperationCompleted(object arg) {
            if ((this.updateMachineStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMachineStatusCompleted(this, new updateMachineStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removeGameFromEGM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool removeGameFromEGM(string tID, int gID) {
            object[] results = this.Invoke("removeGameFromEGM", new object[] {
                        tID,
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeGameFromEGMAsync(string tID, int gID) {
            this.removeGameFromEGMAsync(tID, gID, null);
        }
        
        /// <remarks/>
        public void removeGameFromEGMAsync(string tID, int gID, object userState) {
            if ((this.removeGameFromEGMOperationCompleted == null)) {
                this.removeGameFromEGMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveGameFromEGMOperationCompleted);
            }
            this.InvokeAsync("removeGameFromEGM", new object[] {
                        tID,
                        gID}, this.removeGameFromEGMOperationCompleted, userState);
        }
        
        private void OnremoveGameFromEGMOperationCompleted(object arg) {
            if ((this.removeGameFromEGMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeGameFromEGMCompleted(this, new removeGameFromEGMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/registerGameOnEGM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool registerGameOnEGM(string tID, int gID) {
            object[] results = this.Invoke("registerGameOnEGM", new object[] {
                        tID,
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void registerGameOnEGMAsync(string tID, int gID) {
            this.registerGameOnEGMAsync(tID, gID, null);
        }
        
        /// <remarks/>
        public void registerGameOnEGMAsync(string tID, int gID, object userState) {
            if ((this.registerGameOnEGMOperationCompleted == null)) {
                this.registerGameOnEGMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterGameOnEGMOperationCompleted);
            }
            this.InvokeAsync("registerGameOnEGM", new object[] {
                        tID,
                        gID}, this.registerGameOnEGMOperationCompleted, userState);
        }
        
        private void OnregisterGameOnEGMOperationCompleted(object arg) {
            if ((this.registerGameOnEGMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerGameOnEGMCompleted(this, new registerGameOnEGMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEGMGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getEGMGames(string tID) {
            object[] results = this.Invoke("getEGMGames", new object[] {
                        tID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getEGMGamesAsync(string tID) {
            this.getEGMGamesAsync(tID, null);
        }
        
        /// <remarks/>
        public void getEGMGamesAsync(string tID, object userState) {
            if ((this.getEGMGamesOperationCompleted == null)) {
                this.getEGMGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEGMGamesOperationCompleted);
            }
            this.InvokeAsync("getEGMGames", new object[] {
                        tID}, this.getEGMGamesOperationCompleted, userState);
        }
        
        private void OngetEGMGamesOperationCompleted(object arg) {
            if ((this.getEGMGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEGMGamesCompleted(this, new getEGMGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllInstalledGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InstalledGames[] getAllInstalledGames() {
            object[] results = this.Invoke("getAllInstalledGames", new object[0]);
            return ((InstalledGames[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllInstalledGamesAsync() {
            this.getAllInstalledGamesAsync(null);
        }
        
        /// <remarks/>
        public void getAllInstalledGamesAsync(object userState) {
            if ((this.getAllInstalledGamesOperationCompleted == null)) {
                this.getAllInstalledGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllInstalledGamesOperationCompleted);
            }
            this.InvokeAsync("getAllInstalledGames", new object[0], this.getAllInstalledGamesOperationCompleted, userState);
        }
        
        private void OngetAllInstalledGamesOperationCompleted(object arg) {
            if ((this.getAllInstalledGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllInstalledGamesCompleted(this, new getAllInstalledGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getInstalledGameData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InstalledGames getInstalledGameData(int gID) {
            object[] results = this.Invoke("getInstalledGameData", new object[] {
                        gID});
            return ((InstalledGames)(results[0]));
        }
        
        /// <remarks/>
        public void getInstalledGameDataAsync(int gID) {
            this.getInstalledGameDataAsync(gID, null);
        }
        
        /// <remarks/>
        public void getInstalledGameDataAsync(int gID, object userState) {
            if ((this.getInstalledGameDataOperationCompleted == null)) {
                this.getInstalledGameDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInstalledGameDataOperationCompleted);
            }
            this.InvokeAsync("getInstalledGameData", new object[] {
                        gID}, this.getInstalledGameDataOperationCompleted, userState);
        }
        
        private void OngetInstalledGameDataOperationCompleted(object arg) {
            if ((this.getInstalledGameDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInstalledGameDataCompleted(this, new getInstalledGameDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateInstalledGameData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateInstalledGameData(InstalledGames gmData) {
            object[] results = this.Invoke("updateInstalledGameData", new object[] {
                        gmData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateInstalledGameDataAsync(InstalledGames gmData) {
            this.updateInstalledGameDataAsync(gmData, null);
        }
        
        /// <remarks/>
        public void updateInstalledGameDataAsync(InstalledGames gmData, object userState) {
            if ((this.updateInstalledGameDataOperationCompleted == null)) {
                this.updateInstalledGameDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateInstalledGameDataOperationCompleted);
            }
            this.InvokeAsync("updateInstalledGameData", new object[] {
                        gmData}, this.updateInstalledGameDataOperationCompleted, userState);
        }
        
        private void OnupdateInstalledGameDataOperationCompleted(object arg) {
            if ((this.updateInstalledGameDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateInstalledGameDataCompleted(this, new updateInstalledGameDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteInstalledGameData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteInstalledGameData(int gID) {
            object[] results = this.Invoke("deleteInstalledGameData", new object[] {
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteInstalledGameDataAsync(int gID) {
            this.deleteInstalledGameDataAsync(gID, null);
        }
        
        /// <remarks/>
        public void deleteInstalledGameDataAsync(int gID, object userState) {
            if ((this.deleteInstalledGameDataOperationCompleted == null)) {
                this.deleteInstalledGameDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteInstalledGameDataOperationCompleted);
            }
            this.InvokeAsync("deleteInstalledGameData", new object[] {
                        gID}, this.deleteInstalledGameDataOperationCompleted, userState);
        }
        
        private void OndeleteInstalledGameDataOperationCompleted(object arg) {
            if ((this.deleteInstalledGameDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteInstalledGameDataCompleted(this, new deleteInstalledGameDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllEGMTerminals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EGMTerminals[] getAllEGMTerminals() {
            object[] results = this.Invoke("getAllEGMTerminals", new object[0]);
            return ((EGMTerminals[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllEGMTerminalsAsync() {
            this.getAllEGMTerminalsAsync(null);
        }
        
        /// <remarks/>
        public void getAllEGMTerminalsAsync(object userState) {
            if ((this.getAllEGMTerminalsOperationCompleted == null)) {
                this.getAllEGMTerminalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllEGMTerminalsOperationCompleted);
            }
            this.InvokeAsync("getAllEGMTerminals", new object[0], this.getAllEGMTerminalsOperationCompleted, userState);
        }
        
        private void OngetAllEGMTerminalsOperationCompleted(object arg) {
            if ((this.getAllEGMTerminalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllEGMTerminalsCompleted(this, new getAllEGMTerminalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteEGMTerminalData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteEGMTerminalData(string tID) {
            object[] results = this.Invoke("deleteEGMTerminalData", new object[] {
                        tID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteEGMTerminalDataAsync(string tID) {
            this.deleteEGMTerminalDataAsync(tID, null);
        }
        
        /// <remarks/>
        public void deleteEGMTerminalDataAsync(string tID, object userState) {
            if ((this.deleteEGMTerminalDataOperationCompleted == null)) {
                this.deleteEGMTerminalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEGMTerminalDataOperationCompleted);
            }
            this.InvokeAsync("deleteEGMTerminalData", new object[] {
                        tID}, this.deleteEGMTerminalDataOperationCompleted, userState);
        }
        
        private void OndeleteEGMTerminalDataOperationCompleted(object arg) {
            if ((this.deleteEGMTerminalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEGMTerminalDataCompleted(this, new deleteEGMTerminalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateMachineData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateMachineData(string tID, string sNum, int gID) {
            object[] results = this.Invoke("updateMachineData", new object[] {
                        tID,
                        sNum,
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateMachineDataAsync(string tID, string sNum, int gID) {
            this.updateMachineDataAsync(tID, sNum, gID, null);
        }
        
        /// <remarks/>
        public void updateMachineDataAsync(string tID, string sNum, int gID, object userState) {
            if ((this.updateMachineDataOperationCompleted == null)) {
                this.updateMachineDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMachineDataOperationCompleted);
            }
            this.InvokeAsync("updateMachineData", new object[] {
                        tID,
                        sNum,
                        gID}, this.updateMachineDataOperationCompleted, userState);
        }
        
        private void OnupdateMachineDataOperationCompleted(object arg) {
            if ((this.updateMachineDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMachineDataCompleted(this, new updateMachineDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAndMoveCardIndexPositions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAndMoveCardIndexPositions(int gSysID, int lvl, int crdCnt) {
            object[] results = this.Invoke("getAndMoveCardIndexPositions", new object[] {
                        gSysID,
                        lvl,
                        crdCnt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAndMoveCardIndexPositionsAsync(int gSysID, int lvl, int crdCnt) {
            this.getAndMoveCardIndexPositionsAsync(gSysID, lvl, crdCnt, null);
        }
        
        /// <remarks/>
        public void getAndMoveCardIndexPositionsAsync(int gSysID, int lvl, int crdCnt, object userState) {
            if ((this.getAndMoveCardIndexPositionsOperationCompleted == null)) {
                this.getAndMoveCardIndexPositionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAndMoveCardIndexPositionsOperationCompleted);
            }
            this.InvokeAsync("getAndMoveCardIndexPositions", new object[] {
                        gSysID,
                        lvl,
                        crdCnt}, this.getAndMoveCardIndexPositionsOperationCompleted, userState);
        }
        
        private void OngetAndMoveCardIndexPositionsOperationCompleted(object arg) {
            if ((this.getAndMoveCardIndexPositionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAndMoveCardIndexPositionsCompleted(this, new getAndMoveCardIndexPositionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveCardIndexPositionsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveCardIndexPositionsData(CardIndexPositions iData) {
            object[] results = this.Invoke("saveCardIndexPositionsData", new object[] {
                        iData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveCardIndexPositionsDataAsync(CardIndexPositions iData) {
            this.saveCardIndexPositionsDataAsync(iData, null);
        }
        
        /// <remarks/>
        public void saveCardIndexPositionsDataAsync(CardIndexPositions iData, object userState) {
            if ((this.saveCardIndexPositionsDataOperationCompleted == null)) {
                this.saveCardIndexPositionsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveCardIndexPositionsDataOperationCompleted);
            }
            this.InvokeAsync("saveCardIndexPositionsData", new object[] {
                        iData}, this.saveCardIndexPositionsDataOperationCompleted, userState);
        }
        
        private void OnsaveCardIndexPositionsDataOperationCompleted(object arg) {
            if ((this.saveCardIndexPositionsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveCardIndexPositionsDataCompleted(this, new saveCardIndexPositionsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePlaysRecForBalances", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePlaysRecForBalances(Plays pRec) {
            object[] results = this.Invoke("updatePlaysRecForBalances", new object[] {
                        pRec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePlaysRecForBalancesAsync(Plays pRec) {
            this.updatePlaysRecForBalancesAsync(pRec, null);
        }
        
        /// <remarks/>
        public void updatePlaysRecForBalancesAsync(Plays pRec, object userState) {
            if ((this.updatePlaysRecForBalancesOperationCompleted == null)) {
                this.updatePlaysRecForBalancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePlaysRecForBalancesOperationCompleted);
            }
            this.InvokeAsync("updatePlaysRecForBalances", new object[] {
                        pRec}, this.updatePlaysRecForBalancesOperationCompleted, userState);
        }
        
        private void OnupdatePlaysRecForBalancesOperationCompleted(object arg) {
            if ((this.updatePlaysRecForBalancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePlaysRecForBalancesCompleted(this, new updatePlaysRecForBalancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addCardToPlayPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addCardToPlayPCB(int pID, int sNum, decimal newBal) {
            object[] results = this.Invoke("addCardToPlayPCB", new object[] {
                        pID,
                        sNum,
                        newBal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addCardToPlayPCBAsync(int pID, int sNum, decimal newBal) {
            this.addCardToPlayPCBAsync(pID, sNum, newBal, null);
        }
        
        /// <remarks/>
        public void addCardToPlayPCBAsync(int pID, int sNum, decimal newBal, object userState) {
            if ((this.addCardToPlayPCBOperationCompleted == null)) {
                this.addCardToPlayPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCardToPlayPCBOperationCompleted);
            }
            this.InvokeAsync("addCardToPlayPCB", new object[] {
                        pID,
                        sNum,
                        newBal}, this.addCardToPlayPCBOperationCompleted, userState);
        }
        
        private void OnaddCardToPlayPCBOperationCompleted(object arg) {
            if ((this.addCardToPlayPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCardToPlayPCBCompleted(this, new addCardToPlayPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/savePlayData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int savePlayData(Plays pData) {
            object[] results = this.Invoke("savePlayData", new object[] {
                        pData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void savePlayDataAsync(Plays pData) {
            this.savePlayDataAsync(pData, null);
        }
        
        /// <remarks/>
        public void savePlayDataAsync(Plays pData, object userState) {
            if ((this.savePlayDataOperationCompleted == null)) {
                this.savePlayDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsavePlayDataOperationCompleted);
            }
            this.InvokeAsync("savePlayData", new object[] {
                        pData}, this.savePlayDataOperationCompleted, userState);
        }
        
        private void OnsavePlayDataOperationCompleted(object arg) {
            if ((this.savePlayDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.savePlayDataCompleted(this, new savePlayDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlayData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plays getPlayData(int pID) {
            object[] results = this.Invoke("getPlayData", new object[] {
                        pID});
            return ((Plays)(results[0]));
        }
        
        /// <remarks/>
        public void getPlayDataAsync(int pID) {
            this.getPlayDataAsync(pID, null);
        }
        
        /// <remarks/>
        public void getPlayDataAsync(int pID, object userState) {
            if ((this.getPlayDataOperationCompleted == null)) {
                this.getPlayDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayDataOperationCompleted);
            }
            this.InvokeAsync("getPlayData", new object[] {
                        pID}, this.getPlayDataOperationCompleted, userState);
        }
        
        private void OngetPlayDataOperationCompleted(object arg) {
            if ((this.getPlayDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayDataCompleted(this, new getPlayDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPlaysForGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plays[] getAllPlaysForGame(int gID) {
            object[] results = this.Invoke("getAllPlaysForGame", new object[] {
                        gID});
            return ((Plays[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPlaysForGameAsync(int gID) {
            this.getAllPlaysForGameAsync(gID, null);
        }
        
        /// <remarks/>
        public void getAllPlaysForGameAsync(int gID, object userState) {
            if ((this.getAllPlaysForGameOperationCompleted == null)) {
                this.getAllPlaysForGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPlaysForGameOperationCompleted);
            }
            this.InvokeAsync("getAllPlaysForGame", new object[] {
                        gID}, this.getAllPlaysForGameOperationCompleted, userState);
        }
        
        private void OngetAllPlaysForGameOperationCompleted(object arg) {
            if ((this.getAllPlaysForGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPlaysForGameCompleted(this, new getAllPlaysForGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPlaysForPIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plays[] getAllPlaysForPIN(int pin) {
            object[] results = this.Invoke("getAllPlaysForPIN", new object[] {
                        pin});
            return ((Plays[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPlaysForPINAsync(int pin) {
            this.getAllPlaysForPINAsync(pin, null);
        }
        
        /// <remarks/>
        public void getAllPlaysForPINAsync(int pin, object userState) {
            if ((this.getAllPlaysForPINOperationCompleted == null)) {
                this.getAllPlaysForPINOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPlaysForPINOperationCompleted);
            }
            this.InvokeAsync("getAllPlaysForPIN", new object[] {
                        pin}, this.getAllPlaysForPINOperationCompleted, userState);
        }
        
        private void OngetAllPlaysForPINOperationCompleted(object arg) {
            if ((this.getAllPlaysForPINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPlaysForPINCompleted(this, new getAllPlaysForPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllPlaysForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllPlaysForDateRange(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("deleteAllPlaysForDateRange", new object[] {
                        start,
                        end});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllPlaysForDateRangeAsync(System.DateTime start, System.DateTime end) {
            this.deleteAllPlaysForDateRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void deleteAllPlaysForDateRangeAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.deleteAllPlaysForDateRangeOperationCompleted == null)) {
                this.deleteAllPlaysForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllPlaysForDateRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllPlaysForDateRange", new object[] {
                        start,
                        end}, this.deleteAllPlaysForDateRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllPlaysForDateRangeOperationCompleted(object arg) {
            if ((this.deleteAllPlaysForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllPlaysForDateRangeCompleted(this, new deleteAllPlaysForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletePlayRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deletePlayRecord(int pID) {
            object[] results = this.Invoke("deletePlayRecord", new object[] {
                        pID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deletePlayRecordAsync(int pID) {
            this.deletePlayRecordAsync(pID, null);
        }
        
        /// <remarks/>
        public void deletePlayRecordAsync(int pID, object userState) {
            if ((this.deletePlayRecordOperationCompleted == null)) {
                this.deletePlayRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePlayRecordOperationCompleted);
            }
            this.InvokeAsync("deletePlayRecord", new object[] {
                        pID}, this.deletePlayRecordOperationCompleted, userState);
        }
        
        private void OndeletePlayRecordOperationCompleted(object arg) {
            if ((this.deletePlayRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePlayRecordCompleted(this, new deletePlayRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPlaysForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plays[] getAllPlaysForDateRange(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("getAllPlaysForDateRange", new object[] {
                        start,
                        end});
            return ((Plays[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPlaysForDateRangeAsync(System.DateTime start, System.DateTime end) {
            this.getAllPlaysForDateRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void getAllPlaysForDateRangeAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.getAllPlaysForDateRangeOperationCompleted == null)) {
                this.getAllPlaysForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPlaysForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllPlaysForDateRange", new object[] {
                        start,
                        end}, this.getAllPlaysForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllPlaysForDateRangeOperationCompleted(object arg) {
            if ((this.getAllPlaysForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPlaysForDateRangeCompleted(this, new getAllPlaysForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPlaysGameSysForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plays[] getAllPlaysGameSysForDateRange(int sID, System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("getAllPlaysGameSysForDateRange", new object[] {
                        sID,
                        start,
                        end});
            return ((Plays[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllPlaysGameSysForDateRangeAsync(int sID, System.DateTime start, System.DateTime end) {
            this.getAllPlaysGameSysForDateRangeAsync(sID, start, end, null);
        }
        
        /// <remarks/>
        public void getAllPlaysGameSysForDateRangeAsync(int sID, System.DateTime start, System.DateTime end, object userState) {
            if ((this.getAllPlaysGameSysForDateRangeOperationCompleted == null)) {
                this.getAllPlaysGameSysForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPlaysGameSysForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getAllPlaysGameSysForDateRange", new object[] {
                        sID,
                        start,
                        end}, this.getAllPlaysGameSysForDateRangeOperationCompleted, userState);
        }
        
        private void OngetAllPlaysGameSysForDateRangeOperationCompleted(object arg) {
            if ((this.getAllPlaysGameSysForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPlaysGameSysForDateRangeCompleted(this, new getAllPlaysGameSysForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateWinRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateWinRec(Winners uRec) {
            object[] results = this.Invoke("updateWinRec", new object[] {
                        uRec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateWinRecAsync(Winners uRec) {
            this.updateWinRecAsync(uRec, null);
        }
        
        /// <remarks/>
        public void updateWinRecAsync(Winners uRec, object userState) {
            if ((this.updateWinRecOperationCompleted == null)) {
                this.updateWinRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWinRecOperationCompleted);
            }
            this.InvokeAsync("updateWinRec", new object[] {
                        uRec}, this.updateWinRecOperationCompleted, userState);
        }
        
        private void OnupdateWinRecOperationCompleted(object arg) {
            if ((this.updateWinRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWinRecCompleted(this, new updateWinRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteWinnnerRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteWinnnerRec(int gSysID, int gID, int pID, int pin, int cNum) {
            object[] results = this.Invoke("deleteWinnnerRec", new object[] {
                        gSysID,
                        gID,
                        pID,
                        pin,
                        cNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteWinnnerRecAsync(int gSysID, int gID, int pID, int pin, int cNum) {
            this.deleteWinnnerRecAsync(gSysID, gID, pID, pin, cNum, null);
        }
        
        /// <remarks/>
        public void deleteWinnnerRecAsync(int gSysID, int gID, int pID, int pin, int cNum, object userState) {
            if ((this.deleteWinnnerRecOperationCompleted == null)) {
                this.deleteWinnnerRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWinnnerRecOperationCompleted);
            }
            this.InvokeAsync("deleteWinnnerRec", new object[] {
                        gSysID,
                        gID,
                        pID,
                        pin,
                        cNum}, this.deleteWinnnerRecOperationCompleted, userState);
        }
        
        private void OndeleteWinnnerRecOperationCompleted(object arg) {
            if ((this.deleteWinnnerRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWinnnerRecCompleted(this, new deleteWinnnerRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllWinsForGameRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllWinsForGameRange(int start, int end) {
            object[] results = this.Invoke("deleteAllWinsForGameRange", new object[] {
                        start,
                        end});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllWinsForGameRangeAsync(int start, int end) {
            this.deleteAllWinsForGameRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void deleteAllWinsForGameRangeAsync(int start, int end, object userState) {
            if ((this.deleteAllWinsForGameRangeOperationCompleted == null)) {
                this.deleteAllWinsForGameRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllWinsForGameRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllWinsForGameRange", new object[] {
                        start,
                        end}, this.deleteAllWinsForGameRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllWinsForGameRangeOperationCompleted(object arg) {
            if ((this.deleteAllWinsForGameRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllWinsForGameRangeCompleted(this, new deleteAllWinsForGameRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWinDataForGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners[] getWinDataForGame(int gSysID, int gID, int nStat) {
            object[] results = this.Invoke("getWinDataForGame", new object[] {
                        gSysID,
                        gID,
                        nStat});
            return ((Winners[])(results[0]));
        }
        
        /// <remarks/>
        public void getWinDataForGameAsync(int gSysID, int gID, int nStat) {
            this.getWinDataForGameAsync(gSysID, gID, nStat, null);
        }
        
        /// <remarks/>
        public void getWinDataForGameAsync(int gSysID, int gID, int nStat, object userState) {
            if ((this.getWinDataForGameOperationCompleted == null)) {
                this.getWinDataForGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWinDataForGameOperationCompleted);
            }
            this.InvokeAsync("getWinDataForGame", new object[] {
                        gSysID,
                        gID,
                        nStat}, this.getWinDataForGameOperationCompleted, userState);
        }
        
        private void OngetWinDataForGameOperationCompleted(object arg) {
            if ((this.getWinDataForGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWinDataForGameCompleted(this, new getWinDataForGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllWinDataForGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners[] getAllWinDataForGame(int gSysID, int gID) {
            object[] results = this.Invoke("getAllWinDataForGame", new object[] {
                        gSysID,
                        gID});
            return ((Winners[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllWinDataForGameAsync(int gSysID, int gID) {
            this.getAllWinDataForGameAsync(gSysID, gID, null);
        }
        
        /// <remarks/>
        public void getAllWinDataForGameAsync(int gSysID, int gID, object userState) {
            if ((this.getAllWinDataForGameOperationCompleted == null)) {
                this.getAllWinDataForGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllWinDataForGameOperationCompleted);
            }
            this.InvokeAsync("getAllWinDataForGame", new object[] {
                        gSysID,
                        gID}, this.getAllWinDataForGameOperationCompleted, userState);
        }
        
        private void OngetAllWinDataForGameOperationCompleted(object arg) {
            if ((this.getAllWinDataForGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllWinDataForGameCompleted(this, new getAllWinDataForGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllWinDataForGameRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners[] getAllWinDataForGameRange(int gSysID, int sID, int eID) {
            object[] results = this.Invoke("getAllWinDataForGameRange", new object[] {
                        gSysID,
                        sID,
                        eID});
            return ((Winners[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllWinDataForGameRangeAsync(int gSysID, int sID, int eID) {
            this.getAllWinDataForGameRangeAsync(gSysID, sID, eID, null);
        }
        
        /// <remarks/>
        public void getAllWinDataForGameRangeAsync(int gSysID, int sID, int eID, object userState) {
            if ((this.getAllWinDataForGameRangeOperationCompleted == null)) {
                this.getAllWinDataForGameRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllWinDataForGameRangeOperationCompleted);
            }
            this.InvokeAsync("getAllWinDataForGameRange", new object[] {
                        gSysID,
                        sID,
                        eID}, this.getAllWinDataForGameRangeOperationCompleted, userState);
        }
        
        private void OngetAllWinDataForGameRangeOperationCompleted(object arg) {
            if ((this.getAllWinDataForGameRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllWinDataForGameRangeCompleted(this, new getAllWinDataForGameRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWinData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners getWinData(int gSysID, int pin, int cNum) {
            object[] results = this.Invoke("getWinData", new object[] {
                        gSysID,
                        pin,
                        cNum});
            return ((Winners)(results[0]));
        }
        
        /// <remarks/>
        public void getWinDataAsync(int gSysID, int pin, int cNum) {
            this.getWinDataAsync(gSysID, pin, cNum, null);
        }
        
        /// <remarks/>
        public void getWinDataAsync(int gSysID, int pin, int cNum, object userState) {
            if ((this.getWinDataOperationCompleted == null)) {
                this.getWinDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWinDataOperationCompleted);
            }
            this.InvokeAsync("getWinData", new object[] {
                        gSysID,
                        pin,
                        cNum}, this.getWinDataOperationCompleted, userState);
        }
        
        private void OngetWinDataOperationCompleted(object arg) {
            if ((this.getWinDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWinDataCompleted(this, new getWinDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWinDataForPlay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners[] getWinDataForPlay(int pID) {
            object[] results = this.Invoke("getWinDataForPlay", new object[] {
                        pID});
            return ((Winners[])(results[0]));
        }
        
        /// <remarks/>
        public void getWinDataForPlayAsync(int pID) {
            this.getWinDataForPlayAsync(pID, null);
        }
        
        /// <remarks/>
        public void getWinDataForPlayAsync(int pID, object userState) {
            if ((this.getWinDataForPlayOperationCompleted == null)) {
                this.getWinDataForPlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWinDataForPlayOperationCompleted);
            }
            this.InvokeAsync("getWinDataForPlay", new object[] {
                        pID}, this.getWinDataForPlayOperationCompleted, userState);
        }
        
        private void OngetWinDataForPlayOperationCompleted(object arg) {
            if ((this.getWinDataForPlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWinDataForPlayCompleted(this, new getWinDataForPlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveWinnerData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveWinnerData(Winners wData) {
            object[] results = this.Invoke("saveWinnerData", new object[] {
                        wData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveWinnerDataAsync(Winners wData) {
            this.saveWinnerDataAsync(wData, null);
        }
        
        /// <remarks/>
        public void saveWinnerDataAsync(Winners wData, object userState) {
            if ((this.saveWinnerDataOperationCompleted == null)) {
                this.saveWinnerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveWinnerDataOperationCompleted);
            }
            this.InvokeAsync("saveWinnerData", new object[] {
                        wData}, this.saveWinnerDataOperationCompleted, userState);
        }
        
        private void OnsaveWinnerDataOperationCompleted(object arg) {
            if ((this.saveWinnerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveWinnerDataCompleted(this, new saveWinnerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllVerifiedWinnersForPIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners24[] getAllVerifiedWinnersForPIN(int pin) {
            object[] results = this.Invoke("getAllVerifiedWinnersForPIN", new object[] {
                        pin});
            return ((Winners24[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllVerifiedWinnersForPINAsync(int pin) {
            this.getAllVerifiedWinnersForPINAsync(pin, null);
        }
        
        /// <remarks/>
        public void getAllVerifiedWinnersForPINAsync(int pin, object userState) {
            if ((this.getAllVerifiedWinnersForPINOperationCompleted == null)) {
                this.getAllVerifiedWinnersForPINOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllVerifiedWinnersForPINOperationCompleted);
            }
            this.InvokeAsync("getAllVerifiedWinnersForPIN", new object[] {
                        pin}, this.getAllVerifiedWinnersForPINOperationCompleted, userState);
        }
        
        private void OngetAllVerifiedWinnersForPINOperationCompleted(object arg) {
            if ((this.getAllVerifiedWinnersForPINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllVerifiedWinnersForPINCompleted(this, new getAllVerifiedWinnersForPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWinnerListForDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WinnerListItem[] getWinnerListForDateRange(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("getWinnerListForDateRange", new object[] {
                        start,
                        end});
            return ((WinnerListItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getWinnerListForDateRangeAsync(System.DateTime start, System.DateTime end) {
            this.getWinnerListForDateRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void getWinnerListForDateRangeAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.getWinnerListForDateRangeOperationCompleted == null)) {
                this.getWinnerListForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWinnerListForDateRangeOperationCompleted);
            }
            this.InvokeAsync("getWinnerListForDateRange", new object[] {
                        start,
                        end}, this.getWinnerListForDateRangeOperationCompleted, userState);
        }
        
        private void OngetWinnerListForDateRangeOperationCompleted(object arg) {
            if ((this.getWinnerListForDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWinnerListForDateRangeCompleted(this, new getWinnerListForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllWinnersForPlay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners24[] getAllWinnersForPlay(int pID) {
            object[] results = this.Invoke("getAllWinnersForPlay", new object[] {
                        pID});
            return ((Winners24[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllWinnersForPlayAsync(int pID) {
            this.getAllWinnersForPlayAsync(pID, null);
        }
        
        /// <remarks/>
        public void getAllWinnersForPlayAsync(int pID, object userState) {
            if ((this.getAllWinnersForPlayOperationCompleted == null)) {
                this.getAllWinnersForPlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllWinnersForPlayOperationCompleted);
            }
            this.InvokeAsync("getAllWinnersForPlay", new object[] {
                        pID}, this.getAllWinnersForPlayOperationCompleted, userState);
        }
        
        private void OngetAllWinnersForPlayOperationCompleted(object arg) {
            if ((this.getAllWinnersForPlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllWinnersForPlayCompleted(this, new getAllWinnersForPlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAllWinners24ForPlayIDRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAllWinners24ForPlayIDRange(int sID, int eID) {
            object[] results = this.Invoke("deleteAllWinners24ForPlayIDRange", new object[] {
                        sID,
                        eID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllWinners24ForPlayIDRangeAsync(int sID, int eID) {
            this.deleteAllWinners24ForPlayIDRangeAsync(sID, eID, null);
        }
        
        /// <remarks/>
        public void deleteAllWinners24ForPlayIDRangeAsync(int sID, int eID, object userState) {
            if ((this.deleteAllWinners24ForPlayIDRangeOperationCompleted == null)) {
                this.deleteAllWinners24ForPlayIDRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllWinners24ForPlayIDRangeOperationCompleted);
            }
            this.InvokeAsync("deleteAllWinners24ForPlayIDRange", new object[] {
                        sID,
                        eID}, this.deleteAllWinners24ForPlayIDRangeOperationCompleted, userState);
        }
        
        private void OndeleteAllWinners24ForPlayIDRangeOperationCompleted(object arg) {
            if ((this.deleteAllWinners24ForPlayIDRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllWinners24ForPlayIDRangeCompleted(this, new deleteAllWinners24ForPlayIDRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllWinners24ForPlayIDRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners24[] getAllWinners24ForPlayIDRange(int sID, int eID) {
            object[] results = this.Invoke("getAllWinners24ForPlayIDRange", new object[] {
                        sID,
                        eID});
            return ((Winners24[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllWinners24ForPlayIDRangeAsync(int sID, int eID) {
            this.getAllWinners24ForPlayIDRangeAsync(sID, eID, null);
        }
        
        /// <remarks/>
        public void getAllWinners24ForPlayIDRangeAsync(int sID, int eID, object userState) {
            if ((this.getAllWinners24ForPlayIDRangeOperationCompleted == null)) {
                this.getAllWinners24ForPlayIDRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllWinners24ForPlayIDRangeOperationCompleted);
            }
            this.InvokeAsync("getAllWinners24ForPlayIDRange", new object[] {
                        sID,
                        eID}, this.getAllWinners24ForPlayIDRangeOperationCompleted, userState);
        }
        
        private void OngetAllWinners24ForPlayIDRangeOperationCompleted(object arg) {
            if ((this.getAllWinners24ForPlayIDRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllWinners24ForPlayIDRangeCompleted(this, new getAllWinners24ForPlayIDRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWinnerData24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Winners24 getWinnerData24(int pID, int cSerNum) {
            object[] results = this.Invoke("getWinnerData24", new object[] {
                        pID,
                        cSerNum});
            return ((Winners24)(results[0]));
        }
        
        /// <remarks/>
        public void getWinnerData24Async(int pID, int cSerNum) {
            this.getWinnerData24Async(pID, cSerNum, null);
        }
        
        /// <remarks/>
        public void getWinnerData24Async(int pID, int cSerNum, object userState) {
            if ((this.getWinnerData24OperationCompleted == null)) {
                this.getWinnerData24OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWinnerData24OperationCompleted);
            }
            this.InvokeAsync("getWinnerData24", new object[] {
                        pID,
                        cSerNum}, this.getWinnerData24OperationCompleted, userState);
        }
        
        private void OngetWinnerData24OperationCompleted(object arg) {
            if ((this.getWinnerData24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWinnerData24Completed(this, new getWinnerData24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveWinnerData24", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveWinnerData24(Winners24 wData) {
            object[] results = this.Invoke("saveWinnerData24", new object[] {
                        wData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveWinnerData24Async(Winners24 wData) {
            this.saveWinnerData24Async(wData, null);
        }
        
        /// <remarks/>
        public void saveWinnerData24Async(Winners24 wData, object userState) {
            if ((this.saveWinnerData24OperationCompleted == null)) {
                this.saveWinnerData24OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveWinnerData24OperationCompleted);
            }
            this.InvokeAsync("saveWinnerData24", new object[] {
                        wData}, this.saveWinnerData24OperationCompleted, userState);
        }
        
        private void OnsaveWinnerData24OperationCompleted(object arg) {
            if ((this.saveWinnerData24Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveWinnerData24Completed(this, new saveWinnerData24CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateWinningCardPCBStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateWinningCardPCBStatus(int gID, int pin, int cNum, int wMask, int state) {
            object[] results = this.Invoke("updateWinningCardPCBStatus", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask,
                        state});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateWinningCardPCBStatusAsync(int gID, int pin, int cNum, int wMask, int state) {
            this.updateWinningCardPCBStatusAsync(gID, pin, cNum, wMask, state, null);
        }
        
        /// <remarks/>
        public void updateWinningCardPCBStatusAsync(int gID, int pin, int cNum, int wMask, int state, object userState) {
            if ((this.updateWinningCardPCBStatusOperationCompleted == null)) {
                this.updateWinningCardPCBStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWinningCardPCBStatusOperationCompleted);
            }
            this.InvokeAsync("updateWinningCardPCBStatus", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask,
                        state}, this.updateWinningCardPCBStatusOperationCompleted, userState);
        }
        
        private void OnupdateWinningCardPCBStatusOperationCompleted(object arg) {
            if ((this.updateWinningCardPCBStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWinningCardPCBStatusCompleted(this, new updateWinningCardPCBStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateWinningCardPCBRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateWinningCardPCBRec(int gID, int pin, int cNum, int wMask, decimal prizeAmt, decimal progressiveAmt) {
            object[] results = this.Invoke("updateWinningCardPCBRec", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask,
                        prizeAmt,
                        progressiveAmt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateWinningCardPCBRecAsync(int gID, int pin, int cNum, int wMask, decimal prizeAmt, decimal progressiveAmt) {
            this.updateWinningCardPCBRecAsync(gID, pin, cNum, wMask, prizeAmt, progressiveAmt, null);
        }
        
        /// <remarks/>
        public void updateWinningCardPCBRecAsync(int gID, int pin, int cNum, int wMask, decimal prizeAmt, decimal progressiveAmt, object userState) {
            if ((this.updateWinningCardPCBRecOperationCompleted == null)) {
                this.updateWinningCardPCBRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWinningCardPCBRecOperationCompleted);
            }
            this.InvokeAsync("updateWinningCardPCBRec", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask,
                        prizeAmt,
                        progressiveAmt}, this.updateWinningCardPCBRecOperationCompleted, userState);
        }
        
        private void OnupdateWinningCardPCBRecOperationCompleted(object arg) {
            if ((this.updateWinningCardPCBRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWinningCardPCBRecCompleted(this, new updateWinningCardPCBRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createWinningCardPCBRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createWinningCardPCBRec(int gID, int pin, int cNum, int wMask) {
            object[] results = this.Invoke("createWinningCardPCBRec", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createWinningCardPCBRecAsync(int gID, int pin, int cNum, int wMask) {
            this.createWinningCardPCBRecAsync(gID, pin, cNum, wMask, null);
        }
        
        /// <remarks/>
        public void createWinningCardPCBRecAsync(int gID, int pin, int cNum, int wMask, object userState) {
            if ((this.createWinningCardPCBRecOperationCompleted == null)) {
                this.createWinningCardPCBRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWinningCardPCBRecOperationCompleted);
            }
            this.InvokeAsync("createWinningCardPCBRec", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask}, this.createWinningCardPCBRecOperationCompleted, userState);
        }
        
        private void OncreateWinningCardPCBRecOperationCompleted(object arg) {
            if ((this.createWinningCardPCBRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWinningCardPCBRecCompleted(this, new createWinningCardPCBRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/anyWinnersYetPCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool anyWinnersYetPCB(int gID) {
            object[] results = this.Invoke("anyWinnersYetPCB", new object[] {
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void anyWinnersYetPCBAsync(int gID) {
            this.anyWinnersYetPCBAsync(gID, null);
        }
        
        /// <remarks/>
        public void anyWinnersYetPCBAsync(int gID, object userState) {
            if ((this.anyWinnersYetPCBOperationCompleted == null)) {
                this.anyWinnersYetPCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnanyWinnersYetPCBOperationCompleted);
            }
            this.InvokeAsync("anyWinnersYetPCB", new object[] {
                        gID}, this.anyWinnersYetPCBOperationCompleted, userState);
        }
        
        private void OnanyWinnersYetPCBOperationCompleted(object arg) {
            if ((this.anyWinnersYetPCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.anyWinnersYetPCBCompleted(this, new anyWinnersYetPCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWinningCardPCBData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WinnersPCB getWinningCardPCBData(int gID, int pin, int cNum, int wMask) {
            object[] results = this.Invoke("getWinningCardPCBData", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask});
            return ((WinnersPCB)(results[0]));
        }
        
        /// <remarks/>
        public void getWinningCardPCBDataAsync(int gID, int pin, int cNum, int wMask) {
            this.getWinningCardPCBDataAsync(gID, pin, cNum, wMask, null);
        }
        
        /// <remarks/>
        public void getWinningCardPCBDataAsync(int gID, int pin, int cNum, int wMask, object userState) {
            if ((this.getWinningCardPCBDataOperationCompleted == null)) {
                this.getWinningCardPCBDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWinningCardPCBDataOperationCompleted);
            }
            this.InvokeAsync("getWinningCardPCBData", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask}, this.getWinningCardPCBDataOperationCompleted, userState);
        }
        
        private void OngetWinningCardPCBDataOperationCompleted(object arg) {
            if ((this.getWinningCardPCBDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWinningCardPCBDataCompleted(this, new getWinningCardPCBDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWinningCardPCBList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WinnersPCB[] getWinningCardPCBList(int gID) {
            object[] results = this.Invoke("getWinningCardPCBList", new object[] {
                        gID});
            return ((WinnersPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void getWinningCardPCBListAsync(int gID) {
            this.getWinningCardPCBListAsync(gID, null);
        }
        
        /// <remarks/>
        public void getWinningCardPCBListAsync(int gID, object userState) {
            if ((this.getWinningCardPCBListOperationCompleted == null)) {
                this.getWinningCardPCBListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWinningCardPCBListOperationCompleted);
            }
            this.InvokeAsync("getWinningCardPCBList", new object[] {
                        gID}, this.getWinningCardPCBListOperationCompleted, userState);
        }
        
        private void OngetWinningCardPCBListOperationCompleted(object arg) {
            if ((this.getWinningCardPCBListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWinningCardPCBListCompleted(this, new getWinningCardPCBListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllWinnersPCBForPlayIDRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WinnersPCB[] getAllWinnersPCBForPlayIDRange(int sID, int eID) {
            object[] results = this.Invoke("getAllWinnersPCBForPlayIDRange", new object[] {
                        sID,
                        eID});
            return ((WinnersPCB[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllWinnersPCBForPlayIDRangeAsync(int sID, int eID) {
            this.getAllWinnersPCBForPlayIDRangeAsync(sID, eID, null);
        }
        
        /// <remarks/>
        public void getAllWinnersPCBForPlayIDRangeAsync(int sID, int eID, object userState) {
            if ((this.getAllWinnersPCBForPlayIDRangeOperationCompleted == null)) {
                this.getAllWinnersPCBForPlayIDRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllWinnersPCBForPlayIDRangeOperationCompleted);
            }
            this.InvokeAsync("getAllWinnersPCBForPlayIDRange", new object[] {
                        sID,
                        eID}, this.getAllWinnersPCBForPlayIDRangeOperationCompleted, userState);
        }
        
        private void OngetAllWinnersPCBForPlayIDRangeOperationCompleted(object arg) {
            if ((this.getAllWinnersPCBForPlayIDRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllWinnersPCBForPlayIDRangeCompleted(this, new getAllWinnersPCBForPlayIDRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteWinnerPCBRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteWinnerPCBRec(int gID, int pin, int cNum, int wMask) {
            object[] results = this.Invoke("deleteWinnerPCBRec", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteWinnerPCBRecAsync(int gID, int pin, int cNum, int wMask) {
            this.deleteWinnerPCBRecAsync(gID, pin, cNum, wMask, null);
        }
        
        /// <remarks/>
        public void deleteWinnerPCBRecAsync(int gID, int pin, int cNum, int wMask, object userState) {
            if ((this.deleteWinnerPCBRecOperationCompleted == null)) {
                this.deleteWinnerPCBRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWinnerPCBRecOperationCompleted);
            }
            this.InvokeAsync("deleteWinnerPCBRec", new object[] {
                        gID,
                        pin,
                        cNum,
                        wMask}, this.deleteWinnerPCBRecOperationCompleted, userState);
        }
        
        private void OndeleteWinnerPCBRecOperationCompleted(object arg) {
            if ((this.deleteWinnerPCBRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWinnerPCBRecCompleted(this, new deleteWinnerPCBRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteWinnersForGamePCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteWinnersForGamePCB(int gID) {
            object[] results = this.Invoke("deleteWinnersForGamePCB", new object[] {
                        gID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteWinnersForGamePCBAsync(int gID) {
            this.deleteWinnersForGamePCBAsync(gID, null);
        }
        
        /// <remarks/>
        public void deleteWinnersForGamePCBAsync(int gID, object userState) {
            if ((this.deleteWinnersForGamePCBOperationCompleted == null)) {
                this.deleteWinnersForGamePCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWinnersForGamePCBOperationCompleted);
            }
            this.InvokeAsync("deleteWinnersForGamePCB", new object[] {
                        gID}, this.deleteWinnersForGamePCBOperationCompleted, userState);
        }
        
        private void OndeleteWinnersForGamePCBOperationCompleted(object arg) {
            if ((this.deleteWinnersForGamePCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWinnersForGamePCBCompleted(this, new deleteWinnersForGamePCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteWinnersPCBForGameIDRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteWinnersPCBForGameIDRange(int sID, int eID) {
            object[] results = this.Invoke("deleteWinnersPCBForGameIDRange", new object[] {
                        sID,
                        eID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteWinnersPCBForGameIDRangeAsync(int sID, int eID) {
            this.deleteWinnersPCBForGameIDRangeAsync(sID, eID, null);
        }
        
        /// <remarks/>
        public void deleteWinnersPCBForGameIDRangeAsync(int sID, int eID, object userState) {
            if ((this.deleteWinnersPCBForGameIDRangeOperationCompleted == null)) {
                this.deleteWinnersPCBForGameIDRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWinnersPCBForGameIDRangeOperationCompleted);
            }
            this.InvokeAsync("deleteWinnersPCBForGameIDRange", new object[] {
                        sID,
                        eID}, this.deleteWinnersPCBForGameIDRangeOperationCompleted, userState);
        }
        
        private void OndeleteWinnersPCBForGameIDRangeOperationCompleted(object arg) {
            if ((this.deleteWinnersPCBForGameIDRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWinnersPCBForGameIDRangeCompleted(this, new deleteWinnersPCBForGameIDRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uniquePIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool uniquePIN(int pin) {
            object[] results = this.Invoke("uniquePIN", new object[] {
                        pin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void uniquePINAsync(int pin) {
            this.uniquePINAsync(pin, null);
        }
        
        /// <remarks/>
        public void uniquePINAsync(int pin, object userState) {
            if ((this.uniquePINOperationCompleted == null)) {
                this.uniquePINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuniquePINOperationCompleted);
            }
            this.InvokeAsync("uniquePIN", new object[] {
                        pin}, this.uniquePINOperationCompleted, userState);
        }
        
        private void OnuniquePINOperationCompleted(object arg) {
            if ((this.uniquePINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uniquePINCompleted(this, new uniquePINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GameSettings {
        
        private System.DateTime whenSavedField;
        
        private int gameSysIDField;
        
        private string dataField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WinnersPCB {
        
        private int gameIDField;
        
        private int pINField;
        
        private int cardNumField;
        
        private int winMaskField;
        
        private decimal standardAmtPaidField;
        
        private decimal progressiveAmtPaidField;
        
        private int statusField;
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public int cardNum {
            get {
                return this.cardNumField;
            }
            set {
                this.cardNumField = value;
            }
        }
        
        /// <remarks/>
        public int winMask {
            get {
                return this.winMaskField;
            }
            set {
                this.winMaskField = value;
            }
        }
        
        /// <remarks/>
        public decimal standardAmtPaid {
            get {
                return this.standardAmtPaidField;
            }
            set {
                this.standardAmtPaidField = value;
            }
        }
        
        /// <remarks/>
        public decimal progressiveAmtPaid {
            get {
                return this.progressiveAmtPaidField;
            }
            set {
                this.progressiveAmtPaidField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WinnerListItem {
        
        private int pINField;
        
        private decimal amountField;
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Winners24 {
        
        private int playIDField;
        
        private int cardSerialNumField;
        
        private int patternIdxField;
        
        private int winMaskField;
        
        private decimal paidField;
        
        /// <remarks/>
        public int playID {
            get {
                return this.playIDField;
            }
            set {
                this.playIDField = value;
            }
        }
        
        /// <remarks/>
        public int cardSerialNum {
            get {
                return this.cardSerialNumField;
            }
            set {
                this.cardSerialNumField = value;
            }
        }
        
        /// <remarks/>
        public int patternIdx {
            get {
                return this.patternIdxField;
            }
            set {
                this.patternIdxField = value;
            }
        }
        
        /// <remarks/>
        public int winMask {
            get {
                return this.winMaskField;
            }
            set {
                this.winMaskField = value;
            }
        }
        
        /// <remarks/>
        public decimal paid {
            get {
                return this.paidField;
            }
            set {
                this.paidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Winners {
        
        private int gameSysIDField;
        
        private int gameIDField;
        
        private int pINField;
        
        private int playIDField;
        
        private int cardNumField;
        
        private int statusField;
        
        private decimal paidField;
        
        private string dataField;
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public int playID {
            get {
                return this.playIDField;
            }
            set {
                this.playIDField = value;
            }
        }
        
        /// <remarks/>
        public int cardNum {
            get {
                return this.cardNumField;
            }
            set {
                this.cardNumField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public decimal paid {
            get {
                return this.paidField;
            }
            set {
                this.paidField = value;
            }
        }
        
        /// <remarks/>
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Plays {
        
        private int playIDField;
        
        private System.DateTime whenPlayedField;
        
        private int gameIDField;
        
        private int gameSysIDField;
        
        private int pINField;
        
        private string stationIDField;
        
        private decimal balanceField;
        
        private decimal winBalanceField;
        
        private int netSecondsField;
        
        private string dataField;
        
        /// <remarks/>
        public int playID {
            get {
                return this.playIDField;
            }
            set {
                this.playIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime whenPlayed {
            get {
                return this.whenPlayedField;
            }
            set {
                this.whenPlayedField = value;
            }
        }
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public string stationID {
            get {
                return this.stationIDField;
            }
            set {
                this.stationIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal winBalance {
            get {
                return this.winBalanceField;
            }
            set {
                this.winBalanceField = value;
            }
        }
        
        /// <remarks/>
        public int netSeconds {
            get {
                return this.netSecondsField;
            }
            set {
                this.netSecondsField = value;
            }
        }
        
        /// <remarks/>
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CardIndexPositions {
        
        private int gameSysIDField;
        
        private int gameLevelField;
        
        private int startPositionField;
        
        private int currentPositionField;
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameLevel {
            get {
                return this.gameLevelField;
            }
            set {
                this.gameLevelField = value;
            }
        }
        
        /// <remarks/>
        public int startPosition {
            get {
                return this.startPositionField;
            }
            set {
                this.startPositionField = value;
            }
        }
        
        /// <remarks/>
        public int currentPosition {
            get {
                return this.currentPositionField;
            }
            set {
                this.currentPositionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InstalledGames {
        
        private int gameSysIDField;
        
        private string nameField;
        
        private string rootDirField;
        
        private string playerExeFileNameField;
        
        private string zipFileNameField;
        
        private string md5Field;
        
        private bool autoCallDailyField;
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string rootDir {
            get {
                return this.rootDirField;
            }
            set {
                this.rootDirField = value;
            }
        }
        
        /// <remarks/>
        public string playerExeFileName {
            get {
                return this.playerExeFileNameField;
            }
            set {
                this.playerExeFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string zipFileName {
            get {
                return this.zipFileNameField;
            }
            set {
                this.zipFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string md5 {
            get {
                return this.md5Field;
            }
            set {
                this.md5Field = value;
            }
        }
        
        /// <remarks/>
        public bool autoCallDaily {
            get {
                return this.autoCallDailyField;
            }
            set {
                this.autoCallDailyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EGMTerminals {
        
        private string terminalIDField;
        
        private string serialNumField;
        
        private int groupIDField;
        
        private System.DateTime lastActiveDateField;
        
        private int playingPINField;
        
        private int gameSysIDField;
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public string serialNum {
            get {
                return this.serialNumField;
            }
            set {
                this.serialNumField = value;
            }
        }
        
        /// <remarks/>
        public int groupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastActiveDate {
            get {
                return this.lastActiveDateField;
            }
            set {
                this.lastActiveDateField = value;
            }
        }
        
        /// <remarks/>
        public int playingPIN {
            get {
                return this.playingPINField;
            }
            set {
                this.playingPINField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Users {
        
        private int userIDField;
        
        private int createdByField;
        
        private System.DateTime createdOnField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string loginNameField;
        
        private string passwordField;
        
        private int permissionMaskField;
        
        private bool adminField;
        
        private bool callerField;
        
        private bool editUserField;
        
        private bool editGamesField;
        
        private bool editPayoutsField;
        
        private bool playerAuditField;
        
        private bool salesField;
        
        private bool salesMgrField;
        
        private bool salesRptField;
        
        private bool setupField;
        
        private bool specialField;
        
        private bool verifyPrizeField;
        
        /// <remarks/>
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string loginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int permissionMask {
            get {
                return this.permissionMaskField;
            }
            set {
                this.permissionMaskField = value;
            }
        }
        
        /// <remarks/>
        public bool admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public bool caller {
            get {
                return this.callerField;
            }
            set {
                this.callerField = value;
            }
        }
        
        /// <remarks/>
        public bool editUser {
            get {
                return this.editUserField;
            }
            set {
                this.editUserField = value;
            }
        }
        
        /// <remarks/>
        public bool editGames {
            get {
                return this.editGamesField;
            }
            set {
                this.editGamesField = value;
            }
        }
        
        /// <remarks/>
        public bool editPayouts {
            get {
                return this.editPayoutsField;
            }
            set {
                this.editPayoutsField = value;
            }
        }
        
        /// <remarks/>
        public bool playerAudit {
            get {
                return this.playerAuditField;
            }
            set {
                this.playerAuditField = value;
            }
        }
        
        /// <remarks/>
        public bool sales {
            get {
                return this.salesField;
            }
            set {
                this.salesField = value;
            }
        }
        
        /// <remarks/>
        public bool salesMgr {
            get {
                return this.salesMgrField;
            }
            set {
                this.salesMgrField = value;
            }
        }
        
        /// <remarks/>
        public bool salesRpt {
            get {
                return this.salesRptField;
            }
            set {
                this.salesRptField = value;
            }
        }
        
        /// <remarks/>
        public bool setup {
            get {
                return this.setupField;
            }
            set {
                this.setupField = value;
            }
        }
        
        /// <remarks/>
        public bool special {
            get {
                return this.specialField;
            }
            set {
                this.specialField = value;
            }
        }
        
        /// <remarks/>
        public bool verifyPrize {
            get {
                return this.verifyPrizeField;
            }
            set {
                this.verifyPrizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AutoBalls {
        
        private int setIDField;
        
        private System.DateTime whenScannedField;
        
        private int gameIDField;
        
        private int gameSysIDField;
        
        private int totalScannedCntField;
        
        private int scannedUniqueCntField;
        
        private int scanned24FormatCntField;
        
        private int[] scannedUniqueField;
        
        private int[] scanned24FormatField;
        
        private string scannedDataField;
        
        /// <remarks/>
        public int setID {
            get {
                return this.setIDField;
            }
            set {
                this.setIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime whenScanned {
            get {
                return this.whenScannedField;
            }
            set {
                this.whenScannedField = value;
            }
        }
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int totalScannedCnt {
            get {
                return this.totalScannedCntField;
            }
            set {
                this.totalScannedCntField = value;
            }
        }
        
        /// <remarks/>
        public int scannedUniqueCnt {
            get {
                return this.scannedUniqueCntField;
            }
            set {
                this.scannedUniqueCntField = value;
            }
        }
        
        /// <remarks/>
        public int scanned24FormatCnt {
            get {
                return this.scanned24FormatCntField;
            }
            set {
                this.scanned24FormatCntField = value;
            }
        }
        
        /// <remarks/>
        public int[] scannedUnique {
            get {
                return this.scannedUniqueField;
            }
            set {
                this.scannedUniqueField = value;
            }
        }
        
        /// <remarks/>
        public int[] scanned24Format {
            get {
                return this.scanned24FormatField;
            }
            set {
                this.scanned24FormatField = value;
            }
        }
        
        /// <remarks/>
        public string scannedData {
            get {
                return this.scannedDataField;
            }
            set {
                this.scannedDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class POSets24 {
        
        private int pOSetIDField;
        
        private string nameField;
        
        private string descriptionField;
        
        private decimal cardPriceField;
        
        private int patternCountField;
        
        private int pID1Field;
        
        private string pName1Field;
        
        private decimal pPayout1Field;
        
        private int pID2Field;
        
        private string pName2Field;
        
        private decimal pPayout2Field;
        
        private int pID3Field;
        
        private string pName3Field;
        
        private decimal pPayout3Field;
        
        private int pID4Field;
        
        private string pName4Field;
        
        private decimal pPayout4Field;
        
        private int pID5Field;
        
        private string pName5Field;
        
        private decimal pPayout5Field;
        
        private int pID6Field;
        
        private string pName6Field;
        
        private decimal pPayout6Field;
        
        private int pID7Field;
        
        private string pName7Field;
        
        private decimal pPayout7Field;
        
        private int pID8Field;
        
        private string pName8Field;
        
        private decimal pPayout8Field;
        
        private int pID9Field;
        
        private string pName9Field;
        
        private decimal pPayout9Field;
        
        private int pID10Field;
        
        private string pName10Field;
        
        private decimal pPayout10Field;
        
        private int pID11Field;
        
        private string pName11Field;
        
        private decimal pPayout11Field;
        
        private int pID12Field;
        
        private string pName12Field;
        
        private decimal pPayout12Field;
        
        private int pID13Field;
        
        private string pName13Field;
        
        private decimal pPayout13Field;
        
        private int pID14Field;
        
        private string pName14Field;
        
        private decimal pPayout14Field;
        
        private int pID15Field;
        
        private string pName15Field;
        
        private decimal pPayout15Field;
        
        /// <remarks/>
        public int POSetID {
            get {
                return this.pOSetIDField;
            }
            set {
                this.pOSetIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal cardPrice {
            get {
                return this.cardPriceField;
            }
            set {
                this.cardPriceField = value;
            }
        }
        
        /// <remarks/>
        public int patternCount {
            get {
                return this.patternCountField;
            }
            set {
                this.patternCountField = value;
            }
        }
        
        /// <remarks/>
        public int pID1 {
            get {
                return this.pID1Field;
            }
            set {
                this.pID1Field = value;
            }
        }
        
        /// <remarks/>
        public string pName1 {
            get {
                return this.pName1Field;
            }
            set {
                this.pName1Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout1 {
            get {
                return this.pPayout1Field;
            }
            set {
                this.pPayout1Field = value;
            }
        }
        
        /// <remarks/>
        public int pID2 {
            get {
                return this.pID2Field;
            }
            set {
                this.pID2Field = value;
            }
        }
        
        /// <remarks/>
        public string pName2 {
            get {
                return this.pName2Field;
            }
            set {
                this.pName2Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout2 {
            get {
                return this.pPayout2Field;
            }
            set {
                this.pPayout2Field = value;
            }
        }
        
        /// <remarks/>
        public int pID3 {
            get {
                return this.pID3Field;
            }
            set {
                this.pID3Field = value;
            }
        }
        
        /// <remarks/>
        public string pName3 {
            get {
                return this.pName3Field;
            }
            set {
                this.pName3Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout3 {
            get {
                return this.pPayout3Field;
            }
            set {
                this.pPayout3Field = value;
            }
        }
        
        /// <remarks/>
        public int pID4 {
            get {
                return this.pID4Field;
            }
            set {
                this.pID4Field = value;
            }
        }
        
        /// <remarks/>
        public string pName4 {
            get {
                return this.pName4Field;
            }
            set {
                this.pName4Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout4 {
            get {
                return this.pPayout4Field;
            }
            set {
                this.pPayout4Field = value;
            }
        }
        
        /// <remarks/>
        public int pID5 {
            get {
                return this.pID5Field;
            }
            set {
                this.pID5Field = value;
            }
        }
        
        /// <remarks/>
        public string pName5 {
            get {
                return this.pName5Field;
            }
            set {
                this.pName5Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout5 {
            get {
                return this.pPayout5Field;
            }
            set {
                this.pPayout5Field = value;
            }
        }
        
        /// <remarks/>
        public int pID6 {
            get {
                return this.pID6Field;
            }
            set {
                this.pID6Field = value;
            }
        }
        
        /// <remarks/>
        public string pName6 {
            get {
                return this.pName6Field;
            }
            set {
                this.pName6Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout6 {
            get {
                return this.pPayout6Field;
            }
            set {
                this.pPayout6Field = value;
            }
        }
        
        /// <remarks/>
        public int pID7 {
            get {
                return this.pID7Field;
            }
            set {
                this.pID7Field = value;
            }
        }
        
        /// <remarks/>
        public string pName7 {
            get {
                return this.pName7Field;
            }
            set {
                this.pName7Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout7 {
            get {
                return this.pPayout7Field;
            }
            set {
                this.pPayout7Field = value;
            }
        }
        
        /// <remarks/>
        public int pID8 {
            get {
                return this.pID8Field;
            }
            set {
                this.pID8Field = value;
            }
        }
        
        /// <remarks/>
        public string pName8 {
            get {
                return this.pName8Field;
            }
            set {
                this.pName8Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout8 {
            get {
                return this.pPayout8Field;
            }
            set {
                this.pPayout8Field = value;
            }
        }
        
        /// <remarks/>
        public int pID9 {
            get {
                return this.pID9Field;
            }
            set {
                this.pID9Field = value;
            }
        }
        
        /// <remarks/>
        public string pName9 {
            get {
                return this.pName9Field;
            }
            set {
                this.pName9Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout9 {
            get {
                return this.pPayout9Field;
            }
            set {
                this.pPayout9Field = value;
            }
        }
        
        /// <remarks/>
        public int pID10 {
            get {
                return this.pID10Field;
            }
            set {
                this.pID10Field = value;
            }
        }
        
        /// <remarks/>
        public string pName10 {
            get {
                return this.pName10Field;
            }
            set {
                this.pName10Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout10 {
            get {
                return this.pPayout10Field;
            }
            set {
                this.pPayout10Field = value;
            }
        }
        
        /// <remarks/>
        public int pID11 {
            get {
                return this.pID11Field;
            }
            set {
                this.pID11Field = value;
            }
        }
        
        /// <remarks/>
        public string pName11 {
            get {
                return this.pName11Field;
            }
            set {
                this.pName11Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout11 {
            get {
                return this.pPayout11Field;
            }
            set {
                this.pPayout11Field = value;
            }
        }
        
        /// <remarks/>
        public int pID12 {
            get {
                return this.pID12Field;
            }
            set {
                this.pID12Field = value;
            }
        }
        
        /// <remarks/>
        public string pName12 {
            get {
                return this.pName12Field;
            }
            set {
                this.pName12Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout12 {
            get {
                return this.pPayout12Field;
            }
            set {
                this.pPayout12Field = value;
            }
        }
        
        /// <remarks/>
        public int pID13 {
            get {
                return this.pID13Field;
            }
            set {
                this.pID13Field = value;
            }
        }
        
        /// <remarks/>
        public string pName13 {
            get {
                return this.pName13Field;
            }
            set {
                this.pName13Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout13 {
            get {
                return this.pPayout13Field;
            }
            set {
                this.pPayout13Field = value;
            }
        }
        
        /// <remarks/>
        public int pID14 {
            get {
                return this.pID14Field;
            }
            set {
                this.pID14Field = value;
            }
        }
        
        /// <remarks/>
        public string pName14 {
            get {
                return this.pName14Field;
            }
            set {
                this.pName14Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout14 {
            get {
                return this.pPayout14Field;
            }
            set {
                this.pPayout14Field = value;
            }
        }
        
        /// <remarks/>
        public int pID15 {
            get {
                return this.pID15Field;
            }
            set {
                this.pID15Field = value;
            }
        }
        
        /// <remarks/>
        public string pName15 {
            get {
                return this.pName15Field;
            }
            set {
                this.pName15Field = value;
            }
        }
        
        /// <remarks/>
        public decimal pPayout15 {
            get {
                return this.pPayout15Field;
            }
            set {
                this.pPayout15Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Sales {
        
        private int transactionIDField;
        
        private System.DateTime whenSoldField;
        
        private int soldByField;
        
        private string soldAtField;
        
        private decimal saleAmtField;
        
        private decimal taxCollectedField;
        
        private decimal discountField;
        
        private bool voidedField;
        
        private bool compField;
        
        /// <remarks/>
        public int transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime whenSold {
            get {
                return this.whenSoldField;
            }
            set {
                this.whenSoldField = value;
            }
        }
        
        /// <remarks/>
        public int soldBy {
            get {
                return this.soldByField;
            }
            set {
                this.soldByField = value;
            }
        }
        
        /// <remarks/>
        public string soldAt {
            get {
                return this.soldAtField;
            }
            set {
                this.soldAtField = value;
            }
        }
        
        /// <remarks/>
        public decimal saleAmt {
            get {
                return this.saleAmtField;
            }
            set {
                this.saleAmtField = value;
            }
        }
        
        /// <remarks/>
        public decimal taxCollected {
            get {
                return this.taxCollectedField;
            }
            set {
                this.taxCollectedField = value;
            }
        }
        
        /// <remarks/>
        public decimal discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        public bool voided {
            get {
                return this.voidedField;
            }
            set {
                this.voidedField = value;
            }
        }
        
        /// <remarks/>
        public bool comp {
            get {
                return this.compField;
            }
            set {
                this.compField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Bonus24 {
        
        private string terminalIDField;
        
        private int gameSysIDField;
        
        private int bonusNumberField;
        
        private int hitCountField;
        
        private decimal bonusFundField;
        
        private decimal bonusSeedField;
        
        private string attractStrField;
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int bonusNumber {
            get {
                return this.bonusNumberField;
            }
            set {
                this.bonusNumberField = value;
            }
        }
        
        /// <remarks/>
        public int hitCount {
            get {
                return this.hitCountField;
            }
            set {
                this.hitCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal bonusFund {
            get {
                return this.bonusFundField;
            }
            set {
                this.bonusFundField = value;
            }
        }
        
        /// <remarks/>
        public decimal bonusSeed {
            get {
                return this.bonusSeedField;
            }
            set {
                this.bonusSeedField = value;
            }
        }
        
        /// <remarks/>
        public string attractStr {
            get {
                return this.attractStrField;
            }
            set {
                this.attractStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CardData24 {
        
        private int serialNumField;
        
        private int[] numsField;
        
        /// <remarks/>
        public int serialNum {
            get {
                return this.serialNumField;
            }
            set {
                this.serialNumField = value;
            }
        }
        
        /// <remarks/>
        public int[] nums {
            get {
                return this.numsField;
            }
            set {
                this.numsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CallerLogEntry {
        
        private System.DateTime whenSavedField;
        
        private int userIDField;
        
        private string moduleNameField;
        
        private string actionStrField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string moduleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
            }
        }
        
        /// <remarks/>
        public string actionStr {
            get {
                return this.actionStrField;
            }
            set {
                this.actionStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LogEntry {
        
        private System.DateTime whenSavedField;
        
        private int userIDField;
        
        private string terminalIDField;
        
        private int gameIDField;
        
        private string moduleNameField;
        
        private string errorStrField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public string moduleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
            }
        }
        
        /// <remarks/>
        public string errorStr {
            get {
                return this.errorStrField;
            }
            set {
                this.errorStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class POSLogEntry {
        
        private System.DateTime whenSavedField;
        
        private int userIDField;
        
        private long stnNumField;
        
        private string moduleNameField;
        
        private string errorStrField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public long stnNum {
            get {
                return this.stnNumField;
            }
            set {
                this.stnNumField = value;
            }
        }
        
        /// <remarks/>
        public string moduleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
            }
        }
        
        /// <remarks/>
        public string errorStr {
            get {
                return this.errorStrField;
            }
            set {
                this.errorStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProgressiveData {
        
        private int gameSysIDField;
        
        private int eGMGroupIDField;
        
        private decimal amtField;
        
        private decimal seedField;
        
        private double betPercentField;
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int EGMGroupID {
            get {
                return this.eGMGroupIDField;
            }
            set {
                this.eGMGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal amt {
            get {
                return this.amtField;
            }
            set {
                this.amtField = value;
            }
        }
        
        /// <remarks/>
        public decimal seed {
            get {
                return this.seedField;
            }
            set {
                this.seedField = value;
            }
        }
        
        /// <remarks/>
        public double betPercent {
            get {
                return this.betPercentField;
            }
            set {
                this.betPercentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BingoPatterns {
        
        private int idField;
        
        private string nameField;
        
        private int maskCntField;
        
        private int[] masksField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int maskCnt {
            get {
                return this.maskCntField;
            }
            set {
                this.maskCntField = value;
            }
        }
        
        /// <remarks/>
        public int[] masks {
            get {
                return this.masksField;
            }
            set {
                this.masksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Games24 {
        
        private int gameIDField;
        
        private int gameSysIDField;
        
        private System.DateTime startField;
        
        private System.DateTime stopField;
        
        private int gLevelField;
        
        private int ballCountField;
        
        private int[] ballNumsField;
        
        private decimal cardCostField;
        
        private int pOSetNumField;
        
        private int patternCntField;
        
        private decimal[] payoutsField;
        
        private BingoPatterns[] patternsField;
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime stop {
            get {
                return this.stopField;
            }
            set {
                this.stopField = value;
            }
        }
        
        /// <remarks/>
        public int gLevel {
            get {
                return this.gLevelField;
            }
            set {
                this.gLevelField = value;
            }
        }
        
        /// <remarks/>
        public int ballCount {
            get {
                return this.ballCountField;
            }
            set {
                this.ballCountField = value;
            }
        }
        
        /// <remarks/>
        public int[] ballNums {
            get {
                return this.ballNumsField;
            }
            set {
                this.ballNumsField = value;
            }
        }
        
        /// <remarks/>
        public decimal cardCost {
            get {
                return this.cardCostField;
            }
            set {
                this.cardCostField = value;
            }
        }
        
        /// <remarks/>
        public int POSetNum {
            get {
                return this.pOSetNumField;
            }
            set {
                this.pOSetNumField = value;
            }
        }
        
        /// <remarks/>
        public int patternCnt {
            get {
                return this.patternCntField;
            }
            set {
                this.patternCntField = value;
            }
        }
        
        /// <remarks/>
        public decimal[] payouts {
            get {
                return this.payoutsField;
            }
            set {
                this.payoutsField = value;
            }
        }
        
        /// <remarks/>
        public BingoPatterns[] patterns {
            get {
                return this.patternsField;
            }
            set {
                this.patternsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SessionReportGamePCB {
        
        private int sessionIDField;
        
        private int gameIDField;
        
        private int gameNumField;
        
        private System.DateTime startField;
        
        private System.DateTime stopField;
        
        private int ballCountField;
        
        private int[] ballNumsField;
        
        private decimal cardCostField;
        
        private double costToPrizePercentField;
        
        private double costToProgressivePercentField;
        
        private decimal minPrizeField;
        
        private int patternIDField;
        
        private string patternNameField;
        
        private decimal prizeAmtField;
        
        private int playerCountField;
        
        private int cardCountField;
        
        /// <remarks/>
        public int sessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameNum {
            get {
                return this.gameNumField;
            }
            set {
                this.gameNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime stop {
            get {
                return this.stopField;
            }
            set {
                this.stopField = value;
            }
        }
        
        /// <remarks/>
        public int ballCount {
            get {
                return this.ballCountField;
            }
            set {
                this.ballCountField = value;
            }
        }
        
        /// <remarks/>
        public int[] ballNums {
            get {
                return this.ballNumsField;
            }
            set {
                this.ballNumsField = value;
            }
        }
        
        /// <remarks/>
        public decimal cardCost {
            get {
                return this.cardCostField;
            }
            set {
                this.cardCostField = value;
            }
        }
        
        /// <remarks/>
        public double costToPrizePercent {
            get {
                return this.costToPrizePercentField;
            }
            set {
                this.costToPrizePercentField = value;
            }
        }
        
        /// <remarks/>
        public double costToProgressivePercent {
            get {
                return this.costToProgressivePercentField;
            }
            set {
                this.costToProgressivePercentField = value;
            }
        }
        
        /// <remarks/>
        public decimal minPrize {
            get {
                return this.minPrizeField;
            }
            set {
                this.minPrizeField = value;
            }
        }
        
        /// <remarks/>
        public int patternID {
            get {
                return this.patternIDField;
            }
            set {
                this.patternIDField = value;
            }
        }
        
        /// <remarks/>
        public string patternName {
            get {
                return this.patternNameField;
            }
            set {
                this.patternNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal prizeAmt {
            get {
                return this.prizeAmtField;
            }
            set {
                this.prizeAmtField = value;
            }
        }
        
        /// <remarks/>
        public int playerCount {
            get {
                return this.playerCountField;
            }
            set {
                this.playerCountField = value;
            }
        }
        
        /// <remarks/>
        public int cardCount {
            get {
                return this.cardCountField;
            }
            set {
                this.cardCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SessionReportPCB {
        
        private SessionsPCB sessionDataField;
        
        private SessionReportGamePCB[] gameArrayField;
        
        /// <remarks/>
        public SessionsPCB sessionData {
            get {
                return this.sessionDataField;
            }
            set {
                this.sessionDataField = value;
            }
        }
        
        /// <remarks/>
        public SessionReportGamePCB[] gameArray {
            get {
                return this.gameArrayField;
            }
            set {
                this.gameArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SessionsPCB {
        
        private int sessionIDField;
        
        private System.DateTime startField;
        
        private System.DateTime stopField;
        
        private string nameField;
        
        private int gameSysIDField;
        
        private int gameCountField;
        
        private int sessionDefIDField;
        
        private int lastGameNumField;
        
        /// <remarks/>
        public int sessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime stop {
            get {
                return this.stopField;
            }
            set {
                this.stopField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameCount {
            get {
                return this.gameCountField;
            }
            set {
                this.gameCountField = value;
            }
        }
        
        /// <remarks/>
        public int sessionDefID {
            get {
                return this.sessionDefIDField;
            }
            set {
                this.sessionDefIDField = value;
            }
        }
        
        /// <remarks/>
        public int lastGameNum {
            get {
                return this.lastGameNumField;
            }
            set {
                this.lastGameNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GamesPCB {
        
        private int gameIDField;
        
        private int gameSysIDField;
        
        private int sessionIDField;
        
        private int gameNumField;
        
        private System.DateTime startField;
        
        private System.DateTime stopField;
        
        private int ballCountField;
        
        private int[] ballNumsField;
        
        private decimal cardCostField;
        
        private double costToPrizePercentField;
        
        private double costToProgressivePercentField;
        
        private decimal minPrizeField;
        
        private int progWinBallCountField;
        
        private decimal prizeAmtField;
        
        private int patternIDField;
        
        private string patternNameField;
        
        private int patternMaskCountField;
        
        private int[] patternMasksField;
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int sessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameNum {
            get {
                return this.gameNumField;
            }
            set {
                this.gameNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime stop {
            get {
                return this.stopField;
            }
            set {
                this.stopField = value;
            }
        }
        
        /// <remarks/>
        public int ballCount {
            get {
                return this.ballCountField;
            }
            set {
                this.ballCountField = value;
            }
        }
        
        /// <remarks/>
        public int[] ballNums {
            get {
                return this.ballNumsField;
            }
            set {
                this.ballNumsField = value;
            }
        }
        
        /// <remarks/>
        public decimal cardCost {
            get {
                return this.cardCostField;
            }
            set {
                this.cardCostField = value;
            }
        }
        
        /// <remarks/>
        public double costToPrizePercent {
            get {
                return this.costToPrizePercentField;
            }
            set {
                this.costToPrizePercentField = value;
            }
        }
        
        /// <remarks/>
        public double costToProgressivePercent {
            get {
                return this.costToProgressivePercentField;
            }
            set {
                this.costToProgressivePercentField = value;
            }
        }
        
        /// <remarks/>
        public decimal minPrize {
            get {
                return this.minPrizeField;
            }
            set {
                this.minPrizeField = value;
            }
        }
        
        /// <remarks/>
        public int progWinBallCount {
            get {
                return this.progWinBallCountField;
            }
            set {
                this.progWinBallCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal prizeAmt {
            get {
                return this.prizeAmtField;
            }
            set {
                this.prizeAmtField = value;
            }
        }
        
        /// <remarks/>
        public int patternID {
            get {
                return this.patternIDField;
            }
            set {
                this.patternIDField = value;
            }
        }
        
        /// <remarks/>
        public string patternName {
            get {
                return this.patternNameField;
            }
            set {
                this.patternNameField = value;
            }
        }
        
        /// <remarks/>
        public int patternMaskCount {
            get {
                return this.patternMaskCountField;
            }
            set {
                this.patternMaskCountField = value;
            }
        }
        
        /// <remarks/>
        public int[] patternMasks {
            get {
                return this.patternMasksField;
            }
            set {
                this.patternMasksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SessionGameDefPCB {
        
        private int sessionDefIDField;
        
        private int gameNumField;
        
        private int patternIDField;
        
        private decimal cardCostField;
        
        private double costToPrizePercentField;
        
        private double costToProgressivePercentField;
        
        private decimal minPrizeField;
        
        private int progWinBallCountField;
        
        /// <remarks/>
        public int sessionDefID {
            get {
                return this.sessionDefIDField;
            }
            set {
                this.sessionDefIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameNum {
            get {
                return this.gameNumField;
            }
            set {
                this.gameNumField = value;
            }
        }
        
        /// <remarks/>
        public int patternID {
            get {
                return this.patternIDField;
            }
            set {
                this.patternIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal cardCost {
            get {
                return this.cardCostField;
            }
            set {
                this.cardCostField = value;
            }
        }
        
        /// <remarks/>
        public double costToPrizePercent {
            get {
                return this.costToPrizePercentField;
            }
            set {
                this.costToPrizePercentField = value;
            }
        }
        
        /// <remarks/>
        public double costToProgressivePercent {
            get {
                return this.costToProgressivePercentField;
            }
            set {
                this.costToProgressivePercentField = value;
            }
        }
        
        /// <remarks/>
        public decimal minPrize {
            get {
                return this.minPrizeField;
            }
            set {
                this.minPrizeField = value;
            }
        }
        
        /// <remarks/>
        public int progWinBallCount {
            get {
                return this.progWinBallCountField;
            }
            set {
                this.progWinBallCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SessionDefPCB {
        
        private int sessionDefIDField;
        
        private string nameField;
        
        private int sysGameIDField;
        
        private int gameCountField;
        
        /// <remarks/>
        public int sessionDefID {
            get {
                return this.sessionDefIDField;
            }
            set {
                this.sessionDefIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int sysGameID {
            get {
                return this.sysGameIDField;
            }
            set {
                this.sysGameIDField = value;
            }
        }
        
        /// <remarks/>
        public int gameCount {
            get {
                return this.gameCountField;
            }
            set {
                this.gameCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Redemptions {
        
        private int transactionIDField;
        
        private System.DateTime whenRedeemedField;
        
        private int pINField;
        
        private int userIDField;
        
        private string terminalIDField;
        
        private decimal amtField;
        
        private decimal winningsField;
        
        private decimal taxField;
        
        private bool unClaimedField;
        
        /// <remarks/>
        public int transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime whenRedeemed {
            get {
                return this.whenRedeemedField;
            }
            set {
                this.whenRedeemedField = value;
            }
        }
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal amt {
            get {
                return this.amtField;
            }
            set {
                this.amtField = value;
            }
        }
        
        /// <remarks/>
        public decimal winnings {
            get {
                return this.winningsField;
            }
            set {
                this.winningsField = value;
            }
        }
        
        /// <remarks/>
        public decimal tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        public bool unClaimed {
            get {
                return this.unClaimedField;
            }
            set {
                this.unClaimedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Repurchases {
        
        private int repurchaseIDField;
        
        private int pINField;
        
        private System.DateTime whenRepurchasedField;
        
        private int repurchasedByField;
        
        private string terminalIDField;
        
        private decimal amtField;
        
        private decimal addedAmtField;
        
        private decimal taxCollectedField;
        
        /// <remarks/>
        public int repurchaseID {
            get {
                return this.repurchaseIDField;
            }
            set {
                this.repurchaseIDField = value;
            }
        }
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime whenRepurchased {
            get {
                return this.whenRepurchasedField;
            }
            set {
                this.whenRepurchasedField = value;
            }
        }
        
        /// <remarks/>
        public int repurchasedBy {
            get {
                return this.repurchasedByField;
            }
            set {
                this.repurchasedByField = value;
            }
        }
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal amt {
            get {
                return this.amtField;
            }
            set {
                this.amtField = value;
            }
        }
        
        /// <remarks/>
        public decimal addedAmt {
            get {
                return this.addedAmtField;
            }
            set {
                this.addedAmtField = value;
            }
        }
        
        /// <remarks/>
        public decimal taxCollected {
            get {
                return this.taxCollectedField;
            }
            set {
                this.taxCollectedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PINs {
        
        private int transactionIDField;
        
        private System.DateTime whenField;
        
        private int pINField;
        
        private decimal balanceField;
        
        private bool playingField;
        
        private string playingAtField;
        
        private decimal winBalanceField;
        
        private int netSecondsField;
        
        /// <remarks/>
        public int transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime when {
            get {
                return this.whenField;
            }
            set {
                this.whenField = value;
            }
        }
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public decimal balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public bool playing {
            get {
                return this.playingField;
            }
            set {
                this.playingField = value;
            }
        }
        
        /// <remarks/>
        public string playingAt {
            get {
                return this.playingAtField;
            }
            set {
                this.playingAtField = value;
            }
        }
        
        /// <remarks/>
        public decimal winBalance {
            get {
                return this.winBalanceField;
            }
            set {
                this.winBalanceField = value;
            }
        }
        
        /// <remarks/>
        public int netSeconds {
            get {
                return this.netSecondsField;
            }
            set {
                this.netSecondsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GamePlay {
        
        private int gameSysIDField;
        
        private System.DateTime playDateField;
        
        private decimal spendAmtField;
        
        private decimal winAmtField;
        
        private int playCntField;
        
        /// <remarks/>
        public int gameSysID {
            get {
                return this.gameSysIDField;
            }
            set {
                this.gameSysIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime playDate {
            get {
                return this.playDateField;
            }
            set {
                this.playDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal spendAmt {
            get {
                return this.spendAmtField;
            }
            set {
                this.spendAmtField = value;
            }
        }
        
        /// <remarks/>
        public decimal winAmt {
            get {
                return this.winAmtField;
            }
            set {
                this.winAmtField = value;
            }
        }
        
        /// <remarks/>
        public int playCnt {
            get {
                return this.playCntField;
            }
            set {
                this.playCntField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DiscardedCards {
        
        private int gameIDField;
        
        private int pINField;
        
        private int cardNumField;
        
        private int discardedAtBallIdxField;
        
        /// <remarks/>
        public int gameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public int PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public int cardNum {
            get {
                return this.cardNumField;
            }
            set {
                this.cardNumField = value;
            }
        }
        
        /// <remarks/>
        public int discardedAtBallIdx {
            get {
                return this.discardedAtBallIdxField;
            }
            set {
                this.discardedAtBallIdxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Settings {
        
        private System.DateTime whenSavedField;
        
        private int savedByField;
        
        private string locNameField;
        
        private int demoPINField;
        
        private decimal demoAmtField;
        
        private int keepDataWeeksField;
        
        private int busDayEndHourField;
        
        private int pinValidDaysField;
        
        private string receiptBeginL1Field;
        
        private string receiptBeginL2Field;
        
        private string receiptBeginL3Field;
        
        private string receiptEndL1Field;
        
        private string receiptEndL2Field;
        
        private string receiptEndL3Field;
        
        private double redemptionTaxRateField;
        
        private bool taxOnlyWinningsField;
        
        private double salesTaxRateField;
        
        private decimal verifyWinAmtField;
        
        private int locationTypeField;
        
        private int penniesPerMinuteField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int savedBy {
            get {
                return this.savedByField;
            }
            set {
                this.savedByField = value;
            }
        }
        
        /// <remarks/>
        public string locName {
            get {
                return this.locNameField;
            }
            set {
                this.locNameField = value;
            }
        }
        
        /// <remarks/>
        public int demoPIN {
            get {
                return this.demoPINField;
            }
            set {
                this.demoPINField = value;
            }
        }
        
        /// <remarks/>
        public decimal demoAmt {
            get {
                return this.demoAmtField;
            }
            set {
                this.demoAmtField = value;
            }
        }
        
        /// <remarks/>
        public int keepDataWeeks {
            get {
                return this.keepDataWeeksField;
            }
            set {
                this.keepDataWeeksField = value;
            }
        }
        
        /// <remarks/>
        public int busDayEndHour {
            get {
                return this.busDayEndHourField;
            }
            set {
                this.busDayEndHourField = value;
            }
        }
        
        /// <remarks/>
        public int pinValidDays {
            get {
                return this.pinValidDaysField;
            }
            set {
                this.pinValidDaysField = value;
            }
        }
        
        /// <remarks/>
        public string receiptBeginL1 {
            get {
                return this.receiptBeginL1Field;
            }
            set {
                this.receiptBeginL1Field = value;
            }
        }
        
        /// <remarks/>
        public string receiptBeginL2 {
            get {
                return this.receiptBeginL2Field;
            }
            set {
                this.receiptBeginL2Field = value;
            }
        }
        
        /// <remarks/>
        public string receiptBeginL3 {
            get {
                return this.receiptBeginL3Field;
            }
            set {
                this.receiptBeginL3Field = value;
            }
        }
        
        /// <remarks/>
        public string receiptEndL1 {
            get {
                return this.receiptEndL1Field;
            }
            set {
                this.receiptEndL1Field = value;
            }
        }
        
        /// <remarks/>
        public string receiptEndL2 {
            get {
                return this.receiptEndL2Field;
            }
            set {
                this.receiptEndL2Field = value;
            }
        }
        
        /// <remarks/>
        public string receiptEndL3 {
            get {
                return this.receiptEndL3Field;
            }
            set {
                this.receiptEndL3Field = value;
            }
        }
        
        /// <remarks/>
        public double redemptionTaxRate {
            get {
                return this.redemptionTaxRateField;
            }
            set {
                this.redemptionTaxRateField = value;
            }
        }
        
        /// <remarks/>
        public bool taxOnlyWinnings {
            get {
                return this.taxOnlyWinningsField;
            }
            set {
                this.taxOnlyWinningsField = value;
            }
        }
        
        /// <remarks/>
        public double salesTaxRate {
            get {
                return this.salesTaxRateField;
            }
            set {
                this.salesTaxRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal verifyWinAmt {
            get {
                return this.verifyWinAmtField;
            }
            set {
                this.verifyWinAmtField = value;
            }
        }
        
        /// <remarks/>
        public int locationType {
            get {
                return this.locationTypeField;
            }
            set {
                this.locationTypeField = value;
            }
        }
        
        /// <remarks/>
        public int penniesPerMinute {
            get {
                return this.penniesPerMinuteField;
            }
            set {
                this.penniesPerMinuteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LevelData {
        
        private int pOSetNumRField;
        
        private int pOSetNumBField;
        
        private int pOSetNumPField;
        
        private int pOSetNumBPField;
        
        private int costMultField;
        
        private int prizeMultField;
        
        /// <remarks/>
        public int POSetNumR {
            get {
                return this.pOSetNumRField;
            }
            set {
                this.pOSetNumRField = value;
            }
        }
        
        /// <remarks/>
        public int POSetNumB {
            get {
                return this.pOSetNumBField;
            }
            set {
                this.pOSetNumBField = value;
            }
        }
        
        /// <remarks/>
        public int POSetNumP {
            get {
                return this.pOSetNumPField;
            }
            set {
                this.pOSetNumPField = value;
            }
        }
        
        /// <remarks/>
        public int POSetNumBP {
            get {
                return this.pOSetNumBPField;
            }
            set {
                this.pOSetNumBPField = value;
            }
        }
        
        /// <remarks/>
        public int costMult {
            get {
                return this.costMultField;
            }
            set {
                this.costMultField = value;
            }
        }
        
        /// <remarks/>
        public int prizeMult {
            get {
                return this.prizeMultField;
            }
            set {
                this.prizeMultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Settings24 {
        
        private System.DateTime whenSavedField;
        
        private int savedByField;
        
        private bool regularGamesField;
        
        private bool bonusGamesField;
        
        private bool progressiveGamesField;
        
        private bool bonusProgGamesField;
        
        private int maxCardDisplayModeField;
        
        private int bPPatternIndexField;
        
        private int bPPatternCountField;
        
        private double bPPercentField;
        
        private decimal bPSeedField;
        
        private LevelData[] levelDataField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int savedBy {
            get {
                return this.savedByField;
            }
            set {
                this.savedByField = value;
            }
        }
        
        /// <remarks/>
        public bool regularGames {
            get {
                return this.regularGamesField;
            }
            set {
                this.regularGamesField = value;
            }
        }
        
        /// <remarks/>
        public bool bonusGames {
            get {
                return this.bonusGamesField;
            }
            set {
                this.bonusGamesField = value;
            }
        }
        
        /// <remarks/>
        public bool progressiveGames {
            get {
                return this.progressiveGamesField;
            }
            set {
                this.progressiveGamesField = value;
            }
        }
        
        /// <remarks/>
        public bool bonusProgGames {
            get {
                return this.bonusProgGamesField;
            }
            set {
                this.bonusProgGamesField = value;
            }
        }
        
        /// <remarks/>
        public int maxCardDisplayMode {
            get {
                return this.maxCardDisplayModeField;
            }
            set {
                this.maxCardDisplayModeField = value;
            }
        }
        
        /// <remarks/>
        public int bPPatternIndex {
            get {
                return this.bPPatternIndexField;
            }
            set {
                this.bPPatternIndexField = value;
            }
        }
        
        /// <remarks/>
        public int bPPatternCount {
            get {
                return this.bPPatternCountField;
            }
            set {
                this.bPPatternCountField = value;
            }
        }
        
        /// <remarks/>
        public double bPPercent {
            get {
                return this.bPPercentField;
            }
            set {
                this.bPPercentField = value;
            }
        }
        
        /// <remarks/>
        public decimal bPSeed {
            get {
                return this.bPSeedField;
            }
            set {
                this.bPSeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LevelData[] levelData {
            get {
                return this.levelDataField;
            }
            set {
                this.levelDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SysData {
        
        private System.DateTime lastZDateField;
        
        private int lastZTransactionIDField;
        
        private System.DateTime lastResetDateField;
        
        private long accCodeField;
        
        private string locCodeField;
        
        private System.DateTime lastArchiveDateField;
        
        /// <remarks/>
        public System.DateTime lastZDate {
            get {
                return this.lastZDateField;
            }
            set {
                this.lastZDateField = value;
            }
        }
        
        /// <remarks/>
        public int lastZTransactionID {
            get {
                return this.lastZTransactionIDField;
            }
            set {
                this.lastZTransactionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastResetDate {
            get {
                return this.lastResetDateField;
            }
            set {
                this.lastResetDateField = value;
            }
        }
        
        /// <remarks/>
        public long accCode {
            get {
                return this.accCodeField;
            }
            set {
                this.accCodeField = value;
            }
        }
        
        /// <remarks/>
        public string locCode {
            get {
                return this.locCodeField;
            }
            set {
                this.locCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastArchiveDate {
            get {
                return this.lastArchiveDateField;
            }
            set {
                this.lastArchiveDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SettingsPCB {
        
        private System.DateTime whenSavedField;
        
        private int savedByField;
        
        private bool allowDiscardField;
        
        private int daubModeField;
        
        private int maxCardDisplayModeField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int savedBy {
            get {
                return this.savedByField;
            }
            set {
                this.savedByField = value;
            }
        }
        
        /// <remarks/>
        public bool allowDiscard {
            get {
                return this.allowDiscardField;
            }
            set {
                this.allowDiscardField = value;
            }
        }
        
        /// <remarks/>
        public int daubMode {
            get {
                return this.daubModeField;
            }
            set {
                this.daubModeField = value;
            }
        }
        
        /// <remarks/>
        public int maxCardDisplayMode {
            get {
                return this.maxCardDisplayModeField;
            }
            set {
                this.maxCardDisplayModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Settings90 {
        
        private System.DateTime whenSavedField;
        
        private int savedByField;
        
        private int maxBetLevelField;
        
        /// <remarks/>
        public System.DateTime whenSaved {
            get {
                return this.whenSavedField;
            }
            set {
                this.whenSavedField = value;
            }
        }
        
        /// <remarks/>
        public int savedBy {
            get {
                return this.savedByField;
            }
            set {
                this.savedByField = value;
            }
        }
        
        /// <remarks/>
        public int maxBetLevel {
            get {
                return this.maxBetLevelField;
            }
            set {
                this.maxBetLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGameSettingsCompletedEventHandler(object sender, getGameSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGameSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGameSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveGameSettingsCompletedEventHandler(object sender, saveGameSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveGameSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveGameSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSettings90CompletedEventHandler(object sender, saveSettings90CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSettings90CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSettings90CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSettings90CompletedEventHandler(object sender, getSettings90CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSettings90CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSettings90CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Settings90 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Settings90)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSettingsPCBCompletedEventHandler(object sender, saveSettingsPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSettingsPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSettingsPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSettingsPCBCompletedEventHandler(object sender, getSettingsPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSettingsPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSettingsPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SettingsPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SettingsPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateSysDataForLastArchiveCompletedEventHandler(object sender, updateSysDataForLastArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSysDataForLastArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSysDataForLastArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateSysDataForLastTransactionCompletedEventHandler(object sender, updateSysDataForLastTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSysDataForLastTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSysDataForLastTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSysDataCompletedEventHandler(object sender, saveSysDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSysDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSysDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSysDataCompletedEventHandler(object sender, getSysDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSysDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSysDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SysData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SysData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSettings24CompletedEventHandler(object sender, getSettings24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSettings24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSettings24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Settings24 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Settings24)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSettings24CompletedEventHandler(object sender, saveSettings24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSettings24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSettings24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSettingsCompletedEventHandler(object sender, getSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Settings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Settings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSettingsCompletedEventHandler(object sender, saveSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDisCardPCBListCompletedEventHandler(object sender, getDisCardPCBListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisCardPCBListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisCardPCBListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscardedCards[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscardedCards[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllDiscardedCardsForGameIDRangeCompletedEventHandler(object sender, getAllDiscardedCardsForGameIDRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllDiscardedCardsForGameIDRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllDiscardedCardsForGameIDRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscardedCards[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscardedCards[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllDiscardedCardsForGameIDRangeCompletedEventHandler(object sender, deleteAllDiscardedCardsForGameIDRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllDiscardedCardsForGameIDRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllDiscardedCardsForGameIDRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createDiscardCardCompletedEventHandler(object sender, createDiscardCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDiscardCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDiscardCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDiscardCardCompletedEventHandler(object sender, getDiscardCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDiscardCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDiscardCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscardedCards Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscardedCards)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveOdds24DataCompletedEventHandler(object sender, saveOdds24DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveOdds24DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveOdds24DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getOddsListCompletedEventHandler(object sender, getOddsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOddsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOddsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveGameRecoveryDataCompletedEventHandler(object sender, saveGameRecoveryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveGameRecoveryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveGameRecoveryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGameRecoveryDataCompletedEventHandler(object sender, getGameRecoveryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGameRecoveryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGameRecoveryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteGameRecoveryDataCompletedEventHandler(object sender, deleteGameRecoveryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteGameRecoveryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteGameRecoveryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addToGameSysPlayCompletedEventHandler(object sender, addToGameSysPlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addToGameSysPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addToGameSysPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGamePlayListCompletedEventHandler(object sender, getGamePlayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGamePlayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGamePlayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GamePlay[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GamePlay[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setSoundsCompletedEventHandler(object sender, setSoundsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setSoundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setSoundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void areEGMSoundsOffCompletedEventHandler(object sender, areEGMSoundsOffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class areEGMSoundsOffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal areEGMSoundsOffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUpdateStringCompletedEventHandler(object sender, getUpdateStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUpdateStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUpdateStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setUpdateStringCompletedEventHandler(object sender, setUpdateStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUpdateStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUpdateStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createNewPINCompletedEventHandler(object sender, createNewPINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewPINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewPINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PINs Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINs)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPINDataCompletedEventHandler(object sender, getPINDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPINDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPINDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PINs Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINs)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void anyPINsArePlayingCompletedEventHandler(object sender, anyPINsArePlayingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class anyPINsArePlayingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal anyPINsArePlayingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPINsWithBalancesCompletedEventHandler(object sender, getAllPINsWithBalancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPINsWithBalancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPINsWithBalancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PINs[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINs[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPINsForDateRangeCompletedEventHandler(object sender, getAllPINsForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPINsForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPINsForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PINs[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINs[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllPINsForDateRangeCompletedEventHandler(object sender, deleteAllPINsForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllPINsForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllPINsForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deletePINCompletedEventHandler(object sender, deletePINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPINsForDateCompletedEventHandler(object sender, getAllPINsForDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPINsForDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPINsForDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PINs[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINs[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPINsCompletedEventHandler(object sender, getAllPINsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPINsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPINsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PINs[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINs[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRedemptionListPINsCompletedEventHandler(object sender, getRedemptionListPINsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRedemptionListPINsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRedemptionListPINsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PINs[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PINs[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void loginPINCompletedEventHandler(object sender, loginPINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginPINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginPINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updatePINForPlayCompletedEventHandler(object sender, updatePINForPlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePINForPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePINForPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updatePINRecCompletedEventHandler(object sender, updatePINRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePINRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePINRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doRepurchaseTransactionCompletedEventHandler(object sender, doRepurchaseTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRepurchaseTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRepurchaseTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPendingRepurchasesCompletedEventHandler(object sender, getPendingRepurchasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPendingRepurchasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPendingRepurchasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Repurchases[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Repurchases[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRepurchasesForPINCompletedEventHandler(object sender, getRepurchasesForPINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepurchasesForPINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepurchasesForPINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Repurchases[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Repurchases[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRepurchasesForDateRangeCompletedEventHandler(object sender, getRepurchasesForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepurchasesForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepurchasesForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Repurchases[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Repurchases[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRepurchaseStatusCompletedEventHandler(object sender, getRepurchaseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepurchaseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepurchaseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteRepurchaseRecCompletedEventHandler(object sender, deleteRepurchaseRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRepurchaseRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRepurchaseRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllRepurchasesForDateRangeCompletedEventHandler(object sender, deleteAllRepurchasesForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllRepurchasesForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllRepurchasesForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createNewRepurchaseCompletedEventHandler(object sender, createNewRepurchaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewRepurchaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewRepurchaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRedemptionDataCompletedEventHandler(object sender, getRedemptionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRedemptionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRedemptionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Redemptions Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Redemptions)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllRedemptionsCompletedEventHandler(object sender, getAllRedemptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRedemptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRedemptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Redemptions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Redemptions[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRedemptionsFromDateCompletedEventHandler(object sender, getRedemptionsFromDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRedemptionsFromDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRedemptionsFromDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Redemptions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Redemptions[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllRedemptionsForDateRangeCompletedEventHandler(object sender, getAllRedemptionsForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRedemptionsForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRedemptionsForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Redemptions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Redemptions[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllRedemptionsForDateRangeCompletedEventHandler(object sender, deleteAllRedemptionsForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllRedemptionsForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllRedemptionsForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllRedemptionsForTransactionRangeCompletedEventHandler(object sender, getAllRedemptionsForTransactionRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRedemptionsForTransactionRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRedemptionsForTransactionRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Redemptions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Redemptions[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveRedemptionDataCompletedEventHandler(object sender, saveRedemptionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveRedemptionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveRedemptionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllSessionDefPCBCompletedEventHandler(object sender, GetAllSessionDefPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSessionDefPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSessionDefPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionDefPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionDefPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllSessionGameDefPCBCompletedEventHandler(object sender, GetAllSessionGameDefPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSessionGameDefPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSessionGameDefPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionGameDefPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionGameDefPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSessionDefDataCompletedEventHandler(object sender, saveSessionDefDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSessionDefDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSessionDefDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSessionGameDefDataCompletedEventHandler(object sender, saveSessionGameDefDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSessionGameDefDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSessionGameDefDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateSessionDefPCBCompletedEventHandler(object sender, updateSessionDefPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSessionDefPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSessionDefPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSessionDefPCBCompletedEventHandler(object sender, getSessionDefPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionDefPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionDefPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionDefPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionDefPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSessionGameDefPCBCompletedEventHandler(object sender, getSessionGameDefPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionGameDefPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionGameDefPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionGameDefPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionGameDefPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteSessionDefPCBCompletedEventHandler(object sender, deleteSessionDefPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteSessionDefPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteSessionDefPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteSessionGameDefPCBCompletedEventHandler(object sender, deleteSessionGameDefPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteSessionGameDefPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteSessionGameDefPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateSessionPCBForLastGameCompletedEventHandler(object sender, updateSessionPCBForLastGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSessionPCBForLastGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSessionPCBForLastGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void closeSessionPCBCompletedEventHandler(object sender, closeSessionPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeSessionPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeSessionPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllSessionsPCBForDateRangeCompletedEventHandler(object sender, getAllSessionsPCBForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSessionsPCBForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSessionsPCBForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionsPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionsPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllSessionsPCBDataForDateRangeCompletedEventHandler(object sender, getAllSessionsPCBDataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSessionsPCBDataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSessionsPCBDataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionsPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionsPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllSessionsPCBDataForDateRangeCompletedEventHandler(object sender, deleteAllSessionsPCBDataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllSessionsPCBDataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllSessionsPCBDataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllSessionGamesPCBCompletedEventHandler(object sender, GetAllSessionGamesPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSessionGamesPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSessionGamesPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GamesPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GamesPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createAndStartSessionPCBCompletedEventHandler(object sender, createAndStartSessionPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAndStartSessionPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAndStartSessionPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCurSessionPCBCompletedEventHandler(object sender, getCurSessionPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurSessionPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurSessionPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionsPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionsPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSessionPCBCompletedEventHandler(object sender, getSessionPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionsPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionsPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSessionReportPCBCompletedEventHandler(object sender, getSessionReportPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionReportPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionReportPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionReportPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionReportPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void closeGamePCBCompletedEventHandler(object sender, closeGamePCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeGamePCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeGamePCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addGamePCBPrizeAmtCompletedEventHandler(object sender, addGamePCBPrizeAmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addGamePCBPrizeAmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addGamePCBPrizeAmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateGameBallsCompletedEventHandler(object sender, updateGameBallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGameBallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGameBallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveAndStartGamePCBCompletedEventHandler(object sender, saveAndStartGamePCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAndStartGamePCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAndStartGamePCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveGamePCBDataCompletedEventHandler(object sender, saveGamePCBDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveGamePCBDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveGamePCBDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllGamePCBDataForDateRangeCompletedEventHandler(object sender, deleteAllGamePCBDataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllGamePCBDataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllGamePCBDataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllGamePCBDataForDateRangeCompletedEventHandler(object sender, getAllGamePCBDataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllGamePCBDataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllGamePCBDataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GamesPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GamesPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllGamePCBDataCompletedEventHandler(object sender, getAllGamePCBDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllGamePCBDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllGamePCBDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GamesPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GamesPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCurrentGamePCBDataCompletedEventHandler(object sender, getCurrentGamePCBDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentGamePCBDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentGamePCBDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GamesPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GamesPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGamePCBDataCompletedEventHandler(object sender, getGamePCBDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGamePCBDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGamePCBDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GamesPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GamesPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBallNumsLCS16CompletedEventHandler(object sender, getBallNumsLCS16CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBallNumsLCS16CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBallNumsLCS16CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateGameBallsLCS16CompletedEventHandler(object sender, updateGameBallsLCS16CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGameBallsLCS16CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGameBallsLCS16CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBallNumsS16CompletedEventHandler(object sender, getBallNumsS16CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBallNumsS16CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBallNumsS16CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateGameBallsS16CompletedEventHandler(object sender, updateGameBallsS16CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGameBallsS16CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGameBallsS16CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBallNumsLCBCompletedEventHandler(object sender, getBallNumsLCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBallNumsLCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBallNumsLCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateGameBallsLCBCompletedEventHandler(object sender, updateGameBallsLCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGameBallsLCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGameBallsLCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void closeGameCompletedEventHandler(object sender, closeGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void closeGamesCompletedEventHandler(object sender, closeGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void closeGame24CompletedEventHandler(object sender, closeGame24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeGame24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeGame24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveGame24DataCompletedEventHandler(object sender, saveGame24DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveGame24DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveGame24DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllGame24DataForDateRangeCompletedEventHandler(object sender, deleteAllGame24DataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllGame24DataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllGame24DataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllGame24DataForDateRangeCompletedEventHandler(object sender, getAllGame24DataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllGame24DataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllGame24DataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Games24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Games24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllGame24DataCompletedEventHandler(object sender, getAllGame24DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllGame24DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllGame24DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Games24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Games24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCurrentGame24ListCompletedEventHandler(object sender, getCurrentGame24ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentGame24ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentGame24ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAll4CurrentGame24DataCompletedEventHandler(object sender, getAll4CurrentGame24DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAll4CurrentGame24DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAll4CurrentGame24DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Games24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Games24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCurrentGame24DataCompletedEventHandler(object sender, getCurrentGame24DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentGame24DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentGame24DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Games24 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Games24)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGame24DataCompletedEventHandler(object sender, getGame24DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGame24DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGame24DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Games24 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Games24)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveProgressiveCompletedEventHandler(object sender, saveProgressiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveProgressiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveProgressiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addToProgressiveCompletedEventHandler(object sender, addToProgressiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addToProgressiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addToProgressiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getProgressiveWinAmtCompletedEventHandler(object sender, getProgressiveWinAmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgressiveWinAmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgressiveWinAmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getProgressiveDataCompletedEventHandler(object sender, getProgressiveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgressiveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgressiveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProgressiveData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProgressiveData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getServerDateTimeCompletedEventHandler(object sender, getServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPOSErrorListCompletedEventHandler(object sender, getPOSErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPOSErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPOSErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public POSLogEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((POSLogEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getErrorListCompletedEventHandler(object sender, getErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCallerLogListCompletedEventHandler(object sender, getCallerLogListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCallerLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCallerLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallerLogEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallerLogEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void logErrorCompletedEventHandler(object sender, logErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void logPOSLogCompletedEventHandler(object sender, logPOSLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logPOSLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logPOSLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void logCallerLogCompletedEventHandler(object sender, logCallerLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logCallerLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logCallerLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getLocationCodeCompletedEventHandler(object sender, getLocationCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocationCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocationCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCards24CompletedEventHandler(object sender, getCards24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCards24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCards24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardData24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardData24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCard24CompletedEventHandler(object sender, getCard24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCard24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCard24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CardData24 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CardData24)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateBonus24CompletedEventHandler(object sender, updateBonus24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateBonus24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateBonus24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBonus24CompletedEventHandler(object sender, getBonus24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBonus24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBonus24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bonus24 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bonus24)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateSalesDataCompletedEventHandler(object sender, updateSalesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSalesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSalesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveSalesDataCompletedEventHandler(object sender, saveSalesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSalesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSalesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSalesDataCompletedEventHandler(object sender, getSalesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSalesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSalesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Sales Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Sales)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllSalesDataForDateRangeCompletedEventHandler(object sender, getAllSalesDataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSalesDataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSalesDataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Sales[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Sales[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllSalesDataForDateRangeCompletedEventHandler(object sender, deleteAllSalesDataForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllSalesDataForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllSalesDataForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllPOSetDataCompletedEventHandler(object sender, deleteAllPOSetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllPOSetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllPOSetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deletePOSetDataCompletedEventHandler(object sender, deletePOSetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePOSetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePOSetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPOSetsCompletedEventHandler(object sender, getAllPOSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPOSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPOSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public POSets24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((POSets24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPOSetDataCompletedEventHandler(object sender, getPOSetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPOSetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPOSetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public POSets24 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((POSets24)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void savePOSetDataCompletedEventHandler(object sender, savePOSetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class savePOSetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal savePOSetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllBingoPatternDataCompletedEventHandler(object sender, deleteAllBingoPatternDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllBingoPatternDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllBingoPatternDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllBingoPatternsCompletedEventHandler(object sender, getAllBingoPatternsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllBingoPatternsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllBingoPatternsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BingoPatterns[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BingoPatterns[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBingoPatternDataCompletedEventHandler(object sender, getBingoPatternDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBingoPatternDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBingoPatternDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BingoPatterns Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BingoPatterns)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveBingoPatternDataCompletedEventHandler(object sender, saveBingoPatternDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveBingoPatternDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveBingoPatternDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void initializeDBCompletedEventHandler(object sender, initializeDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class initializeDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal initializeDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void lastErrorCompletedEventHandler(object sender, lastErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lastErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lastErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setLastErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveAutoBallsRecordCompletedEventHandler(object sender, saveAutoBallsRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAutoBallsRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAutoBallsRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getNextAutoBallRecordCompletedEventHandler(object sender, getNextAutoBallRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextAutoBallRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextAutoBallRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoBalls Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoBalls)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAutoBallRecordCompletedEventHandler(object sender, getAutoBallRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAutoBallRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAutoBallRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoBalls Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoBalls)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAutoBallRecordCountCompletedEventHandler(object sender, getAutoBallRecordCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAutoBallRecordCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAutoBallRecordCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllUsersCompletedEventHandler(object sender, getAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteUserByUserIDCompletedEventHandler(object sender, deleteUserByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserDataByLoginNameCompletedEventHandler(object sender, getUserDataByLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDataByLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDataByLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserDataByUserIDCompletedEventHandler(object sender, getUserDataByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDataByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDataByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateUserDataByUserIDCompletedEventHandler(object sender, updateUserDataByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUserDataByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUserDataByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createNewUserDataCompletedEventHandler(object sender, createNewUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPlayerCountForGameCompletedEventHandler(object sender, getPlayerCountForGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayerCountForGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayerCountForGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getMachineStatusCompletedEventHandler(object sender, getMachineStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMachineStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMachineStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EGMTerminals Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EGMTerminals)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateMachineStatusCompletedEventHandler(object sender, updateMachineStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMachineStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMachineStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void removeGameFromEGMCompletedEventHandler(object sender, removeGameFromEGMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeGameFromEGMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeGameFromEGMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void registerGameOnEGMCompletedEventHandler(object sender, registerGameOnEGMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerGameOnEGMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerGameOnEGMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getEGMGamesCompletedEventHandler(object sender, getEGMGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEGMGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEGMGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllInstalledGamesCompletedEventHandler(object sender, getAllInstalledGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllInstalledGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllInstalledGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstalledGames[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstalledGames[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getInstalledGameDataCompletedEventHandler(object sender, getInstalledGameDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInstalledGameDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInstalledGameDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstalledGames Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstalledGames)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateInstalledGameDataCompletedEventHandler(object sender, updateInstalledGameDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateInstalledGameDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateInstalledGameDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteInstalledGameDataCompletedEventHandler(object sender, deleteInstalledGameDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteInstalledGameDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteInstalledGameDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllEGMTerminalsCompletedEventHandler(object sender, getAllEGMTerminalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllEGMTerminalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllEGMTerminalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EGMTerminals[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EGMTerminals[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteEGMTerminalDataCompletedEventHandler(object sender, deleteEGMTerminalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEGMTerminalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEGMTerminalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateMachineDataCompletedEventHandler(object sender, updateMachineDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMachineDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMachineDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAndMoveCardIndexPositionsCompletedEventHandler(object sender, getAndMoveCardIndexPositionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAndMoveCardIndexPositionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAndMoveCardIndexPositionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveCardIndexPositionsDataCompletedEventHandler(object sender, saveCardIndexPositionsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveCardIndexPositionsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveCardIndexPositionsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updatePlaysRecForBalancesCompletedEventHandler(object sender, updatePlaysRecForBalancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePlaysRecForBalancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePlaysRecForBalancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addCardToPlayPCBCompletedEventHandler(object sender, addCardToPlayPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCardToPlayPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCardToPlayPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void savePlayDataCompletedEventHandler(object sender, savePlayDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class savePlayDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal savePlayDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPlayDataCompletedEventHandler(object sender, getPlayDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPlaysForGameCompletedEventHandler(object sender, getAllPlaysForGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPlaysForGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPlaysForGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plays[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plays[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPlaysForPINCompletedEventHandler(object sender, getAllPlaysForPINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPlaysForPINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPlaysForPINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plays[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plays[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllPlaysForDateRangeCompletedEventHandler(object sender, deleteAllPlaysForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllPlaysForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllPlaysForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deletePlayRecordCompletedEventHandler(object sender, deletePlayRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePlayRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePlayRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPlaysForDateRangeCompletedEventHandler(object sender, getAllPlaysForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPlaysForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPlaysForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plays[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plays[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllPlaysGameSysForDateRangeCompletedEventHandler(object sender, getAllPlaysGameSysForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPlaysGameSysForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPlaysGameSysForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plays[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plays[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateWinRecCompletedEventHandler(object sender, updateWinRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWinRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWinRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteWinnnerRecCompletedEventHandler(object sender, deleteWinnnerRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteWinnnerRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteWinnnerRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllWinsForGameRangeCompletedEventHandler(object sender, deleteAllWinsForGameRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllWinsForGameRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllWinsForGameRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getWinDataForGameCompletedEventHandler(object sender, getWinDataForGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWinDataForGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWinDataForGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllWinDataForGameCompletedEventHandler(object sender, getAllWinDataForGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllWinDataForGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllWinDataForGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllWinDataForGameRangeCompletedEventHandler(object sender, getAllWinDataForGameRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllWinDataForGameRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllWinDataForGameRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getWinDataCompletedEventHandler(object sender, getWinDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWinDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWinDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getWinDataForPlayCompletedEventHandler(object sender, getWinDataForPlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWinDataForPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWinDataForPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveWinnerDataCompletedEventHandler(object sender, saveWinnerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveWinnerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveWinnerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllVerifiedWinnersForPINCompletedEventHandler(object sender, getAllVerifiedWinnersForPINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllVerifiedWinnersForPINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllVerifiedWinnersForPINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getWinnerListForDateRangeCompletedEventHandler(object sender, getWinnerListForDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWinnerListForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWinnerListForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WinnerListItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WinnerListItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllWinnersForPlayCompletedEventHandler(object sender, getAllWinnersForPlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllWinnersForPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllWinnersForPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteAllWinners24ForPlayIDRangeCompletedEventHandler(object sender, deleteAllWinners24ForPlayIDRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllWinners24ForPlayIDRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllWinners24ForPlayIDRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllWinners24ForPlayIDRangeCompletedEventHandler(object sender, getAllWinners24ForPlayIDRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllWinners24ForPlayIDRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllWinners24ForPlayIDRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners24[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners24[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getWinnerData24CompletedEventHandler(object sender, getWinnerData24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWinnerData24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWinnerData24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Winners24 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Winners24)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveWinnerData24CompletedEventHandler(object sender, saveWinnerData24CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveWinnerData24CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveWinnerData24CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateWinningCardPCBStatusCompletedEventHandler(object sender, updateWinningCardPCBStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWinningCardPCBStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWinningCardPCBStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateWinningCardPCBRecCompletedEventHandler(object sender, updateWinningCardPCBRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWinningCardPCBRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWinningCardPCBRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createWinningCardPCBRecCompletedEventHandler(object sender, createWinningCardPCBRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWinningCardPCBRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWinningCardPCBRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void anyWinnersYetPCBCompletedEventHandler(object sender, anyWinnersYetPCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class anyWinnersYetPCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal anyWinnersYetPCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getWinningCardPCBDataCompletedEventHandler(object sender, getWinningCardPCBDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWinningCardPCBDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWinningCardPCBDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WinnersPCB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WinnersPCB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getWinningCardPCBListCompletedEventHandler(object sender, getWinningCardPCBListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWinningCardPCBListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWinningCardPCBListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WinnersPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WinnersPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllWinnersPCBForPlayIDRangeCompletedEventHandler(object sender, getAllWinnersPCBForPlayIDRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllWinnersPCBForPlayIDRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllWinnersPCBForPlayIDRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WinnersPCB[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WinnersPCB[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteWinnerPCBRecCompletedEventHandler(object sender, deleteWinnerPCBRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteWinnerPCBRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteWinnerPCBRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteWinnersForGamePCBCompletedEventHandler(object sender, deleteWinnersForGamePCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteWinnersForGamePCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteWinnersForGamePCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteWinnersPCBForGameIDRangeCompletedEventHandler(object sender, deleteWinnersPCBForGameIDRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteWinnersPCBForGameIDRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteWinnersPCBForGameIDRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void uniquePINCompletedEventHandler(object sender, uniquePINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uniquePINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uniquePINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591